{"metadata": {"name": "Google Mail", "description": "Search for messages, create drafts and send emails.", "secrets": {"/api/actions/google-mail/send-draft/run": {"actionPackage": "Google Mail", "action": "send_draft", "secrets": {"token": {"type": "OAuth2Secret", "provider": "google", "scopes": ["https://www.googleapis.com/auth/gmail.send"], "description": "the OAuth2 token for the user"}}}, "/api/actions/google-mail/move-email/run": {"actionPackage": "Google Mail", "action": "move_email", "secrets": {"token": {"type": "OAuth2Secret", "provider": "google", "scopes": ["https://www.googleapis.com/auth/gmail.modify"], "description": "the OAuth2 token for the user"}}}, "/api/actions/google-mail/create-draft/run": {"actionPackage": "Google Mail", "action": "create_draft", "secrets": {"token": {"type": "OAuth2Secret", "provider": "google", "scopes": ["https://www.googleapis.com/auth/gmail.modify"], "description": "the OAuth2 token for the user"}}}, "/api/actions/google-mail/send-email/run": {"actionPackage": "Google Mail", "action": "send_email", "secrets": {"token": {"type": "OAuth2Secret", "provider": "google", "scopes": ["https://www.googleapis.com/auth/gmail.send"], "description": "the OAuth2 token for the user"}}}, "/api/actions/google-mail/get-email-content/run": {"actionPackage": "Google Mail", "action": "get_email_content", "secrets": {"token": {"type": "OAuth2Secret", "provider": "google", "scopes": ["https://www.googleapis.com/auth/gmail.readonly"], "description": "the OAuth2 token for the user"}}}, "/api/actions/google-mail/list-drafts/run": {"actionPackage": "Google Mail", "action": "list_drafts", "secrets": {"token": {"type": "OAuth2Secret", "provider": "google", "scopes": ["https://www.googleapis.com/auth/gmail.modify", "https://www.googleapis.com/auth/gmail.readonly"], "description": "the OAuth2 token for the user"}}}, "/api/actions/google-mail/remove-labels/run": {"actionPackage": "Google Mail", "action": "remove_labels", "secrets": {"token": {"type": "OAuth2Secret", "provider": "google", "scopes": ["https://www.googleapis.com/auth/gmail.modify"], "description": "the OAuth2 token for the user"}}}, "/api/actions/google-mail/search-emails/run": {"actionPackage": "Google Mail", "action": "search_emails", "secrets": {"token": {"type": "OAuth2Secret", "provider": "google", "scopes": ["https://www.googleapis.com/auth/gmail.readonly"], "description": "the OAuth2 token for the user"}}}, "/api/actions/google-mail/update-draft/run": {"actionPackage": "Google Mail", "action": "update_draft", "secrets": {"token": {"type": "OAuth2Secret", "provider": "google", "scopes": ["https://www.googleapis.com/auth/gmail.modify"], "description": "the OAuth2 token for the user"}}}}, "action_package_version": "1.1.2", "metadata_version": 2}, "openapi.json": {"openapi": "3.1.0", "info": {"title": "Sema4.ai Action Server", "version": "1.1.2"}, "servers": [{"url": "http://localhost:8080"}], "paths": {"/api/actions/google-mail/send-draft/run": {"post": {"summary": "Send Draft", "description": "Send draft email by its draft id.", "operationId": "send_draft", "requestBody": {"content": {"application/json": {"schema": {"properties": {"draft_id": {"type": "string", "title": "Draft Id", "description": "the id of the draft to send"}}, "type": "object", "required": ["draft_id"]}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"properties": {"result": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Result", "description": "The result for the action if it ran successfully"}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error", "description": "The error message if the action failed for some reason"}}, "type": "object", "title": "Response for Send Draft", "description": "The result of the email sending"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "x-openai-isConsequential": true}}, "/api/actions/google-mail/move-email/run": {"post": {"summary": "Move Email", "description": "Moves emails using Google Email labels with a specific email id or with a query filter.\nMaximum of 100 emails can be moved at a time (set that on \"all\").\n\nEmail can be moved to a label or to the trash (label=\"TRASH\").", "operationId": "move_email", "requestBody": {"content": {"application/json": {"schema": {"properties": {"query": {"type": "string", "title": "Query", "description": "the query filter to find emails to move", "default": ""}, "email_ids": {"properties": {"id_list": {"items": {"type": "string"}, "type": "array", "title": "Id List", "description": "A list of email ids", "default": []}}, "type": "object", "title": "Email Ids", "description": "the email id(s) to move", "default": ""}, "label": {"type": "string", "title": "Label", "description": "the label name to apply to the emails", "default": ""}, "max_results": {"type": "integer", "title": "Max Results", "description": "the maximum number of emails to move (default 100)", "default": 100}}, "type": "object"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"properties": {"result": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Result", "description": "The result for the action if it ran successfully"}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error", "description": "The error message if the action failed for some reason"}}, "type": "object", "title": "Response for Move Email", "description": "The result of the operation"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "x-openai-isConsequential": true}}, "/api/actions/google-mail/create-draft/run": {"post": {"summary": "Create Draft", "description": "Create a draft of an email.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "operationId": "create_draft", "requestBody": {"content": {"application/json": {"schema": {"properties": {"subject": {"type": "string", "title": "Subject", "description": "the subject of the email", "default": ""}, "body": {"type": "string", "title": "Body", "description": "the message of the email", "default": ""}, "to": {"type": "string", "title": "To", "description": "the email address(es) of the recipient(s), comma separated", "default": ""}, "cc": {"type": "string", "title": "Cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "default": ""}, "bcc": {"type": "string", "title": "Bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "default": ""}}, "type": "object"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"properties": {"result": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Result", "description": "The result for the action if it ran successfully"}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error", "description": "The error message if the action failed for some reason"}}, "type": "object", "title": "Response for Create Draft", "description": "The id of the drafted email"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "x-openai-isConsequential": true}}, "/api/actions/google-mail/send-email/run": {"post": {"summary": "Send Email", "description": "Send the email to the recipient(s) using the Gmail API.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "operationId": "send_email", "requestBody": {"content": {"application/json": {"schema": {"properties": {"subject": {"type": "string", "title": "Subject", "description": "the subject of the email"}, "body": {"type": "string", "title": "Body", "description": "the message of the email"}, "to": {"type": "string", "title": "To", "description": "the email address(es) of the recipient(s), comma separated"}, "cc": {"type": "string", "title": "Cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "default": ""}, "bcc": {"type": "string", "title": "Bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "default": ""}}, "type": "object", "required": ["subject", "body", "to"]}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"properties": {"result": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Result", "description": "The result for the action if it ran successfully"}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error", "description": "The error message if the action failed for some reason"}}, "type": "object", "title": "Response for Send Email", "description": "Result of the email sending, \"email sent\" if successful"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "x-openai-isConsequential": true}}, "/api/actions/google-mail/get-email-content/run": {"post": {"summary": "Get Email Content", "description": "Get Google email content with specific email id or with\na query filter.", "operationId": "get_email_content", "requestBody": {"content": {"application/json": {"schema": {"properties": {"email_id": {"type": "string", "title": "Email Id", "description": "the email id to get the content from", "default": ""}, "query": {"type": "string", "title": "Query", "description": "the query filter to apply to the emails", "default": ""}, "max_results": {"type": "integer", "title": "Max Results", "description": "the maximum number of emails to return (default 10)", "default": 10}}, "type": "object"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"properties": {"result": {"anyOf": [{"properties": {"items": {"items": {"properties": {"id_": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Id ", "description": "The ID of the email", "default": ""}, "subject": {"type": "string", "title": "Subject", "description": "The subject of the email", "default": ""}, "body": {"type": "string", "title": "Body", "description": "The body of the email", "default": ""}, "from_": {"type": "string", "title": "From ", "description": "The sender of the email", "default": ""}, "to": {"type": "string", "title": "To", "description": "The recipient of the email", "default": ""}, "date": {"type": "string", "title": "Date", "description": "The date the email was sent", "default": ""}, "labels": {"items": {"type": "string"}, "type": "array", "title": "Labels", "description": "The labels associated with the email", "default": []}, "attachments": {"items": {"properties": {"filename": {"type": "string", "title": "Filename", "description": "The name of the attachment", "default": ""}, "mimetype": {"type": "string", "title": "Mimetype", "description": "The MIME type of the attachment", "default": ""}, "filesize": {"type": "integer", "title": "Filesize", "description": "The filesize of the attachment in bytes", "default": 0}}, "type": "object", "title": "Attachment"}, "type": "array", "title": "Attachments", "default": [], "decscription": "The attachments of the email"}}, "type": "object", "title": "Email"}, "type": "array", "title": "Items", "description": "A list of emails matching the filter", "default": []}, "error_message": {"type": "string", "title": "Error Message", "description": "Possible error message", "default": ""}}, "type": "object", "title": "Emails"}, {"type": "null"}], "description": "The result for the action if it ran successfully"}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error", "description": "The error message if the action failed for some reason"}}, "type": "object", "title": "Response for Get Email Content", "description": "The list of emails matching filter"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "x-openai-isConsequential": false}}, "/api/actions/google-mail/list-drafts/run": {"post": {"summary": "List Drafts", "description": "Get list of drafts or filter drafts with a query.", "operationId": "list_drafts", "requestBody": {"content": {"application/json": {"schema": {"properties": {"query": {"type": "string", "title": "Query", "description": "query to filter drafts or list all drafts", "default": ""}}, "type": "object"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"properties": {"result": {"anyOf": [{"properties": {"items": {"items": {"properties": {"draft_id": {"type": "string", "title": "Draft Id", "description": "The ID of the draft", "default": ""}, "message": {"type": "object", "title": "Message", "description": "The message of the draft", "default": {}}}, "type": "object", "title": "Draft"}, "type": "array", "title": "Items", "description": "A list of drafts matching the filter", "default": []}, "error_message": {"type": "string", "title": "Error Message", "description": "Possible error message", "default": ""}}, "type": "object", "title": "Drafts"}, {"type": "null"}], "description": "The result for the action if it ran successfully"}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error", "description": "The error message if the action failed for some reason"}}, "type": "object", "title": "Response for List Drafts", "description": "The list of draft emails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "x-openai-isConsequential": true}}, "/api/actions/google-mail/remove-labels/run": {"post": {"summary": "Remove Labels", "description": "Removes label(s) from emails using Google Email labels with a specific email id or with a query filter.", "operationId": "remove_labels", "requestBody": {"content": {"application/json": {"schema": {"properties": {"query": {"type": "string", "title": "Query", "description": "the query filter to find emails to remove labels", "default": ""}, "email_ids": {"properties": {"id_list": {"items": {"type": "string"}, "type": "array", "title": "Id List", "description": "A list of email ids", "default": []}}, "type": "object", "title": "Email Ids", "description": "the email id(s) to move", "default": ""}, "labels": {"type": "string", "title": "Labels", "description": "the label names to remove from the emails (comma separated)", "default": ""}, "max_results": {"type": "integer", "title": "Max Results", "description": "the maximum number of emails to remove labels", "default": 100}}, "type": "object"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"properties": {"result": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Result", "description": "The result for the action if it ran successfully"}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error", "description": "The error message if the action failed for some reason"}}, "type": "object", "title": "Response for Remove Labels", "description": "The result of the operation"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "x-openai-isConsequential": true}}, "/api/actions/google-mail/search-emails/run": {"post": {"summary": "Search Emails", "description": "Search Google emails with a query filter.\nPlease inform user if there are more than `max_results` emails.", "operationId": "search_emails", "requestBody": {"content": {"application/json": {"schema": {"properties": {"query": {"type": "string", "title": "Query", "description": "the query filter to apply to the emails"}, "max_results": {"type": "integer", "title": "Max Results", "description": "the maximum number of emails to return (default 100)", "default": 100}}, "type": "object", "required": ["query"]}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"properties": {"result": {"anyOf": [{"properties": {"items": {"items": {"properties": {"id_": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Id ", "description": "The ID of the email", "default": ""}, "subject": {"type": "string", "title": "Subject", "description": "The subject of the email", "default": ""}, "body": {"type": "string", "title": "Body", "description": "The body of the email", "default": ""}, "from_": {"type": "string", "title": "From ", "description": "The sender of the email", "default": ""}, "to": {"type": "string", "title": "To", "description": "The recipient of the email", "default": ""}, "date": {"type": "string", "title": "Date", "description": "The date the email was sent", "default": ""}, "labels": {"items": {"type": "string"}, "type": "array", "title": "Labels", "description": "The labels associated with the email", "default": []}, "attachments": {"items": {"properties": {"filename": {"type": "string", "title": "Filename", "description": "The name of the attachment", "default": ""}, "mimetype": {"type": "string", "title": "Mimetype", "description": "The MIME type of the attachment", "default": ""}, "filesize": {"type": "integer", "title": "Filesize", "description": "The filesize of the attachment in bytes", "default": 0}}, "type": "object", "title": "Attachment"}, "type": "array", "title": "Attachments", "default": [], "decscription": "The attachments of the email"}}, "type": "object", "title": "Email"}, "type": "array", "title": "Items", "description": "A list of emails matching the filter", "default": []}, "error_message": {"type": "string", "title": "Error Message", "description": "Possible error message", "default": ""}}, "type": "object", "title": "Emails"}, {"type": "null"}], "description": "The result for the action if it ran successfully"}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error", "description": "The error message if the action failed for some reason"}}, "type": "object", "title": "Response for Search Emails", "description": "The list of emails matching filter"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "x-openai-isConsequential": false}}, "/api/actions/google-mail/update-draft/run": {"post": {"summary": "Update Draft", "description": "Update existing draft email by its draft id.\nIf draft_id is unknown then use action \"get_email_content\" to get the draft_id.\n\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "operationId": "update_draft", "requestBody": {"content": {"application/json": {"schema": {"properties": {"draft_id": {"type": "string", "title": "Draft Id", "description": "identify the draft by its id"}, "subject": {"type": "string", "title": "Subject", "description": "the subject of the email", "default": ""}, "body": {"type": "string", "title": "Body", "description": "the message of the email", "default": ""}, "to": {"type": "string", "title": "To", "description": "the email address(es) of the recipient(s), comma separated", "default": ""}, "cc": {"type": "string", "title": "Cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "default": ""}, "bcc": {"type": "string", "title": "Bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "default": ""}}, "type": "object", "required": ["draft_id"]}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"properties": {"result": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Result", "description": "The result for the action if it ran successfully"}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error", "description": "The error message if the action failed for some reason"}}, "type": "object", "title": "Response for Update Draft", "description": "The id of the drafted email"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "x-openai-isConsequential": true}}}, "components": {"schemas": {"HTTPValidationError": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Errors"}}, "type": "object", "title": "HTTPValidationError"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}}}}