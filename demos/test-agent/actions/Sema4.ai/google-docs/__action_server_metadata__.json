{"metadata": {"name": "Google Docs", "description": "Get contents of Google Docs as Markdown", "secrets": {"/api/actions/google-docs/get-document-by-name/run": {"actionPackage": "Google Docs", "action": "get_document_by_name", "secrets": {"oauth_access_token": {"type": "OAuth2Secret", "provider": "google", "scopes": ["https://www.googleapis.com/auth/drive.readonly"], "description": "The OAuth2 Google access token"}}}, "/api/actions/google-docs/get-document-by-id/run": {"actionPackage": "Google Docs", "action": "get_document_by_id", "secrets": {"oauth_access_token": {"type": "OAuth2Secret", "provider": "google", "scopes": ["https://www.googleapis.com/auth/documents.readonly"], "description": "The OAuth2 Google access token"}}}, "/api/actions/google-docs/create-document/run": {"actionPackage": "Google Docs", "action": "create_document", "secrets": {"oauth_access_token": {"type": "OAuth2Secret", "provider": "google", "scopes": ["https://www.googleapis.com/auth/drive.file"]}}}, "/api/actions/google-docs/append-to-document-by-id/run": {"actionPackage": "Google Docs", "action": "append_to_document_by_id", "secrets": {"oauth_access_token": {"type": "OAuth2Secret", "provider": "google", "scopes": ["https://www.googleapis.com/auth/drive.file"]}}}, "/api/actions/google-docs/append-to-document-by-name/run": {"actionPackage": "Google Docs", "action": "append_to_document_by_name", "secrets": {"oauth_access_token": {"type": "OAuth2Secret", "provider": "google", "scopes": ["https://www.googleapis.com/auth/drive.file"]}}}}, "action_package_version": "1.3.1", "metadata_version": 2}, "openapi.json": {"openapi": "3.1.0", "info": {"title": "Sema4.ai Action Server", "version": "1.1.2"}, "servers": [{"url": "http://localhost:8080"}], "paths": {"/api/actions/google-docs/get-document-by-name/run": {"post": {"summary": "Get Document By Name", "description": "Get a Google Document by its name.\nIf multiple documents with the same name are found,\nyou need to use the ID of the document to load it.\nHint: Copy-pasting the URL of the document in the Agent will allow it to fetch the document by ID\n\nApostrophes in the title need to be escaped with a backslash.\nThe result is the Document formatted using the Extended Markdown Syntax.", "operationId": "get_document_by_name", "requestBody": {"content": {"application/json": {"schema": {"properties": {"name": {"type": "string", "title": "Name", "description": "The Google Document name"}}, "type": "object", "required": ["name"]}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"properties": {"result": {"anyOf": [{"properties": {"title": {"type": "string", "title": "Title", "description": "The title of the document."}, "document_id": {"type": "string", "title": "Document Id", "description": "The ID of the document."}, "body": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Body", "description": "The body of the document written in Extended Markdown."}}, "type": "object", "required": ["title", "document_id"], "title": "MarkdownDocument"}, {"type": "null"}], "description": "The result for the action if it ran successfully"}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error", "description": "The error message if the action failed for some reason"}}, "type": "object", "title": "Response for Get Document By Name", "description": "The Google Document as a markdown formatted string."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/actions/google-docs/get-document-by-id/run": {"post": {"summary": "Get Document By Id", "description": "Get a Google Document by its ID. The result is the Document formatted using the Extended Markdown Syntax.", "operationId": "get_document_by_id", "requestBody": {"content": {"application/json": {"schema": {"properties": {"document_id": {"type": "string", "title": "Document Id", "description": "The Google Document ID."}}, "type": "object", "required": ["document_id"]}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"properties": {"result": {"anyOf": [{"properties": {"title": {"type": "string", "title": "Title", "description": "The title of the document."}, "document_id": {"type": "string", "title": "Document Id", "description": "The ID of the document."}, "body": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Body", "description": "The body of the document written in Extended Markdown."}}, "type": "object", "required": ["title", "document_id"], "title": "MarkdownDocument"}, {"type": "null"}], "description": "The result for the action if it ran successfully"}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error", "description": "The error message if the action failed for some reason"}}, "type": "object", "title": "Response for Get Document By Id", "description": "The Google Document as a markdown formatted string."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/actions/google-docs/create-document/run": {"post": {"summary": "Create Document", "description": "Create a new Google Document from an Extended Markdown string.\nArgs:\n    title: The Google Document title\n    body: The Google Document body as an Extended Markdown string.\n    oauth_access_token: The OAuth2 Google access token", "operationId": "create_document", "requestBody": {"content": {"application/json": {"schema": {"properties": {"title": {"type": "string", "title": "Title", "description": ""}, "body": {"type": "string", "title": "Body", "description": ""}}, "type": "object", "required": ["title", "body"]}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"properties": {"result": {"anyOf": [{"properties": {"title": {"type": "string", "title": "Title", "description": "The title of the document."}, "document_id": {"type": "string", "title": "Document Id", "description": "The ID of the document."}}, "type": "object", "required": ["title", "document_id"], "title": "DocumentInfo"}, {"type": "null"}], "description": "The result for the action if it ran successfully"}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error", "description": "The error message if the action failed for some reason"}}, "type": "object", "title": "Response for Create Document", "description": "A structure containing the Document"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "x-openai-isConsequential": true}}, "/api/actions/google-docs/append-to-document-by-id/run": {"post": {"summary": "Append To Document By Id", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its ID.\nArgs:\n    document_id: The Google Document ID\n    body: The Google Document body as an Extended Markdown string\n    oauth_access_token: The OAuth2 Google access token", "operationId": "append_to_document_by_id", "requestBody": {"content": {"application/json": {"schema": {"properties": {"document_id": {"type": "string", "title": "Document Id", "description": ""}, "body": {"type": "string", "title": "Body", "description": ""}}, "type": "object", "required": ["document_id", "body"]}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"properties": {"result": {"anyOf": [{"properties": {"title": {"type": "string", "title": "Title", "description": "The title of the document."}, "document_id": {"type": "string", "title": "Document Id", "description": "The ID of the document."}}, "type": "object", "required": ["title", "document_id"], "title": "DocumentInfo"}, {"type": "null"}], "description": "The result for the action if it ran successfully"}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error", "description": "The error message if the action failed for some reason"}}, "type": "object", "title": "Response for Append To Document By Id", "description": "A structure containing the Document."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "x-openai-isConsequential": true}}, "/api/actions/google-docs/append-to-document-by-name/run": {"post": {"summary": "Append To Document By Name", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its name.\nArgs:\n    name: The Google Document name\n    body: The Google Document body as an Extended Markdown string\n    oauth_access_token: The OAuth2 Google access token", "operationId": "append_to_document_by_name", "requestBody": {"content": {"application/json": {"schema": {"properties": {"name": {"type": "string", "title": "Name", "description": ""}, "body": {"type": "string", "title": "Body", "description": ""}}, "type": "object", "required": ["name", "body"]}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"properties": {"result": {"anyOf": [{"properties": {"title": {"type": "string", "title": "Title", "description": "The title of the document."}, "document_id": {"type": "string", "title": "Document Id", "description": "The ID of the document."}}, "type": "object", "required": ["title", "document_id"], "title": "DocumentInfo"}, {"type": "null"}], "description": "The result for the action if it ran successfully"}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error", "description": "The error message if the action failed for some reason"}}, "type": "object", "title": "Response for Append To Document By Name", "description": "A structure containing the Document."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "x-openai-isConsequential": true}}}, "components": {"schemas": {"HTTPValidationError": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Errors"}}, "type": "object", "title": "HTTPValidationError"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}}}}