{
    "inputs": [
        {
            "inputName": "get items from list",
            "inputValue": {
                "site": {
                    "site_id": "",
                    "site_name": "Communication site"
                },
                "list_id": "",
                "list_name": "Issue tracker",
                "top": 0,
                "vscode:request:oauth2": {
                    "token": {
                        "type": "OAuth2Secret",
                        "provider": "microsoft",
                        "scopes": [
                            "Sites.Read.All"
                        ],
                        "access_token": "<access-token-will-be-requested-by-vscode>"
                    }
                }
            }
        },
        {
            "inputName": "list_id only",
            "inputValue": {
                "site": {
                    "site_id": "",
                    "site_name": "Communication site"
                },
                "list_id": "6ecd6026-57d1-4577-9011-33406880e57f",
                "list_name": "",
                "top": 10,
                "vscode:request:oauth2": {
                    "token": {
                        "type": "OAuth2Secret",
                        "provider": "microsoft",
                        "scopes": [
                            "Sites.Read.All"
                        ],
                        "access_token": "<access-token>"
                    }
                }
            }
        }
    ],
    "metadata": {
        "actionName": "get_sharepoint_list_items",
        "actionRelativePath": "microsoft_sharepoint/sharepoint_list_action.py",
        "schemaDescription": [
            "site.site_id: string: The unique Microsoft site ID, if known.",
            "site.site_name: string: The human-readable name of the site, if known.",
            "list_id: string: ID of the SharePoint list.",
            "list_name: string: Name of the SharePoint list.",
            "top: integer: Maximum number of items to return (default 100)."
        ],
        "managedParamsSchemaDescription": {
            "token": {
                "type": "OAuth2Secret",
                "description": "OAuth2 token to use for the operation.",
                "provider": "microsoft",
                "scopes": [
                    "Sites.Read.All"
                ]
            }
        },
        "inputFileVersion": "v3",
        "kind": "action",
        "actionSignature": "action/args: \"token: OAuth2Secret[Literal['microsoft'], list[Literal['Sites.Read.All']]], site: SiteIdentifier=SiteIdentifier(), list_id: str='', list_name: str='', top: int=100\""
    }
}