{
    "inputs": [
        {
            "inputName": "Append to existing tab by title",
            "inputValue": {
                "name": "Sema4.ai Actions - Test Document",
                "body": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi tortor neque, ornare vitae lectus at, molestie tempor purus. Suspendisse potenti. Nam tellus nisl, viverra non tristique ac, blandit sit amet sapien. In hac habitasse platea dictumst. Etiam eget congue sem. Fusce accumsan ligula nec ultricies pharetra. In cursus hendrerit elit, a ultrices leo pharetra quis. Morbi et vehicula diam. Fusce dictum est sed orci tincidunt sagittis vitae eu urna.",
                "tab_title": "Tab 2",
                "vscode:request:oauth2": {
                    "oauth_access_token": {
                        "type": "OAuth2Secret",
                        "provider": "google",
                        "scopes": [
                            "https://www.googleapis.com/auth/drive",
                            "https://www.googleapis.com/auth/documents"
                        ],
                        "access_token": "<access-token-will-be-requested-by-vscode>"
                    }
                }
            }
        },
        {
            "inputName": "Append to existing tab by index",
            "inputValue": {
                "name": "Sema4.ai Actions - Test Document",
                "body": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi tortor neque, ornare vitae lectus at, molestie tempor purus. Suspendisse potenti. Nam tellus nisl, viverra non tristique ac, blandit sit amet sapien. In hac habitasse platea dictumst. Etiam eget congue sem. Fusce accumsan ligula nec ultricies pharetra. In cursus hendrerit elit, a ultrices leo pharetra quis. Morbi et vehicula diam. Fusce dictum est sed orci tincidunt sagittis vitae eu urna.",
                "tab_index": 0,
                "vscode:request:oauth2": {
                    "oauth_access_token": {
                        "type": "OAuth2Secret",
                        "provider": "google",
                        "scopes": [
                            "https://www.googleapis.com/auth/drive",
                            "https://www.googleapis.com/auth/documents"
                        ],
                        "access_token": "<access-token-will-be-requested-by-vscode>"
                    }
                }
            }
        },
        {
            "inputName": "Append to non-existing tab",
            "inputValue": {
                "name": "Sema4.ai Actions - Test Document",
                "body": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi tortor neque, ornare vitae lectus at, molestie tempor purus. Suspendisse potenti. Nam tellus nisl, viverra non tristique ac, blandit sit amet sapien. In hac habitasse platea dictumst. Etiam eget congue sem. Fusce accumsan ligula nec ultricies pharetra. In cursus hendrerit elit, a ultrices leo pharetra quis. Morbi et vehicula diam. Fusce dictum est sed orci tincidunt sagittis vitae eu urna.",
                "tab_title": "Tab 3",
                "vscode:request:oauth2": {
                    "oauth_access_token": {
                        "type": "OAuth2Secret",
                        "provider": "google",
                        "scopes": [
                            "https://www.googleapis.com/auth/drive",
                            "https://www.googleapis.com/auth/documents"
                        ],
                        "access_token": "<access-token-will-be-requested-by-vscode>"
                    }
                }
            }
        },
        {
            "inputName": "Extensive doc append",
            "inputValue": {
                "name": "Sema4.ai Actions - Test Document",
                "body": "# :rocket: 5 Remote MCP Servers That Transform Enterprise AI Agents\n\nEnterprise AI agents are no longer just sophisticated chatbots. They're becoming autonomous workers that manage tickets, process documents, execute code, and orchestrate complex workflows across your entire tech stack.\n\nWhat's driving this transformation? Remote Model Context Protocol (MCP) servers that connect agents directly to your enterprise tools and data. With platforms like Sema4.ai and Docker's MCP Gateway, you can now plug production-grade MCP servers into your agents in minutes—no custom integrations required.\n\nHere are 5 remote MCP servers that are changing how enterprises deploy AI agents today.\n\n## What Are Remote MCP Servers?\n\nThink of remote MCP servers as universal translators between AI agents and your business tools. Instead of building custom integrations for every app your agents need to access, MCP provides a standardized protocol that makes tools instantly available to any compatible agent.\n\nRemote MCP servers run independently from your agents, offering:\n- **Plug-and-play connectivity** to enterprise applications\n- **Standardized interfaces** that work across different AI platforms  \n- **Scalable architecture** that grows with your automation needs\n- **Enterprise-grade security** with proper authentication and audit trails\n\n## Why Enterprise Agents Need MCP Servers\n\nTraditional AI implementations hit a wall when they need to take action. An LLM can analyze your customer data, but it can't update a support ticket. It can draft a project plan, but it can't create the actual tasks in your project management system.\n\nMCP servers bridge this gap by giving agents the ability to:\n- **Access live enterprise data** without complex data pipelines\n- **Execute actions** across multiple business systems\n- **Maintain context** between different tools and workflows\n- **Scale operations** without exponential integration complexity\n\n## Top 5 Remote MCP Servers for Enterprise AI Agents\n\n### 1. :ticket: Atlassian & Linear MCP Servers\n**Use case:** Project management, issue tracking, workflow automation\n\nYour agents become project coordinators that can actually manage work, not just talk about it. These MCP servers enable agents to:\n- Create, update, and assign tickets across Jira, Confluence, and Linear\n- Track project progress and identify bottlenecks automatically\n- Generate status reports with real-time data from multiple projects\n- Escalate issues based on predefined business rules\n\n**Real-world example:** \"Create a high-priority ticket for the API timeout issue, assign it to the backend team, and schedule a follow-up review for Friday.\"\n→ Your agent creates the ticket, sets priority, assigns team members, and adds calendar events—all in one workflow.\n\n### 2. :books: Notion MCP Server  \n**Use case:** Knowledge management, documentation workflows, team collaboration\n\nTransform your Notion workspace into an intelligent knowledge base that agents can both read from and contribute to. The Notion MCP server allows agents to:\n- Search across all workspaces to find relevant documentation\n- Create and update pages with structured information\n- Extract action items and deadlines from meeting notes\n- Maintain company wikis and process documentation automatically\n\n**Real-world example:** \"Update our onboarding checklist with the new security training requirements and notify the HR team.\"\n→ The agent finds the relevant Notion page, adds the new requirements, and sends notifications to stakeholders.\n\n### 3. :globe_with_meridians: Browser Automation MCP Servers (Playwright/Hyperbrowser)\n**Use case:** Web-based workflows, legacy system integration, data extraction\n\nMany enterprise workflows still happen in web applications that don't have APIs. Browser automation MCP servers give your agents the ability to:\n- Navigate complex web applications like a human user\n- Extract data from legacy systems and web portals  \n- Automate form submissions and multi-step web processes\n- Integrate with SaaS tools that lack proper API access\n\n**Real-world example:** \"Check our vendor portal for new invoices and create corresponding entries in our accounting system.\"\n→ The agent logs into the vendor portal, scrapes invoice data, and populates your financial software—bridging systems that don't talk to each other.\n\n### 4. :file_folder: Box MCP Server\n**Use case:** Document workflows, file management, compliance processes\n\nDocument-heavy processes are perfect for AI automation, but agents need secure access to your file systems. The Box MCP server enables agents to:\n- Search and retrieve documents across enterprise file structures\n- Process contracts, invoices, and reports automatically\n- Maintain version control and audit trails for document changes\n- Trigger workflows based on document uploads or modifications\n\n**Real-world example:** \"When a new contract is uploaded to the Legal folder, extract key terms, create a summary, and route it for approval.\"\n→ Your agent monitors file uploads, processes documents intelligently, and initiates business workflows automatically.\n\n### 5. :snake: E2B MCP Server  \n**Use case:** Secure code execution, data analysis, custom calculations\n\nSometimes agents need to perform complex calculations, run custom scripts, or process data in ways that require actual code execution. The E2B MCP server provides:\n- Secure, sandboxed Python execution environments\n- Real-time data processing and analysis capabilities\n- Custom business logic implementation without security risks\n- Integration with data science workflows and reporting tools\n\n**Real-world example:** \"Analyze this quarter's sales data, identify trends by region, and generate a forecast model for next quarter.\"\n→ The agent executes Python scripts in a secure environment, processes your data, and delivers actionable insights.\n\n## How to Choose the Right MCP Server for Your Use Case\n\nWhen evaluating MCP servers for your enterprise agents, consider:\n\n**Security & Compliance**\n- Does it support your authentication methods (OAuth, SSO)?\n- Are audit trails and access controls built-in?\n- Can it operate within your security boundaries?\n\n**Integration Depth**  \n- How well does it connect with your existing tech stack?\n- Does it support the specific actions your workflows require?\n- Can it handle your data volumes and performance needs?\n\n**Maintenance & Support**\n- Is it actively maintained by the vendor or community?\n- Are there enterprise support options available?\n- How easy is it to troubleshoot and monitor?\n\n## The Future of Enterprise AI: Standardization Meets Flexibility\n\nRemote MCP servers represent a fundamental shift in how we think about AI integration. Instead of building point-to-point connections between agents and tools, we're creating a standardized ecosystem where any agent can work with any properly configured tool.\n\nThis standardization doesn't limit flexibility—it enhances it. With MCP, you can:\n- **Mix and match** different agents and tools without custom development\n- **Scale integrations** across departments without exponential complexity  \n- **Future-proof** your AI investments as new tools and agents emerge\n- **Maintain security** through consistent protocols and governance\n\nAt Sema4.ai, we're embracing this future by supporting both our proven Actions framework and the emerging MCP ecosystem. This gives our customers the best of both worlds: enterprise-grade security and control with the flexibility to integrate with the broader AI tooling landscape.\n\n---\n\n**Ready to supercharge your enterprise AI agents with remote MCP servers?** Explore how Sema4.ai's native MCP support can transform your workflows while maintaining the security and governance your enterprise demands.\n\n---\n\n**SEO Optimization Notes:**\n\n|**Primary Keywords**|Remote MCP Servers|**Secondary Keywords**|Enterprise AI Agents, MCP Integration, AI Agent Tools|\n|---|---|---|---|\n|**SEO Title**|Top 5 Remote MCP Servers for Enterprise AI Agents \\| Sema4.ai||\n|**Meta Description**|Discover 5 remote MCP servers transforming enterprise AI agents: Atlassian, Notion, Browser automation, Box, and E2B for scalable business automation.||\n|**URL Suggestion**|/remote-mcp-servers-enterprise-ai-agents||",
                "tab_title": "Tab 5",
                "vscode:request:oauth2": {
                    "oauth_access_token": {
                        "type": "OAuth2Secret",
                        "provider": "google",
                        "scopes": [
                            "https://www.googleapis.com/auth/drive",
                            "https://www.googleapis.com/auth/documents"
                        ],
                        "access_token": "<access-token-will-be-requested-by-vscode>"
                    }
                }
            }
        }
    ],
    "metadata": {
        "actionName": "append_to_document_by_name",
        "actionRelativePath": "actions.py",
        "schemaDescription": [
            "name: string: The Google Document name",
            "body: string: The Google Document body as an Extended Markdown string",
            "tab_index: integer: Optional tab index to append content to a specific tab",
            "tab_title: string: Optional tab title to append content to a specific tab"
        ],
        "managedParamsSchemaDescription": {
            "oauth_access_token": {
                "type": "OAuth2Secret",
                "description": "The OAuth2 Google access token",
                "provider": "google",
                "scopes": [
                    "https://www.googleapis.com/auth/documents",
                    "https://www.googleapis.com/auth/drive.file"
                ]
            }
        },
        "inputFileVersion": "v3",
        "kind": "action",
        "actionSignature": "action/args: \"name: str, body: str, oauth_access_token: OAuth2Secret[Literal['google'], list[Literal['https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/documents']]], tab_index: int=None, tab_title: str=None\""
    }
}