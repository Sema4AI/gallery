{"packages": {"AI Browsing": {"name": "AI Browsing", "versions": [{"description": "LLM assisted browsing", "version": "1.0.0", "methods": [{"method_name": "perform_browser_task", "description": "Perform a browser task with the given task description, URL, and optional source data.\nUse `input_data` if possible to prevent multiple calls to pass the same data to the same task (url).", "parameters": [{"name": "task_description", "description": "the description of the task to perform", "required": true, "type": "string"}, {"name": "url", "description": "the URL of the website to browse", "required": true, "type": "string"}, {"name": "source_data", "description": "Optional source data to be used during the task execution. Given as JSON string.\nWhen a list is provided, the task will be executed separately for each item in the list.\nExamples:\n- List of strings: [\"item1\", \"item2\", \"item3\"]\n- Single dictionary: {\"username\": \"john\", \"password\": \"secret\"}\n- List of dictionaries: [{\"name\": \"John\", \"email\": \"john@example.com\"},\n                       {\"name\": \"Jane\", \"email\": \"jane@example.com\"}]", "required": true, "type": "string"}, {"name": "output_model", "description": "Optional string description to structure the output.\nExample: \"list of name(str) and title(str) combinations\"", "required": false, "type": "string"}, {"name": "headless", "description": "whether to run the browser in headless mode (default: True)", "required": false, "type": "boolean"}, {"name": "timeout", "description": "maximum time in seconds to wait for task completion (default: 300)", "required": false, "type": "integer"}, {"name": "cookies_file", "description": "Optional path to a file containing cookies to be used during the task execution.", "required": false, "type": "string"}]}]}, {"description": "LLM assisted browsing", "version": "1.0.1", "methods": [{"method_name": "perform_browser_task", "description": "Perform a browser task with the given task description, URL, and optional source data.\nUse `input_data` if possible to prevent multiple calls to pass the same data to the same task (url).", "parameters": [{"name": "task_description", "description": "the description of the task to perform", "required": true, "type": "string"}, {"name": "url", "description": "the URL of the website to browse", "required": true, "type": "string"}, {"name": "source_data", "description": "Optional source data to be used during the task execution. Given as JSON string.\nWhen a list is provided, the task will be executed separately for each item in the list.\nExamples:\n- List of strings: [\"item1\", \"item2\", \"item3\"]\n- Single dictionary: {\"username\": \"john\", \"password\": \"secret\"}\n- List of dictionaries: [{\"name\": \"John\", \"email\": \"john@example.com\"},\n                       {\"name\": \"Jane\", \"email\": \"jane@example.com\"}]", "required": true, "type": "string"}, {"name": "output_model", "description": "Optional string description to structure the output.\nExample: \"list of name(str) and title(str) combinations\"", "required": false, "type": "string"}, {"name": "headless", "description": "whether to run the browser in headless mode (default: True)", "required": false, "type": "boolean"}, {"name": "timeout", "description": "maximum time in seconds to wait for task completion (default: 300)", "required": false, "type": "integer"}, {"name": "cookies_file", "description": "Optional path to a file containing cookies to be used during the task execution.", "required": false, "type": "string"}]}]}, {"description": "LLM assisted browsing", "version": "1.0.2", "methods": [{"method_name": "perform_browser_task", "description": "Perform a browser task with the given task description, URL, and optional source data.\nUse `input_data` if possible to prevent multiple calls to pass the same data to the same task (url).", "parameters": [{"name": "task_description", "description": "the description of the task to perform", "required": true, "type": "string"}, {"name": "url", "description": "the URL of the website to browse", "required": true, "type": "string"}, {"name": "source_data", "description": "Optional source data to be used during the task execution. Given as JSON string.\nWhen a list is provided, the task will be executed separately for each item in the list.\nExamples:\n- List of strings: [\"item1\", \"item2\", \"item3\"]\n- Single dictionary: {\"username\": \"john\", \"password\": \"secret\"}\n- List of dictionaries: [{\"name\": \"John\", \"email\": \"john@example.com\"},\n                       {\"name\": \"Jane\", \"email\": \"jane@example.com\"}]", "required": true, "type": "string"}, {"name": "output_model", "description": "Optional string description to structure the output.\nExample: \"list of name(str) and title(str) combinations\"", "required": false, "type": "string"}, {"name": "headless", "description": "whether to run the browser in headless mode (default: True)", "required": false, "type": "boolean"}, {"name": "timeout", "description": "maximum time in seconds to wait for task completion (default: 300)", "required": false, "type": "integer"}, {"name": "cookies_file", "description": "Optional path to a file containing cookies to be used during the task execution.", "required": false, "type": "string"}]}]}]}, "Browsing": {"name": "Browsing", "versions": [{"description": "Base actions needed to get information from websites and interact with them.", "version": "1.0.0", "methods": [{"method_name": "get_website_content", "description": "Gets the text content, form elements, links and other elements of a website.\nIf content-type is not \"text/html\" then just URL content is returned.", "parameters": [{"name": "url", "description": "the URL of the website", "required": true, "type": "string"}]}, {"method_name": "download_file", "description": "Download a file from the given URL.", "parameters": [{"name": "file_url", "description": "the URL of the file to download", "required": true, "type": "string"}, {"name": "max_filesize_in_megabytes", "description": "maximum file size in MB to download", "required": false, "type": "integer"}, {"name": "target_folder", "description": "folder to download the file", "required": false, "type": "string"}]}, {"method_name": "fill_elements", "description": "Fill form elements according to input values given in the Form object.", "parameters": [{"name": "web_page", "description": " details on the web page and its form elements", "required": true, "type": "object"}]}]}, {"description": "Get information from websites, and interact with them.", "version": "1.0.1", "methods": [{"method_name": "get_website_content", "description": "Gets the text content, form elements, links and other elements of a website.\nIf content-type is not \"text/html\" then just URL content is returned.", "parameters": [{"name": "url", "description": "the URL of the website", "required": true, "type": "string"}]}, {"method_name": "download_file", "description": "Download a file from the given URL.", "parameters": [{"name": "file_url", "description": "the URL of the file to download", "required": true, "type": "string"}, {"name": "max_filesize_in_megabytes", "description": "maximum file size in MB to download", "required": false, "type": "integer"}, {"name": "target_folder", "description": "folder to download the file", "required": false, "type": "string"}]}, {"method_name": "fill_elements", "description": "Fill form elements according to input values given in the Form object.", "parameters": [{"name": "web_page", "description": " details on the web page and its form elements", "required": true, "type": "object"}]}]}, {"description": "Get information from websites, and interact with them.", "version": "1.0.2", "methods": [{"method_name": "get_website_content", "description": "Gets the text content, form elements, links and other elements of a website.\nIf content-type is not \"text/html\" then just URL content is returned.", "parameters": [{"name": "url", "description": "the URL of the website", "required": true, "type": "string"}, {"name": "user_agent", "description": "the user agent to use for browsing", "required": true, "type": "object"}]}, {"method_name": "download_file", "description": "Download a file from the given URL.", "parameters": [{"name": "file_url", "description": "the URL of the file to download", "required": true, "type": "string"}, {"name": "max_filesize_in_megabytes", "description": "maximum file size in MB to download", "required": false, "type": "integer"}, {"name": "target_folder", "description": "folder to download the file", "required": false, "type": "string"}]}, {"method_name": "fill_elements", "description": "Fill form elements according to input values given in the Form object.", "parameters": [{"name": "web_page", "description": " details on the web page and its form elements", "required": true, "type": "object"}]}]}, {"description": "Get information from websites, and interact with them.", "version": "1.1.0", "methods": [{"method_name": "get_website_content", "description": "Gets the text content, form elements, links and other elements of a website.\nIf content-type is not \"text/html\" then just URL content is returned.", "parameters": [{"name": "url", "description": "the URL of the website", "required": true, "type": "string"}, {"name": "user_agent", "description": "the user agent to use for browsing", "required": false, "type": "object"}]}, {"method_name": "download_file", "description": "Download a file from the given URL.", "parameters": [{"name": "file_url", "description": "the URL of the file to download", "required": true, "type": "string"}, {"name": "max_filesize_in_megabytes", "description": "maximum file size in MB to download", "required": false, "type": "integer"}, {"name": "target_folder", "description": "folder to download the file", "required": false, "type": "string"}]}, {"method_name": "fill_elements", "description": "Fill form elements according to input values given in the Form object.", "parameters": [{"name": "web_page", "description": " details on the web page and its form elements", "required": true, "type": "object"}]}]}, {"description": "Get information from websites, and interact with them.", "version": "1.1.1", "methods": [{"method_name": "get_website_content", "description": "Gets the text content, form elements, links and other elements of a website.\nIf content-type is not \"text/html\" then just URL content is returned.", "parameters": [{"name": "url", "description": "the URL of the website", "required": true, "type": "string"}, {"name": "user_agent", "description": "the user agent to use for browsing", "required": false, "type": "object"}]}, {"method_name": "download_file", "description": "Download a file from the given URL.", "parameters": [{"name": "file_url", "description": "the URL of the file to download", "required": true, "type": "string"}, {"name": "max_filesize_in_megabytes", "description": "maximum file size in MB to download", "required": false, "type": "integer"}, {"name": "target_folder", "description": "folder to download the file", "required": false, "type": "string"}]}, {"method_name": "fill_elements", "description": "Fill form elements according to input values given in the Form object.", "parameters": [{"name": "web_page", "description": " details on the web page and its form elements", "required": true, "type": "object"}]}]}, {"description": "Get information from websites, and interact with them.", "version": "1.1.2", "methods": [{"method_name": "get_website_content", "description": "Gets the text content, form elements, links and other elements of a website.\nIf content-type is not \"text/html\" then just URL content is returned.", "parameters": [{"name": "url", "description": "the URL of the website", "required": true, "type": "string"}, {"name": "user_agent", "description": "the user agent to use for browsing", "required": false, "type": "object"}]}, {"method_name": "download_file", "description": "Download a file from the given URL.", "parameters": [{"name": "file_url", "description": "the URL of the file to download", "required": true, "type": "string"}, {"name": "max_filesize_in_megabytes", "description": "maximum file size in MB to download", "required": false, "type": "integer"}, {"name": "target_folder", "description": "folder to download the file", "required": false, "type": "string"}]}, {"method_name": "fill_elements", "description": "Fill form elements according to input values given in the Form object.", "parameters": [{"name": "web_page", "description": " details on the web page and its form elements", "required": true, "type": "object"}]}]}, {"description": "Get information from websites, and interact with them.", "version": "1.2.0", "methods": [{"method_name": "get_website_content", "description": "Gets the text content, form elements, links and other elements of a website.\nIf content-type is not \"text/html\" then just URL content is returned.", "parameters": [{"name": "url", "description": "the URL of the website", "required": true, "type": "string"}, {"name": "user_agent", "description": "the user agent to use for browsing", "required": false, "type": "object"}]}, {"method_name": "download_file", "description": "Download a file from the given URL.", "parameters": [{"name": "file_url", "description": "the URL of the file to download", "required": true, "type": "string"}, {"name": "max_filesize_in_megabytes", "description": "maximum file size in MB to download", "required": false, "type": "integer"}, {"name": "target_folder", "description": "folder to download the file", "required": false, "type": "string"}]}, {"method_name": "fill_elements", "description": "Fill form elements according to input values given in the Form object.", "parameters": [{"name": "web_page", "description": " details on the web page and its form elements", "required": true, "type": "object"}]}]}, {"description": "Get information from websites, and interact with them.", "version": "1.2.1", "methods": [{"method_name": "get_website_content", "description": "Gets the text content, form elements, links and other elements of a website.\nIf content-type is not \"text/html\" then just URL content is returned.", "parameters": [{"name": "url", "description": "the URL of the website", "required": true, "type": "string"}, {"name": "user_agent", "description": "the user agent to use for browsing", "required": false, "type": "object"}]}, {"method_name": "download_file", "description": "Download a file from the given URL.", "parameters": [{"name": "file_url", "description": "the URL of the file to download", "required": true, "type": "string"}, {"name": "max_filesize_in_megabytes", "description": "maximum file size in MB to download", "required": false, "type": "integer"}, {"name": "target_folder", "description": "folder to download the file", "required": false, "type": "string"}]}, {"method_name": "fill_elements", "description": "Fill form elements according to input values given in the Form object.", "parameters": [{"name": "web_page", "description": " details on the web page and its form elements", "required": true, "type": "object"}]}]}, {"description": "Get information from websites, and interact with them.", "version": "1.2.2", "methods": [{"method_name": "get_website_content", "description": "Gets the text content, form elements, links and other elements of a website.\nIf content-type is not \"text/html\" then just URL content is returned.", "parameters": [{"name": "url", "description": "the URL of the website", "required": true, "type": "string"}, {"name": "user_agent", "description": "the user agent to use for browsing", "required": false, "type": "object"}]}, {"method_name": "download_file", "description": "Download a file from the given URL.", "parameters": [{"name": "file_url", "description": "the URL of the file to download", "required": true, "type": "string"}, {"name": "max_filesize_in_megabytes", "description": "maximum file size in MB to download", "required": false, "type": "integer"}, {"name": "target_folder", "description": "folder to download the file", "required": false, "type": "string"}]}, {"method_name": "fill_elements", "description": "Fill form elements according to input values given in the Form object.", "parameters": [{"name": "web_page", "description": " details on the web page and its form elements", "required": true, "type": "object"}]}]}, {"description": "Get information from websites, and interact with them.", "version": "1.3.0", "methods": [{"method_name": "get_website_content", "description": "Gets the text content, form elements, links and other elements of a website.\nIf content-type is not \"text/html\" then just URL content is returned.", "parameters": [{"name": "url", "description": "the URL of the website", "required": true, "type": "string"}, {"name": "user_agent", "description": "the user agent to use for browsing", "required": false, "type": "object"}]}, {"method_name": "download_file", "description": "Download a file from the given URL.", "parameters": [{"name": "file_url", "description": "the URL of the file to download", "required": true, "type": "string"}, {"name": "max_filesize_in_megabytes", "description": "maximum file size in MB to download", "required": false, "type": "integer"}, {"name": "target_folder", "description": "folder to download the file", "required": false, "type": "string"}]}, {"method_name": "fill_elements", "description": "Fill form elements according to input values given in the Form object.", "parameters": [{"name": "web_page", "description": " details on the web page and its form elements", "required": true, "type": "object"}]}]}, {"description": "Get information from websites, and interact with them.", "version": "1.3.1", "methods": [{"method_name": "get_website_content", "description": "Gets the text content, form elements, links and other elements of a website.\nIf content-type is not \"text/html\" then just URL content is returned.", "parameters": [{"name": "url", "description": "the URL of the website", "required": true, "type": "string"}, {"name": "user_agent", "description": "the user agent to use for browsing", "required": false, "type": "object"}]}, {"method_name": "download_file", "description": "Download a file from the given URL.", "parameters": [{"name": "file_url", "description": "the URL of the file to download", "required": true, "type": "string"}, {"name": "max_filesize_in_megabytes", "description": "maximum file size in MB to download", "required": false, "type": "integer"}, {"name": "target_folder", "description": "folder to download the file", "required": false, "type": "string"}]}, {"method_name": "fill_elements", "description": "Fill form elements according to input values given in the Form object.", "parameters": [{"name": "web_page", "description": " details on the web page and its form elements", "required": true, "type": "object"}]}]}, {"description": "Get information from websites, and interact with them.", "version": "1.3.2", "methods": [{"method_name": "get_website_content", "description": "Gets the text content, form elements, links and other elements of a website.\nIf content-type is not \"text/html\" then just URL content is returned.", "parameters": [{"name": "url", "description": "the URL of the website", "required": true, "type": "string"}, {"name": "user_agent", "description": "the user agent to use for browsing", "required": false, "type": "object"}]}, {"method_name": "download_file", "description": "Download a file from the given URL.", "parameters": [{"name": "file_url", "description": "the URL of the file to download", "required": true, "type": "string"}, {"name": "max_filesize_in_megabytes", "description": "maximum file size in MB to download", "required": false, "type": "integer"}, {"name": "target_folder", "description": "folder to download the file", "required": false, "type": "string"}]}, {"method_name": "fill_elements", "description": "Fill form elements according to input values given in the Form object.", "parameters": [{"name": "web_page", "description": " details on the web page and its form elements", "required": true, "type": "object"}]}]}, {"description": "Get information from websites, and interact with them.", "version": "1.3.3", "methods": [{"method_name": "get_website_content", "description": "Gets the text content, form elements, links and other elements of a website.\nIf content-type is not \"text/html\" then just URL content is returned.", "parameters": [{"name": "url", "description": "the URL of the website", "required": true, "type": "string"}, {"name": "user_agent", "description": "the user agent to use for browsing", "required": false, "type": "object"}]}, {"method_name": "download_file", "description": "Download a file from the given URL.", "parameters": [{"name": "file_url", "description": "the URL of the file to download", "required": true, "type": "string"}, {"name": "max_filesize_in_megabytes", "description": "maximum file size in MB to download", "required": false, "type": "integer"}, {"name": "target_folder", "description": "folder to download the file", "required": false, "type": "string"}]}, {"method_name": "fill_elements", "description": "Fill form elements according to input values given in the Form object.", "parameters": [{"name": "web_page", "description": " details on the web page and its form elements", "required": true, "type": "object"}]}]}]}, "Example Oil Gas Reports": {"name": "Example Oil Gas Reports", "versions": [{"description": "Example action package demonstrating oil and gas production data analysis using PostgreSQL database queries, showcasing well production tracking, field analysis, and decline curve modeling.", "version": "1.0.0", "methods": [{"method_name": "get_wells", "description": "Get the name of each well with production results.\nArgs:\n\nReturns:\n    List of distinct well names.", "parameters": []}, {"method_name": "get_production_for_well", "description": "Get production details for a specific well.", "parameters": [{"name": "wellName", "description": "Name of the specific well.", "required": true, "type": "string"}]}, {"method_name": "get_wells_by_company", "description": "Get all wells operated by a specific company.", "parameters": [{"name": "company", "description": "Name of the company.", "required": true, "type": "string"}]}, {"method_name": "get_total_production_by_field", "description": "Get total oil, water, and gas production for a specific field.", "parameters": [{"name": "fieldName", "description": "Name of the field.", "required": true, "type": "string"}]}, {"method_name": "get_top_producing_wells", "description": "Get the top producing wells based on total combined production.", "parameters": [{"name": "limit", "description": "Number of top wells to return.", "required": true, "type": "integer"}]}, {"method_name": "get_top_producing_wells_by_field", "description": "Get the top producing wells based on oil production for a specific field.", "parameters": [{"name": "fieldName", "description": "Name of the field to filter by - make sure the case is all upper case.", "required": true, "type": "string"}, {"name": "limit", "description": "Number of top wells to return.", "required": true, "type": "integer"}]}, {"method_name": "get_production_by_date_range_and_field", "description": "Get total production figures within a specific date range for a given field.", "parameters": [{"name": "startDate", "description": "Start date of the range (format: 'MM/DD/YYYY').", "required": true, "type": "string"}, {"name": "endDate", "description": "End date of the range (format: 'MM/DD/YYYY').", "required": true, "type": "string"}, {"name": "fieldName", "description": "Name of the field to filter by.", "required": true, "type": "string"}]}, {"method_name": "get_well_location", "description": "Get the locations of a specific.", "parameters": [{"name": "wellName", "description": "Name of the well.", "required": true, "type": "string"}]}, {"method_name": "get_monthly_production_for_well", "description": "Get monthly production details for a specific well in a given year.", "parameters": [{"name": "wellName", "description": "Name of the specific well.", "required": true, "type": "string"}, {"name": "year", "description": "Year for which to retrieve data.", "required": true, "type": "integer"}]}, {"method_name": "compare_well_monthly_production", "description": "Compare monthly production for a given well over a specified period.", "parameters": [{"name": "wellName", "description": "List of well names to compare.", "required": true, "type": "string"}, {"name": "startDate", "description": "Start date of the comparison period (format: 'MM/DD/YYYY').", "required": true, "type": "string"}, {"name": "endDate", "description": "End date of the comparison period (format: 'MM/DD/YYYY').", "required": true, "type": "string"}]}, {"method_name": "get_monthly_production_trends", "description": "Get monthly production trends for a specific field in a given year.", "parameters": [{"name": "fieldName", "description": "Name of the field, make sure the parameter is used in all lower case 'fieldname'", "required": true, "type": "string"}, {"name": "year", "description": "Year for which to retrieve data.", "required": true, "type": "string"}]}, {"method_name": "find_wells_within_radius", "description": "Find wells within a specified radius of a given well.", "parameters": [{"name": "wellName", "description": "Name of the well to use as the center point.", "required": true, "type": "string"}, {"name": "radius", "description": "Radius in meters.", "required": true, "type": "integer"}]}, {"method_name": "fit_exponential_decline_curve", "description": "Fit an exponential decline curve to the production data of a specific well.", "parameters": [{"name": "wellName", "description": "Name of the well", "required": true, "type": "string"}, {"name": "startDate", "description": "Start date of the analysis period (format: 'MM/DD/YYYY')", "required": true, "type": "string"}, {"name": "endDate", "description": "End date of the analysis period (format: 'MM/DD/YYYY')", "required": true, "type": "string"}]}, {"method_name": "get_full_company_name", "description": "Get the full company name that match the given search term.", "parameters": [{"name": "company", "description": "Partial name of the company to search for.", "required": true, "type": "string"}]}, {"method_name": "get_well_file_number", "description": "Get the file number for a specific well.", "parameters": [{"name": "wellName", "description": "Name of the well to search for.", "required": true, "type": "string"}]}]}]}, "Example Web Search": {"name": "Example Web Search", "versions": [{"description": "Example action package demonstrating Google search API integration with Sema4.ai demo API, showcasing structured data extraction including organic results, knowledge graph, places, and related searches.", "version": "1.0.0", "methods": [{"method_name": "search", "description": "Perform a search using the an API to Google Search and return a structured summary.", "parameters": [{"name": "q", "description": "The search query.", "required": true, "type": "string"}, {"name": "num", "description": "The number of results to return.", "required": true, "type": "integer"}]}]}]}, "Excel": {"name": "Excel", "versions": [{"description": "Operate on local Excel files directly.", "version": "2.0.0", "methods": [{"method_name": "create_workbook", "description": "Create a new local Excel file defined as workbook.\nThis will overwrite an already existing file and will try to guess the extension\n(xls or xlsx) if is not specified. It also creates a sheet with a default name\nwhich can be customized by providing an explicit `sheet_name`.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the initial sheet in the workbook. Leave it blank for\nrelying on the default name (\"Sheet\").", "required": false, "type": "string"}]}, {"method_name": "delete_workbook", "description": "Delete an existing local Excel file defined as workbook.\nWill return an error message if the passed file is not found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Create a new sheet in an already existing workbook.\nWill return an error message if the sheet already exists.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the new sheet to be added in the workbook.", "required": true, "type": "string"}]}, {"method_name": "delete_worksheet", "description": "Remove a sheet from an already existing workbook.\nWill return an error message if the sheet is not present.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want removed from the workbook.", "required": true, "type": "string"}]}, {"method_name": "add_rows", "description": "Add rows in an already existing worksheet of a workbook.\nThis action expects a table (list of lists) structure representing the rows and\ncolumns you want to append in the sheet. Optionally, a header can be specified\nright in the `data_table` input parameter, so one would be set at the beginning of\nthe sheet if needed, then the cells within a row can be mapped correctly to their\ncorresponding columns. If not null, this header is a vector containing the column\nnames you want to have as the first row in a newly filled sheet. Passing\na null to it will disregard the header presence and will rely on cells' order.\nWill return an error message if the workbook or worksheet can't be found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "data_table", "description": "A 2D matrix containing the sheet cell values.", "required": true, "type": "object"}]}, {"method_name": "set_cell", "description": "Set the value of a cell in an already existing worksheet of a workbook.\nThis action expects a string `value` to be written in the cell identified by the\ngiven `row` and `column`. If `has_header` is true, then the row index number is\nadjusted so it matches the target row in the sheet.\nWill return an error message if the workbook or worksheet can't be found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "row", "description": "The row number starting with 1.", "required": true, "type": "string"}, {"name": "column", "description": "The column letter or index.", "required": true, "type": "string"}, {"name": "value", "description": "The cell value to be set.", "required": true, "type": "string"}, {"name": "has_header", "description": "Instructs the action about the presence of a header in the sheet.", "required": false, "type": "boolean"}]}, {"method_name": "get_cell", "description": "Retrieve the value of a cell from an already existing worksheet of a workbook.\nThis action works similarly to `set_cell`, but instead of setting a value it\nactually returns the value found at the given position in the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "row", "description": "The row number starting with 1.", "required": true, "type": "string"}, {"name": "column", "description": "The column letter or index.", "required": true, "type": "string"}, {"name": "has_header", "description": "Instructs the action about the presence of a header in the sheet.", "required": false, "type": "boolean"}]}, {"method_name": "get_sheet_content", "description": "Retrieve the whole content of an already existing worksheet of a workbook.\nThis action retrieves all the cells found in the sheet and returns them in a table\nstructure. When set truthy, the `has_header` parameter will allow the action to\nconsider the first row in the sheet a header instead of an usual table row.\nWill return an error message if the workbook or worksheet can't be found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "has_header", "description": "Instructs the action about the presence of a header in the sheet.", "required": false, "type": "boolean"}]}, {"method_name": "get_workbook_schema", "description": "Retrieve the workbook overview defined as schema.\nThis action identifies the sheets found in the given workbook and for each one of\nthem it presents the first row which usually represents the header of the sheet.\nWill return an error message if the workbook can't be found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}]}, {"description": "Create, read and update sheets on local Excel files.", "version": "2.0.1", "methods": [{"method_name": "create_workbook", "description": "Create a new local Excel file defined as workbook.\nThis will overwrite an already existing file and will try to guess the extension\n(xls or xlsx) if is not specified. It also creates a sheet with a default name\nwhich can be customized by providing an explicit `sheet_name`.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the initial sheet in the workbook. Leave it blank for\nrelying on the default name (\"Sheet\").", "required": false, "type": "string"}]}, {"method_name": "delete_workbook", "description": "Delete an existing local Excel file defined as workbook.\nWill return an error message if the passed file is not found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Create a new sheet in an already existing workbook.\nWill return an error message if the sheet already exists.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the new sheet to be added in the workbook.", "required": true, "type": "string"}]}, {"method_name": "delete_worksheet", "description": "Remove a sheet from an already existing workbook.\nWill return an error message if the sheet is not present.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want removed from the workbook.", "required": true, "type": "string"}]}, {"method_name": "add_rows", "description": "Add rows in an already existing worksheet of a workbook.\nThis action expects a table (list of lists) structure representing the rows and\ncolumns you want to append in the sheet. Optionally, a header can be specified\nright in the `data_table` input parameter, so one would be set at the beginning of\nthe sheet if needed, then the cells within a row can be mapped correctly to their\ncorresponding columns. If not null, this header is a vector containing the column\nnames you want to have as the first row in a newly filled sheet. Passing\na null to it will disregard the header presence and will rely on cells' order.\nWill return an error message if the workbook or worksheet can't be found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "data_table", "description": "A 2D matrix containing the sheet cell values.", "required": true, "type": "object"}]}, {"method_name": "set_cell", "description": "Set the value of a cell in an already existing worksheet of a workbook.\nThis action expects a string `value` to be written in the cell identified by the\ngiven `row` and `column`. If `has_header` is true, then the row index number is\nadjusted so it matches the target row in the sheet.\nWill return an error message if the workbook or worksheet can't be found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "row", "description": "The row number starting with 1.", "required": true, "type": "string"}, {"name": "column", "description": "The column letter or index.", "required": true, "type": "string"}, {"name": "value", "description": "The cell value to be set.", "required": true, "type": "string"}, {"name": "has_header", "description": "Instructs the action about the presence of a header in the sheet.", "required": false, "type": "boolean"}]}, {"method_name": "get_cell", "description": "Retrieve the value of a cell from an already existing worksheet of a workbook.\nThis action works similarly to `set_cell`, but instead of setting a value it\nactually returns the value found at the given position in the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "row", "description": "The row number starting with 1.", "required": true, "type": "string"}, {"name": "column", "description": "The column letter or index.", "required": true, "type": "string"}, {"name": "has_header", "description": "Instructs the action about the presence of a header in the sheet.", "required": false, "type": "boolean"}]}, {"method_name": "get_sheet_content", "description": "Retrieve the whole content of an already existing worksheet of a workbook.\nThis action retrieves all the cells found in the sheet and returns them in a table\nstructure. When set truthy, the `has_header` parameter will allow the action to\nconsider the first row in the sheet a header instead of an usual table row.\nWill return an error message if the workbook or worksheet can't be found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "has_header", "description": "Instructs the action about the presence of a header in the sheet.", "required": false, "type": "boolean"}]}, {"method_name": "get_workbook_schema", "description": "Retrieve the workbook overview defined as schema.\nThis action identifies the sheets found in the given workbook and for each one of\nthem it presents the first row which usually represents the header of the sheet.\nWill return an error message if the workbook can't be found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}]}, {"description": "Create, read and update sheets on local Excel files.", "version": "3.0.0", "methods": [{"method_name": "create_workbook", "description": "Create a new local Excel file defined as workbook.\nThis will overwrite an already existing file and will try to guess the extension\n(xls or xlsx) if is not specified. It also creates a sheet with a default name\nwhich can be customized by providing an explicit `sheet_name`.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the initial sheet in the workbook. Leave it blank for\nrelying on the default name (\"Sheet\").", "required": false, "type": "string"}]}, {"method_name": "delete_workbook", "description": "Delete an existing local Excel file defined as workbook.\nWill return an error message if the passed file is not found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Create a new sheet in an already existing workbook.\nWill return an error message if the sheet already exists.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the new sheet to be added in the workbook.", "required": true, "type": "string"}]}, {"method_name": "delete_worksheet", "description": "Remove a sheet from an already existing workbook.\nWill return an error message if the sheet is not present.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want removed from the workbook.", "required": true, "type": "string"}]}, {"method_name": "add_rows", "description": "Add rows in an already existing worksheet of a workbook.\nThis will append the rows at the next empty index available. Only use this method on an empty file or\nwhen you want to add data to the end of the file. If you want to add a new column or manipulate data\nuse `update_sheet_rows` instead.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "data_table", "description": "A 2D matrix containing the sheet cell values.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 notation.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "start_cell", "description": "The cell from where to start the update. The end will be determined based on each row's length.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}]}, {"method_name": "get_cell", "description": "Retrieve the value of a cell from an already existing worksheet of a workbook.\nThis action works similarly to `set_cell`, but instead of setting a value it\nactually returns the value found at the given position in the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "row", "description": "The row number starting with 1.", "required": true, "type": "string"}, {"name": "column", "description": "The column letter or index.", "required": true, "type": "string"}]}, {"method_name": "get_sheet_content", "description": "Retrieve the whole content of an already existing worksheet of a workbook.\nThis action retrieves all the cells found in the sheet and returns them in a table\nstructure.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}]}, {"method_name": "get_workbook_schema", "description": "Retrieve the workbook overview defined as schema.\nThis action identifies the sheets found in the given workbook and for each one of\nthem it presents the first row which usually represents the header of the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}]}, {"description": "Create, read and update sheets on local Excel files.", "version": "3.0.1", "methods": [{"method_name": "create_workbook", "description": "Create a new local Excel file defined as workbook.\nThis will overwrite an already existing file and will try to guess the extension\n(xls or xlsx) if is not specified. It also creates a sheet with a default name\nwhich can be customized by providing an explicit `sheet_name`.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the initial sheet in the workbook. Leave it blank for\nrelying on the default name (\"Sheet\").", "required": false, "type": "string"}]}, {"method_name": "delete_workbook", "description": "Delete an existing local Excel file defined as workbook.\nWill return an error message if the passed file is not found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Create a new sheet in an already existing workbook.\nWill return an error message if the sheet already exists.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the new sheet to be added in the workbook.", "required": true, "type": "string"}]}, {"method_name": "delete_worksheet", "description": "Remove a sheet from an already existing workbook.\nWill return an error message if the sheet is not present.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want removed from the workbook.", "required": true, "type": "string"}]}, {"method_name": "add_rows", "description": "Add rows in an already existing worksheet of a workbook.\nThis will append the rows at the next empty index available. Only use this method on an empty file or\nwhen you want to add data to the end of the file. If you want to add a new column or manipulate data\nuse `update_sheet_rows` instead.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "data_table", "description": "A 2D matrix containing the sheet cell values.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 notation.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "start_cell", "description": "The cell from where to start the update. The end will be determined based on each row's length.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}]}, {"method_name": "get_cell", "description": "Retrieve the value of a cell from an already existing worksheet of a workbook.\nThis action works similarly to `set_cell`, but instead of setting a value it\nactually returns the value found at the given position in the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "row", "description": "The row number starting with 1.", "required": true, "type": "string"}, {"name": "column", "description": "The column letter or index.", "required": true, "type": "string"}]}, {"method_name": "get_sheet_content", "description": "Retrieve the whole content of an already existing worksheet of a workbook.\nThis action retrieves all the cells found in the sheet and returns them in a table\nstructure.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}]}, {"method_name": "get_workbook_schema", "description": "Retrieve the workbook overview defined as schema.\nThis action identifies the sheets found in the given workbook and for each one of\nthem it presents the first row which usually represents the header of the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}]}, {"description": "Create, read and update sheets on local Excel files.", "version": "3.1.0", "methods": [{"method_name": "create_workbook", "description": "Create a new local Excel file defined as workbook.\nThis will overwrite an already existing file and will try to guess the extension\n(xls or xlsx) if is not specified. It also creates a sheet with a default name\nwhich can be customized by providing an explicit `sheet_name`.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the initial sheet in the workbook. Leave it blank for\nrelying on the default name (\"Sheet\").", "required": false, "type": "string"}]}, {"method_name": "delete_workbook", "description": "Delete an existing local Excel file defined as workbook.\nWill return an error message if the passed file is not found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Create a new sheet in an already existing workbook.\nWill return an error message if the sheet already exists.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the new sheet to be added in the workbook.", "required": true, "type": "string"}]}, {"method_name": "delete_worksheet", "description": "Remove a sheet from an already existing workbook.\nWill return an error message if the sheet is not present.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want removed from the workbook.", "required": true, "type": "string"}]}, {"method_name": "add_rows", "description": "Add rows in an already existing worksheet of a workbook.\nThis will append the rows at the next empty index available. Only use this method on an empty file or\nwhen you want to add data to the end of the file. If you want to add a new column or manipulate data\nuse `update_sheet_rows` instead.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "data_table", "description": "A 2D matrix containing the sheet cell values.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 notation.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "start_cell", "description": "The cell from where to start the update. The end will be determined based on each row's length.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}, {"name": "overwrite", "description": "If True, the data will overwrite the existing data in the cells.", "required": false, "type": "boolean"}]}, {"method_name": "get_cell", "description": "Retrieve the value of a cell from an already existing worksheet of a workbook.\nThis action works similarly to `set_cell`, but instead of setting a value it\nactually returns the value found at the given position in the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "row", "description": "The row number starting with 1.", "required": true, "type": "string"}, {"name": "column", "description": "The column letter or index.", "required": true, "type": "string"}]}, {"method_name": "get_sheet_content", "description": "Retrieve the whole content of an already existing worksheet of a workbook.\nThis action retrieves all the cells found in the sheet and returns them in a table\nstructure.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}]}, {"method_name": "get_workbook_schema", "description": "Retrieve the workbook overview defined as schema.\nThis action identifies the sheets found in the given workbook and for each one of\nthem it presents the first non-empty row which usually represents the header of the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "find_cross_reference", "description": "Find the cell references where header1 and header2 intersect in the same row.", "parameters": [{"name": "file_path", "description": "Path to the Excel file", "required": true, "type": "string"}, {"name": "sheet_name", "description": "Name of the sheet to search", "required": true, "type": "string"}, {"name": "header1", "description": "First header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}, {"name": "header2", "description": "Second header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}]}]}, {"description": "Create, read and update sheets on local Excel files.", "version": "3.1.1", "methods": [{"method_name": "create_workbook", "description": "Create a new local Excel file defined as workbook.\nThis will overwrite an already existing file and will try to guess the extension\n(xls or xlsx) if is not specified. It also creates a sheet with a default name\nwhich can be customized by providing an explicit `sheet_name`.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the initial sheet in the workbook. Leave it blank for\nrelying on the default name (\"Sheet\").", "required": false, "type": "string"}]}, {"method_name": "delete_workbook", "description": "Delete an existing local Excel file defined as workbook.\nWill return an error message if the passed file is not found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Create a new sheet in an already existing workbook.\nWill return an error message if the sheet already exists.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the new sheet to be added in the workbook.", "required": true, "type": "string"}]}, {"method_name": "delete_worksheet", "description": "Remove a sheet from an already existing workbook.\nWill return an error message if the sheet is not present.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want removed from the workbook.", "required": true, "type": "string"}]}, {"method_name": "add_rows", "description": "Add rows in an already existing worksheet of a workbook.\nThis will append the rows at the next empty index available. Only use this method on an empty file or\nwhen you want to add data to the end of the file. If you want to add a new column or manipulate data\nuse `update_sheet_rows` instead.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "data_table", "description": "A 2D matrix containing the sheet cell values.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 notation.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "start_cell", "description": "The cell from where to start the update. The end will be determined based on each row's length.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}, {"name": "overwrite", "description": "If True, the data will overwrite the existing data in the cells.", "required": false, "type": "boolean"}]}, {"method_name": "get_cell", "description": "Retrieve the value of a cell from an already existing worksheet of a workbook.\nThis action works similarly to `set_cell`, but instead of setting a value it\nactually returns the value found at the given position in the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "row", "description": "The row number starting with 1.", "required": true, "type": "string"}, {"name": "column", "description": "The column letter or index.", "required": true, "type": "string"}]}, {"method_name": "get_sheet_content", "description": "Retrieve the whole content of an already existing worksheet of a workbook.\nThis action retrieves all the cells found in the sheet and returns them in a table\nstructure.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}]}, {"method_name": "get_workbook_schema", "description": "Retrieve the workbook overview defined as schema.\nThis action identifies the sheets found in the given workbook and for each one of\nthem it presents the first non-empty row which usually represents the header of the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "find_cross_reference", "description": "Find the cell references where header1 and header2 intersect in the same row.", "parameters": [{"name": "file_path", "description": "Path to the Excel file", "required": true, "type": "string"}, {"name": "sheet_name", "description": "Name of the sheet to search", "required": true, "type": "string"}, {"name": "header1", "description": "First header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}, {"name": "header2", "description": "Second header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}]}]}, {"description": "Create, read and update sheets on local Excel files.", "version": "3.1.2", "methods": [{"method_name": "create_workbook", "description": "Create a new local Excel file defined as workbook.\nThis will overwrite an already existing file and will try to guess the extension\n(xls or xlsx) if is not specified. It also creates a sheet with a default name\nwhich can be customized by providing an explicit `sheet_name`.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the initial sheet in the workbook. Leave it blank for\nrelying on the default name (\"Sheet\").", "required": false, "type": "string"}]}, {"method_name": "delete_workbook", "description": "Delete an existing local Excel file defined as workbook.\nWill return an error message if the passed file is not found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Create a new sheet in an already existing workbook.\nWill return an error message if the sheet already exists.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the new sheet to be added in the workbook.", "required": true, "type": "string"}]}, {"method_name": "delete_worksheet", "description": "Remove a sheet from an already existing workbook.\nWill return an error message if the sheet is not present.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want removed from the workbook.", "required": true, "type": "string"}]}, {"method_name": "add_rows", "description": "Add rows in an already existing worksheet of a workbook.\nThis will append the rows at the next empty index available. Only use this method on an empty file or\nwhen you want to add data to the end of the file. If you want to add a new column or manipulate data\nuse `update_sheet_rows` instead.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "data_table", "description": "A 2D matrix containing the sheet cell values.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 notation.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "start_cell", "description": "The cell from where to start the update. The end will be determined based on each row's length.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}, {"name": "overwrite", "description": "If True, the data will overwrite the existing data in the cells.", "required": false, "type": "boolean"}]}, {"method_name": "get_cell", "description": "Retrieve the value of a cell from an already existing worksheet of a workbook.\nThis action works similarly to `set_cell`, but instead of setting a value it\nactually returns the value found at the given position in the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "row", "description": "The row number starting with 1.", "required": true, "type": "string"}, {"name": "column", "description": "The column letter or index.", "required": true, "type": "string"}]}, {"method_name": "get_sheet_content", "description": "Retrieve the whole content of an already existing worksheet of a workbook.\nThis action retrieves all the cells found in the sheet and returns them in a table\nstructure.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}]}, {"method_name": "get_workbook_schema", "description": "Retrieve the workbook overview defined as schema.\nThis action identifies the sheets found in the given workbook and for each one of\nthem it presents the first non-empty row which usually represents the header of the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "find_cross_reference", "description": "Find the cell references where header1 and header2 intersect in the same row.", "parameters": [{"name": "file_path", "description": "Path to the Excel file", "required": true, "type": "string"}, {"name": "sheet_name", "description": "Name of the sheet to search", "required": true, "type": "string"}, {"name": "header1", "description": "First header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}, {"name": "header2", "description": "Second header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}]}]}, {"description": "Create, read and update sheets on local Excel files.", "version": "4.0.0", "methods": [{"method_name": "excel_download_file", "description": "Download chat file to a local directory.", "parameters": [{"name": "filename", "description": "The name of the file to get", "required": true, "type": "string"}, {"name": "target_directory", "description": "The directory to save the file to", "required": true, "type": "string"}]}, {"method_name": "create_workbook", "description": "Create a new local Excel file defined as workbook.\nThis will overwrite an already existing file and will try to guess the extension\n(xls or xlsx) if is not specified. It also creates a sheet with a default name\nwhich can be customized by providing an explicit `sheet_name`.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the initial sheet in the workbook. Leave it blank for\nrelying on the default name (\"Sheet\").", "required": false, "type": "string"}]}, {"method_name": "delete_workbook", "description": "Delete an existing local Excel file defined as workbook.\nWill return an error message if the passed file is not found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Create a new sheet in an already existing workbook.\nWill return an error message if the sheet already exists.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the new sheet to be added in the workbook.", "required": true, "type": "string"}]}, {"method_name": "delete_worksheet", "description": "Remove a sheet from an already existing workbook.\nWill return an error message if the sheet is not present.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want removed from the workbook.", "required": true, "type": "string"}]}, {"method_name": "add_rows", "description": "Add rows in an already existing worksheet of a workbook.\nThis will append the rows at the next empty index available. Only use this method on an empty file or\nwhen you want to add data to the end of the file. If you want to add a new column or manipulate data\nuse `update_sheet_rows` instead.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "data_table", "description": "A 2D matrix containing the sheet cell values.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 notation.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "start_cell", "description": "The cell from where to start the update. The end will be determined based on each row's length.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}, {"name": "overwrite", "description": "If True, the data will overwrite the existing data in the cells.", "required": false, "type": "boolean"}]}, {"method_name": "get_cell", "description": "Retrieve the value of a cell from an already existing worksheet of a workbook.\nThis action works similarly to `set_cell`, but instead of setting a value it\nactually returns the value found at the given position in the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "row", "description": "The row number starting with 1.", "required": true, "type": "string"}, {"name": "column", "description": "The column letter or index.", "required": true, "type": "string"}]}, {"method_name": "get_sheet_content", "description": "Retrieve the whole content of an already existing worksheet of a workbook.\nThis action retrieves all the cells found in the sheet and returns them in a table\nstructure.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}]}, {"method_name": "get_workbook_schema", "description": "Retrieve the workbook overview defined as schema.\nThis action identifies the sheets found in the given workbook and for each one of\nthem it presents the first non-empty row which usually represents the header of the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "find_cross_reference", "description": "Find the cell references where header1 and header2 intersect in the same row.", "parameters": [{"name": "file_path", "description": "Path to the Excel file", "required": true, "type": "string"}, {"name": "sheet_name", "description": "Name of the sheet to search", "required": true, "type": "string"}, {"name": "header1", "description": "First header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}, {"name": "header2", "description": "Second header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}]}]}, {"description": "Create, read and update sheets on local Excel files.", "version": "4.0.1", "methods": [{"method_name": "excel_download_file", "description": "Download chat file to a local directory.", "parameters": [{"name": "filename", "description": "The name of the file to get", "required": true, "type": "string"}, {"name": "target_directory", "description": "The directory to save the file to", "required": true, "type": "string"}]}, {"method_name": "create_workbook", "description": "Create a new local Excel file defined as workbook.\nThis will overwrite an already existing file and will try to guess the extension\n(xls or xlsx) if is not specified. It also creates a sheet with a default name\nwhich can be customized by providing an explicit `sheet_name`.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the initial sheet in the workbook. Leave it blank for\nrelying on the default name (\"Sheet\").", "required": false, "type": "string"}]}, {"method_name": "delete_workbook", "description": "Delete an existing local Excel file defined as workbook.\nWill return an error message if the passed file is not found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Create a new sheet in an already existing workbook.\nWill return an error message if the sheet already exists.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the new sheet to be added in the workbook.", "required": true, "type": "string"}]}, {"method_name": "delete_worksheet", "description": "Remove a sheet from an already existing workbook.\nWill return an error message if the sheet is not present.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want removed from the workbook.", "required": true, "type": "string"}]}, {"method_name": "add_rows", "description": "Add rows in an already existing worksheet of a workbook.\nThis will append the rows at the next empty index available. Only use this method on an empty file or\nwhen you want to add data to the end of the file. If you want to add a new column or manipulate data\nuse `update_sheet_rows` instead.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "data_table", "description": "A 2D matrix containing the sheet cell values.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 notation.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "start_cell", "description": "The cell from where to start the update. The end will be determined based on each row's length.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}, {"name": "overwrite", "description": "If True, the data will overwrite the existing data in the cells.", "required": false, "type": "boolean"}]}, {"method_name": "get_cell", "description": "Retrieve the value of a cell from an already existing worksheet of a workbook.\nThis action works similarly to `set_cell`, but instead of setting a value it\nactually returns the value found at the given position in the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "row", "description": "The row number starting with 1.", "required": true, "type": "string"}, {"name": "column", "description": "The column letter or index.", "required": true, "type": "string"}]}, {"method_name": "get_sheet_content", "description": "Retrieve the whole content of an already existing worksheet of a workbook.\nThis action retrieves all the cells found in the sheet and returns them in a table\nstructure.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}]}, {"method_name": "get_workbook_schema", "description": "Retrieve the workbook overview defined as schema.\nThis action identifies the sheets found in the given workbook and for each one of\nthem it presents the first non-empty row which usually represents the header of the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "find_cross_reference", "description": "Find the cell references where header1 and header2 intersect in the same row.", "parameters": [{"name": "file_path", "description": "Path to the Excel file", "required": true, "type": "string"}, {"name": "sheet_name", "description": "Name of the sheet to search", "required": true, "type": "string"}, {"name": "header1", "description": "First header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}, {"name": "header2", "description": "Second header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}]}]}, {"description": "Create, read and update sheets on local Excel files.", "version": "4.0.2", "methods": [{"method_name": "excel_download_file", "description": "Download chat file to a local directory.", "parameters": [{"name": "filename", "description": "The name of the file to get", "required": true, "type": "string"}, {"name": "target_directory", "description": "The directory to save the file to", "required": true, "type": "string"}]}, {"method_name": "create_workbook", "description": "Create a new local Excel file defined as workbook.\nThis will overwrite an already existing file and will try to guess the extension\n(xls or xlsx) if is not specified. It also creates a sheet with a default name\nwhich can be customized by providing an explicit `sheet_name`.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the initial sheet in the workbook. Leave it blank for\nrelying on the default name (\"Sheet\").", "required": false, "type": "string"}]}, {"method_name": "delete_workbook", "description": "Delete an existing local Excel file defined as workbook.\nWill return an error message if the passed file is not found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Create a new sheet in an already existing workbook.\nWill return an error message if the sheet already exists.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the new sheet to be added in the workbook.", "required": true, "type": "string"}]}, {"method_name": "delete_worksheet", "description": "Remove a sheet from an already existing workbook.\nWill return an error message if the sheet is not present.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want removed from the workbook.", "required": true, "type": "string"}]}, {"method_name": "add_rows", "description": "Add rows in an already existing worksheet of a workbook.\nThis will append the rows at the next empty index available. Only use this method on an empty file or\nwhen you want to add data to the end of the file. If you want to add a new column or manipulate data\nuse `update_sheet_rows` instead.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "data_table", "description": "A 2D matrix containing the sheet cell values.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 notation.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "start_cell", "description": "The cell from where to start the update. The end will be determined based on each row's length.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}, {"name": "overwrite", "description": "If True, the data will overwrite the existing data in the cells.", "required": false, "type": "boolean"}]}, {"method_name": "get_cell", "description": "Retrieve the value of a cell from an already existing worksheet of a workbook.\nThis action works similarly to `set_cell`, but instead of setting a value it\nactually returns the value found at the given position in the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "row", "description": "The row number starting with 1.", "required": true, "type": "string"}, {"name": "column", "description": "The column letter or index.", "required": true, "type": "string"}]}, {"method_name": "get_sheet_content", "description": "Retrieve the whole content of an already existing worksheet of a workbook.\nThis action retrieves all the cells found in the sheet and returns them in a table\nstructure.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}]}, {"method_name": "get_workbook_schema", "description": "Retrieve the workbook overview defined as schema.\nThis action identifies the sheets found in the given workbook and for each one of\nthem it presents the first non-empty row which usually represents the header of the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "find_cross_reference", "description": "Find the cell references where header1 and header2 intersect in the same row.", "parameters": [{"name": "file_path", "description": "Path to the Excel file", "required": true, "type": "string"}, {"name": "sheet_name", "description": "Name of the sheet to search", "required": true, "type": "string"}, {"name": "header1", "description": "First header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}, {"name": "header2", "description": "Second header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}]}]}, {"description": "Create, read and update sheets on local Excel files.", "version": "4.0.3", "methods": [{"method_name": "excel_download_file", "description": "Download chat file to a local directory.", "parameters": [{"name": "filename", "description": "The name of the file to get", "required": true, "type": "string"}, {"name": "target_directory", "description": "The directory to save the file to", "required": true, "type": "string"}]}, {"method_name": "create_workbook", "description": "Create a new local Excel file defined as workbook.\nThis will overwrite an already existing file and will try to guess the extension\n(xls or xlsx) if is not specified. It also creates a sheet with a default name\nwhich can be customized by providing an explicit `sheet_name`.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the initial sheet in the workbook. Leave it blank for\nrelying on the default name (\"Sheet\").", "required": false, "type": "string"}]}, {"method_name": "delete_workbook", "description": "Delete an existing local Excel file defined as workbook.\nWill return an error message if the passed file is not found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Create a new sheet in an already existing workbook.\nWill return an error message if the sheet already exists.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the new sheet to be added in the workbook.", "required": true, "type": "string"}]}, {"method_name": "delete_worksheet", "description": "Remove a sheet from an already existing workbook.\nWill return an error message if the sheet is not present.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want removed from the workbook.", "required": true, "type": "string"}]}, {"method_name": "add_rows", "description": "Add rows in an already existing worksheet of a workbook.\nThis will append the rows at the next empty index available. Only use this method on an empty file or\nwhen you want to add data to the end of the file. If you want to add a new column or manipulate data\nuse `update_sheet_rows` instead.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "data_table", "description": "A 2D matrix containing the sheet cell values.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 notation.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "start_cell", "description": "The cell from where to start the update. The end will be determined based on each row's length.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}, {"name": "overwrite", "description": "If True, the data will overwrite the existing data in the cells.", "required": false, "type": "boolean"}]}, {"method_name": "get_cell", "description": "Retrieve the value of a cell from an already existing worksheet of a workbook.\nThis action works similarly to `set_cell`, but instead of setting a value it\nactually returns the value found at the given position in the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "row", "description": "The row number starting with 1.", "required": true, "type": "string"}, {"name": "column", "description": "The column letter or index.", "required": true, "type": "string"}]}, {"method_name": "get_sheet_content", "description": "Retrieve the whole content of an already existing worksheet of a workbook.\nThis action retrieves all the cells found in the sheet and returns them in a table\nstructure.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}]}, {"method_name": "get_workbook_schema", "description": "Retrieve the workbook overview defined as schema.\nThis action identifies the sheets found in the given workbook and for each one of\nthem it presents the first non-empty row which usually represents the header of the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "find_cross_reference", "description": "Find the cell references where header1 and header2 intersect in the same row.", "parameters": [{"name": "file_path", "description": "Path to the Excel file", "required": true, "type": "string"}, {"name": "sheet_name", "description": "Name of the sheet to search", "required": true, "type": "string"}, {"name": "header1", "description": "First header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}, {"name": "header2", "description": "Second header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}]}]}, {"description": "Create, read and update sheets on local Excel files.", "version": "4.0.4", "methods": [{"method_name": "excel_download_file", "description": "Download chat file to a local directory.", "parameters": [{"name": "filename", "description": "The name of the file to get", "required": true, "type": "string"}, {"name": "target_directory", "description": "The directory to save the file to", "required": true, "type": "string"}]}, {"method_name": "create_workbook", "description": "Create a new local Excel file defined as workbook.\nThis will overwrite an already existing file and will try to guess the extension\n(xls or xlsx) if is not specified. It also creates a sheet with a default name\nwhich can be customized by providing an explicit `sheet_name`.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the initial sheet in the workbook. Leave it blank for\nrelying on the default name (\"Sheet\").", "required": false, "type": "string"}]}, {"method_name": "delete_workbook", "description": "Delete an existing local Excel file defined as workbook.\nWill return an error message if the passed file is not found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Create a new sheet in an already existing workbook.\nWill return an error message if the sheet already exists.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the new sheet to be added in the workbook.", "required": true, "type": "string"}]}, {"method_name": "delete_worksheet", "description": "Remove a sheet from an already existing workbook.\nWill return an error message if the sheet is not present.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want removed from the workbook.", "required": true, "type": "string"}]}, {"method_name": "add_rows", "description": "Add rows in an already existing worksheet of a workbook.\nThis will append the rows at the next empty index available. Only use this method on an empty file or\nwhen you want to add data to the end of the file. If you want to add a new column or manipulate data\nuse `update_sheet_rows` instead.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "data_table", "description": "A 2D matrix containing the sheet cell values.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 notation.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "start_cell", "description": "The cell from where to start the update. The end will be determined based on each row's length.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}, {"name": "overwrite", "description": "If True, the data will overwrite the existing data in the cells.", "required": false, "type": "boolean"}]}, {"method_name": "get_cell", "description": "Retrieve the value of a cell from an already existing worksheet of a workbook.\nThis action works similarly to `set_cell`, but instead of setting a value it\nactually returns the value found at the given position in the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "row", "description": "The row number starting with 1.", "required": true, "type": "string"}, {"name": "column", "description": "The column letter or index.", "required": true, "type": "string"}]}, {"method_name": "get_sheet_content", "description": "Retrieve the whole content of an already existing worksheet of a workbook.\nThis action retrieves all the cells found in the sheet and returns them in a table\nstructure.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}]}, {"method_name": "get_workbook_schema", "description": "Retrieve the workbook overview defined as schema.\nThis action identifies the sheets found in the given workbook and for each one of\nthem it presents the first non-empty row which usually represents the header of the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "find_cross_reference", "description": "Find the cell references where header1 and header2 intersect in the same row.", "parameters": [{"name": "file_path", "description": "Path to the Excel file", "required": true, "type": "string"}, {"name": "sheet_name", "description": "Name of the sheet to search", "required": true, "type": "string"}, {"name": "header1", "description": "First header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}, {"name": "header2", "description": "Second header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}]}]}, {"description": "Create, read and update sheets on local Excel files.", "version": "4.0.5", "methods": [{"method_name": "excel_download_file", "description": "Download chat file to a local directory.", "parameters": [{"name": "filename", "description": "The name of the file to get", "required": true, "type": "string"}, {"name": "target_directory", "description": "The directory to save the file to", "required": true, "type": "string"}]}, {"method_name": "create_workbook", "description": "Create a new local Excel file defined as workbook.\nThis will overwrite an already existing file and will try to guess the extension\n(xls or xlsx) if is not specified. It also creates a sheet with a default name\nwhich can be customized by providing an explicit `sheet_name`.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the initial sheet in the workbook. Leave it blank for\nrelying on the default name (\"Sheet\").", "required": false, "type": "string"}]}, {"method_name": "delete_workbook", "description": "Delete an existing local Excel file defined as workbook.\nWill return an error message if the passed file is not found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Create a new sheet in an already existing workbook.\nWill return an error message if the sheet already exists.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the new sheet to be added in the workbook.", "required": true, "type": "string"}]}, {"method_name": "delete_worksheet", "description": "Remove a sheet from an already existing workbook.\nWill return an error message if the sheet is not present.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want removed from the workbook.", "required": true, "type": "string"}]}, {"method_name": "add_rows", "description": "Add rows in an already existing worksheet of a workbook.\nThis will append the rows at the next empty index available. Only use this method on an empty file or\nwhen you want to add data to the end of the file. If you want to add a new column or manipulate data\nuse `update_sheet_rows` instead.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "data_table", "description": "A 2D matrix containing the sheet cell values.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 notation.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "start_cell", "description": "The cell from where to start the update. The end will be determined based on each row's length.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}, {"name": "overwrite", "description": "If True, the data will overwrite the existing data in the cells.", "required": false, "type": "boolean"}]}, {"method_name": "get_cell", "description": "Retrieve the value of a cell from an already existing worksheet of a workbook.\nThis action works similarly to `set_cell`, but instead of setting a value it\nactually returns the value found at the given position in the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "row", "description": "The row number starting with 1.", "required": true, "type": "string"}, {"name": "column", "description": "The column letter or index.", "required": true, "type": "string"}]}, {"method_name": "get_sheet_content", "description": "Retrieve the whole content of an already existing worksheet of a workbook.\nThis action retrieves all the cells found in the sheet and returns them in a table\nstructure.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}]}, {"method_name": "get_workbook_schema", "description": "Retrieve the workbook overview defined as schema.\nThis action identifies the sheets found in the given workbook and for each one of\nthem it presents the first non-empty row which usually represents the header of the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "find_cross_reference", "description": "Find the cell references where header1 and header2 intersect in the same row.", "parameters": [{"name": "file_path", "description": "Path to the Excel file", "required": true, "type": "string"}, {"name": "sheet_name", "description": "Name of the sheet to search", "required": true, "type": "string"}, {"name": "header1", "description": "First header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}, {"name": "header2", "description": "Second header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}]}]}, {"description": "Create, read and update sheets on local Excel files.", "version": "4.0.6", "methods": [{"method_name": "excel_download_file", "description": "Download chat file to a local directory.", "parameters": [{"name": "filename", "description": "The name of the file to get", "required": true, "type": "string"}, {"name": "target_directory", "description": "The directory to save the file to", "required": true, "type": "string"}]}, {"method_name": "create_workbook", "description": "Create a new local Excel file defined as workbook.\nThis will overwrite an already existing file and will try to guess the extension\n(xls or xlsx) if is not specified. It also creates a sheet with a default name\nwhich can be customized by providing an explicit `sheet_name`.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the initial sheet in the workbook. Leave it blank for\nrelying on the default name (\"Sheet\").", "required": false, "type": "string"}]}, {"method_name": "delete_workbook", "description": "Delete an existing local Excel file defined as workbook.\nWill return an error message if the passed file is not found.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Create a new sheet in an already existing workbook.\nWill return an error message if the sheet already exists.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the new sheet to be added in the workbook.", "required": true, "type": "string"}]}, {"method_name": "delete_worksheet", "description": "Remove a sheet from an already existing workbook.\nWill return an error message if the sheet is not present.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want removed from the workbook.", "required": true, "type": "string"}]}, {"method_name": "add_rows", "description": "Add rows in an already existing worksheet of a workbook.\nThis will append the rows at the next empty index available. Only use this method on an empty file or\nwhen you want to add data to the end of the file. If you want to add a new column or manipulate data\nuse `update_sheet_rows` instead.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "data_table", "description": "A 2D matrix containing the sheet cell values.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 notation.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "start_cell", "description": "The cell from where to start the update. The end will be determined based on each row's length.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}, {"name": "overwrite", "description": "If True, the data will overwrite the existing data in the cells.", "required": false, "type": "boolean"}]}, {"method_name": "get_cell", "description": "Retrieve the value of a cell from an already existing worksheet of a workbook.\nThis action works similarly to `set_cell`, but instead of setting a value it\nactually returns the value found at the given position in the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}, {"name": "row", "description": "The row number starting with 1.", "required": true, "type": "string"}, {"name": "column", "description": "The column letter or index.", "required": true, "type": "string"}]}, {"method_name": "get_sheet_content", "description": "Retrieve the whole content of an already existing worksheet of a workbook.\nThis action retrieves all the cells found in the sheet and returns them in a table\nstructure.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}, {"name": "sheet_name", "description": "The name of the sheet you want to store the rows into.", "required": true, "type": "string"}]}, {"method_name": "get_workbook_schema", "description": "Retrieve the workbook overview defined as schema.\nThis action identifies the sheets found in the given workbook and for each one of\nthem it presents the first non-empty row which usually represents the header of the sheet.", "parameters": [{"name": "file_path", "description": "The file name or a local path pointing to the workbook file.", "required": true, "type": "string"}]}, {"method_name": "find_cross_reference", "description": "Find the cell references where header1 and header2 intersect in the same row.", "parameters": [{"name": "file_path", "description": "Path to the Excel file", "required": true, "type": "string"}, {"name": "sheet_name", "description": "Name of the sheet to search", "required": true, "type": "string"}, {"name": "header1", "description": "First header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}, {"name": "header2", "description": "Second header value(s) to find (can be a string or list of strings)", "required": true, "type": "object"}]}]}]}, "Google Calendar": {"name": "Google Calendar", "versions": [{"description": "Atomic actions operating with Google Calendar.", "version": "1.0.0", "methods": [{"method_name": "create_event", "description": "Creates a new event in the specified calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Google Calendar V3 event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}, {"method_name": "list_events", "description": "List all events in the user's primary calendar between the given dates.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}, {"name": "query", "description": "Free text search terms to find events that match these terms in summary, description, location,\nattendee's name / email or working location information.", "required": false, "type": "string"}, {"name": "start_date", "description": "Upper bound (exclusive) for an event's start time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}, {"name": "end_date", "description": "Lower bound (exclusive) for an event's end time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "update_event", "description": "Update an existing Google Calendar event with dynamic arguments.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.\nPossible keys include 'summary', 'description', 'start', 'end', and 'attendees'.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Identifier of the calendar where the event is.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}]}, {"description": "List calendars and search, create and update events in your Google Calendar.", "version": "1.0.1", "methods": [{"method_name": "create_event", "description": "Creates a new event in the specified calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Google Calendar V3 event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}, {"method_name": "list_events", "description": "List all events in the user's primary calendar between the given dates.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}, {"name": "query", "description": "Free text search terms to find events that match these terms in summary, description, location,\nattendee's name / email or working location information.", "required": false, "type": "string"}, {"name": "start_date", "description": "Upper bound (exclusive) for an event's start time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}, {"name": "end_date", "description": "Lower bound (exclusive) for an event's end time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "update_event", "description": "Update an existing Google Calendar event with dynamic arguments.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.\nPossible keys include 'summary', 'description', 'start', 'end', and 'attendees'.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Identifier of the calendar where the event is.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}]}, {"description": "List calendars and search, create and update events in your Google Calendar.", "version": "1.0.2", "methods": [{"method_name": "create_event", "description": "Creates a new event in the specified calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Google Calendar V3 event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}, {"method_name": "list_events", "description": "List all events in the user's primary calendar between the given dates.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}, {"name": "query", "description": "Free text search terms to find events that match these terms in summary, description, location,\nattendee's name / email or working location information.", "required": false, "type": "string"}, {"name": "start_date", "description": "Upper bound (exclusive) for an event's start time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}, {"name": "end_date", "description": "Lower bound (exclusive) for an event's end time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "update_event", "description": "Update an existing Google Calendar event with dynamic arguments.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.\nPossible keys include 'summary', 'description', 'start', 'end', and 'attendees'.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Identifier of the calendar where the event is.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}]}, {"description": "List calendars and search, create and update events in your Google Calendar.", "version": "1.0.3", "methods": [{"method_name": "create_event", "description": "Creates a new event in the specified calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Google Calendar V3 event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}, {"method_name": "list_events", "description": "List all events in the user's primary calendar between the given dates.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}, {"name": "query", "description": "Free text search terms to find events that match these terms in summary, description, location,\nattendee's name / email or working location information.", "required": false, "type": "string"}, {"name": "start_date", "description": "Upper bound (exclusive) for an event's start time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}, {"name": "end_date", "description": "Lower bound (exclusive) for an event's end time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "update_event", "description": "Update an existing Google Calendar event with dynamic arguments.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.\nPossible keys include 'summary', 'description', 'start', 'end', and 'attendees'.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Identifier of the calendar where the event is.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}]}, {"description": "List calendars and search, create and update events in your Google Calendar.", "version": "1.0.4", "methods": [{"method_name": "create_event", "description": "Creates a new event in the specified calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Google Calendar V3 event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}, {"method_name": "list_events", "description": "List all events in the user's primary calendar between the given dates.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}, {"name": "query", "description": "Free text search terms to find events that match these terms in summary, description, location,\nattendee's name / email or working location information.", "required": false, "type": "string"}, {"name": "start_date", "description": "Upper bound (exclusive) for an event's start time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}, {"name": "end_date", "description": "Lower bound (exclusive) for an event's end time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "update_event", "description": "Update an existing Google Calendar event with dynamic arguments.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.\nPossible keys include 'summary', 'description', 'start', 'end', and 'attendees'.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Identifier of the calendar where the event is.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}]}, {"description": "List calendars and search, create and update events in your Google Calendar.", "version": "1.0.5", "methods": [{"method_name": "create_event", "description": "Creates a new event in the specified calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Google Calendar V3 event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}, {"method_name": "list_events", "description": "List all events in the user's primary calendar between the given dates.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}, {"name": "query", "description": "Free text search terms to find events that match these terms in summary, description, location,\nattendee's name / email or working location information.", "required": false, "type": "string"}, {"name": "start_date", "description": "Upper bound (exclusive) for an event's start time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}, {"name": "end_date", "description": "Lower bound (exclusive) for an event's end time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "update_event", "description": "Update an existing Google Calendar event with dynamic arguments.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.\nPossible keys include 'summary', 'description', 'start', 'end', and 'attendees'.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Identifier of the calendar where the event is.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}]}, {"description": "List calendars and search, create and update events in your Google Calendar.", "version": "1.0.6", "methods": [{"method_name": "create_event", "description": "Creates a new event in the specified calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Google Calendar V3 event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}, {"method_name": "list_events", "description": "List all events in the user's primary calendar between the given dates.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}, {"name": "query", "description": "Free text search terms to find events that match these terms in summary, description, location,\nattendee's name / email or working location information.", "required": false, "type": "string"}, {"name": "start_date", "description": "Upper bound (exclusive) for an event's start time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}, {"name": "end_date", "description": "Lower bound (exclusive) for an event's end time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "update_event", "description": "Update an existing Google Calendar event with dynamic arguments.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.\nPossible keys include 'summary', 'description', 'start', 'end', and 'attendees'.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Identifier of the calendar where the event is.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}]}, {"description": "List calendars and search, create and update events in your Google Calendar.", "version": "1.1.0", "methods": [{"method_name": "create_event", "description": "Creates a new event in the specified calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Google Calendar V3 event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}, {"method_name": "list_events", "description": "List all events in the user's primary calendar between the given dates.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}, {"name": "query", "description": "Free text search terms to find events that match these terms in summary, description, location,\nattendee's name / email or working location information.", "required": false, "type": "string"}, {"name": "start_date", "description": "Upper bound (exclusive) for an event's start time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}, {"name": "end_date", "description": "Lower bound (exclusive) for an event's end time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "update_event", "description": "Update an existing Google Calendar event with dynamic arguments.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.\nPossible keys include 'summary', 'description', 'start', 'end', and 'attendees'.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Identifier of the calendar where the event is.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}]}, {"description": "List calendars and search, create and update events in your Google Calendar.", "version": "1.1.1", "methods": [{"method_name": "create_event", "description": "Creates a new event in the specified calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Google Calendar V3 event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}, {"method_name": "list_events", "description": "List all events in the user's primary calendar between the given dates.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}, {"name": "query", "description": "Free text search terms to find events that match these terms in summary, description, location,\nattendee's name / email or working location information.", "required": false, "type": "string"}, {"name": "start_date", "description": "Upper bound (exclusive) for an event's start time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}, {"name": "end_date", "description": "Lower bound (exclusive) for an event's end time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "update_event", "description": "Update an existing Google Calendar event with dynamic arguments.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.\nPossible keys include 'summary', 'description', 'start', 'end', and 'attendees'.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Identifier of the calendar where the event is.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}]}, {"description": "List calendars and search, create and update events in your Google Calendar.", "version": "1.1.2", "methods": [{"method_name": "create_event", "description": "Creates a new event in the specified calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Google Calendar V3 event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}, {"method_name": "list_events", "description": "List all events in the user's primary calendar between the given dates.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}, {"name": "query", "description": "Free text search terms to find events that match these terms in summary, description, location,\nattendee's name / email or working location information.", "required": false, "type": "string"}, {"name": "start_date", "description": "Upper bound (exclusive) for an event's start time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}, {"name": "end_date", "description": "Lower bound (exclusive) for an event's end time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "update_event", "description": "Update an existing Google Calendar event with dynamic arguments.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.\nPossible keys include 'summary', 'description', 'start', 'end', and 'attendees'.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Identifier of the calendar where the event is.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}]}, {"description": "List calendars and search, create and update events in your Google Calendar.", "version": "1.1.3", "methods": [{"method_name": "create_event", "description": "Creates a new event in the specified calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Google Calendar V3 event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}, {"method_name": "list_events", "description": "List all events in the user's primary calendar between the given dates.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}, {"name": "query", "description": "Free text search terms to find events that match these terms in summary, description, location,\nattendee's name / email or working location information.", "required": false, "type": "string"}, {"name": "start_date", "description": "Upper bound (exclusive) for an event's start time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}, {"name": "end_date", "description": "Lower bound (exclusive) for an event's end time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "update_event", "description": "Update an existing Google Calendar event with dynamic arguments.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.\nPossible keys include 'summary', 'description', 'start', 'end', and 'attendees'.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Identifier of the calendar where the event is.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}]}, {"description": "List calendars and search, create and update events in your Google Calendar.", "version": "1.2.0", "methods": [{"method_name": "create_event", "description": "Creates a new event in the specified calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Google Calendar V3 event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}, {"method_name": "list_events", "description": "List all events in the user's primary calendar between the given dates.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "calendar_id", "description": "Calendar identifier which can be found by listing all calendars action.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}, {"name": "query", "description": "Free text search terms to find events that match these terms in summary, description, location,\nattendee's name / email or working location information.", "required": false, "type": "string"}, {"name": "start_date", "description": "Upper bound (exclusive) for an event's start time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}, {"name": "end_date", "description": "Lower bound (exclusive) for an event's end time to filter by.\nMust be an RFC3339 timestamp with mandatory time zone offset.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "update_event", "description": "Update an existing Google Calendar event with dynamic arguments.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.\nPossible keys include 'summary', 'description', 'start', 'end', and 'attendees'.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Identifier of the calendar where the event is.\nDefault value is \"primary\" which indicates the calendar where the user is currently logged in.", "required": false, "type": "string"}]}]}]}, "Google Docs": {"name": "Google Docs", "versions": [{"description": "Pre-built AI actions to read Google documents in Markdown format", "version": "1.2.0", "methods": [{"method_name": "get_document_by_name", "description": "Get a Google Document by its name.\nIf multiple documents with the same name are found,\nyou need to use the ID of the document to load it.\nHint: Copy-pasting the URL of the document in the Agent will allow it to fetch the document by ID\n\nApostrophes in the title need to be escaped with a backslash.\nThe result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "name", "description": "The Google Document name", "required": true, "type": "string"}]}, {"method_name": "get_document_by_id", "description": "Get a Google Document by its ID. The result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "document_id", "description": "The Google Document ID.", "required": true, "type": "string"}]}, {"method_name": "create_document", "description": "Create a new Google Document from an Extended Markdown string.\nArgs:\n    title: The Google Document title\n    body: The Google Document body as an Extended Markdown string.\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "title", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}]}, {"description": "Get contents of Google Docs as Markdown", "version": "1.2.1", "methods": [{"method_name": "get_document_by_name", "description": "Get a Google Document by its name.\nIf multiple documents with the same name are found,\nyou need to use the ID of the document to load it.\nHint: Copy-pasting the URL of the document in the Agent will allow it to fetch the document by ID\n\nApostrophes in the title need to be escaped with a backslash.\nThe result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "name", "description": "The Google Document name", "required": true, "type": "string"}]}, {"method_name": "get_document_by_id", "description": "Get a Google Document by its ID. The result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "document_id", "description": "The Google Document ID.", "required": true, "type": "string"}]}, {"method_name": "create_document", "description": "Create a new Google Document from an Extended Markdown string.\nArgs:\n    title: The Google Document title\n    body: The Google Document body as an Extended Markdown string.\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "title", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}]}, {"description": "Get contents of Google Docs as Markdown", "version": "1.3.0", "methods": [{"method_name": "get_document_by_name", "description": "Get a Google Document by its name.\nIf multiple documents with the same name are found,\nyou need to use the ID of the document to load it.\nHint: Copy-pasting the URL of the document in the Agent will allow it to fetch the document by ID\n\nApostrophes in the title need to be escaped with a backslash.\nThe result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "name", "description": "The Google Document name", "required": true, "type": "string"}]}, {"method_name": "get_document_by_id", "description": "Get a Google Document by its ID. The result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "document_id", "description": "The Google Document ID.", "required": true, "type": "string"}]}, {"method_name": "create_document", "description": "Create a new Google Document from an Extended Markdown string.\nArgs:\n    title: The Google Document title\n    body: The Google Document body as an Extended Markdown string.\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "title", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}, {"method_name": "append_to_document_by_id", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its ID.\nArgs:\n    document_id: The Google Document ID\n    body: The Google Document body as an Extended Markdown string\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "document_id", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}, {"method_name": "append_to_document_by_name", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its name.\nArgs:\n    name: The Google Document name\n    body: The Google Document body as an Extended Markdown string\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "name", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}]}, {"description": "Get contents of Google Docs as Markdown", "version": "1.3.1", "methods": [{"method_name": "get_document_by_name", "description": "Get a Google Document by its name.\nIf multiple documents with the same name are found,\nyou need to use the ID of the document to load it.\nHint: Copy-pasting the URL of the document in the Agent will allow it to fetch the document by ID\n\nApostrophes in the title need to be escaped with a backslash.\nThe result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "name", "description": "The Google Document name", "required": true, "type": "string"}]}, {"method_name": "get_document_by_id", "description": "Get a Google Document by its ID. The result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "document_id", "description": "The Google Document ID.", "required": true, "type": "string"}]}, {"method_name": "create_document", "description": "Create a new Google Document from an Extended Markdown string.\nArgs:\n    title: The Google Document title\n    body: The Google Document body as an Extended Markdown string.\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "title", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}, {"method_name": "append_to_document_by_id", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its ID.\nArgs:\n    document_id: The Google Document ID\n    body: The Google Document body as an Extended Markdown string\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "document_id", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}, {"method_name": "append_to_document_by_name", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its name.\nArgs:\n    name: The Google Document name\n    body: The Google Document body as an Extended Markdown string\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "name", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}]}, {"description": "Get contents of Google Docs as Markdown", "version": "1.3.2", "methods": [{"method_name": "get_document_by_name", "description": "Get a Google Document by its name.\nIf multiple documents with the same name are found,\nyou need to use the ID of the document to load it.\nHint: Copy-pasting the URL of the document in the Agent will allow it to fetch the document by ID\n\nApostrophes in the title need to be escaped with a backslash.\nThe result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "name", "description": "The Google Document name", "required": true, "type": "string"}]}, {"method_name": "get_document_by_id", "description": "Get a Google Document by its ID. The result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "document_id", "description": "The Google Document ID.", "required": true, "type": "string"}]}, {"method_name": "create_document", "description": "Create a new Google Document from an Extended Markdown string.\nArgs:\n    title: The Google Document title\n    body: The Google Document body as an Extended Markdown string.\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "title", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}, {"method_name": "append_to_document_by_id", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its ID.\nArgs:\n    document_id: The Google Document ID\n    body: The Google Document body as an Extended Markdown string\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "document_id", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}, {"method_name": "append_to_document_by_name", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its name.\nArgs:\n    name: The Google Document name\n    body: The Google Document body as an Extended Markdown string\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "name", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}]}, {"description": "Get contents of Google Docs as Markdown", "version": "1.3.3", "methods": [{"method_name": "get_document_by_name", "description": "Get a Google Document by its name.\nIf multiple documents with the same name are found,\nyou need to use the ID of the document to load it.\nHint: Copy-pasting the URL of the document in the Agent will allow it to fetch the document by ID\n\nApostrophes in the title need to be escaped with a backslash.\nThe result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "name", "description": "The Google Document name", "required": true, "type": "string"}]}, {"method_name": "get_document_by_id", "description": "Get a Google Document by its ID. The result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "document_id", "description": "The Google Document ID.", "required": true, "type": "string"}]}, {"method_name": "create_document", "description": "Create a new Google Document from an Extended Markdown string.\nArgs:\n    title: The Google Document title\n    body: The Google Document body as an Extended Markdown string.\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "title", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}, {"method_name": "append_to_document_by_id", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its ID.\nArgs:\n    document_id: The Google Document ID\n    body: The Google Document body as an Extended Markdown string\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "document_id", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}, {"method_name": "append_to_document_by_name", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its name.\nArgs:\n    name: The Google Document name\n    body: The Google Document body as an Extended Markdown string\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "name", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}]}, {"description": "Get contents of Google Docs as Markdown", "version": "1.4.0", "methods": [{"method_name": "get_document_by_name", "description": "Get a Google Document by its name.\nIf multiple documents with the same name are found,\nyou need to use the ID of the document to load it.\nHint: Copy-pasting the URL of the document in the Agent will allow it to fetch the document by ID\n\nApostrophes in the title need to be escaped with a backslash.\nThe result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "name", "description": "The Google Document name", "required": true, "type": "string"}]}, {"method_name": "get_document_by_id", "description": "Get a Google Document by its ID. The result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "document_id", "description": "The Google Document ID.", "required": true, "type": "string"}]}, {"method_name": "create_document", "description": "Create a new Google Document from an Extended Markdown string.\nArgs:\n    title: The Google Document title\n    body: The Google Document body as an Extended Markdown string.\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "title", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}, {"method_name": "append_to_document_by_id", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its ID.\nArgs:\n    document_id: The Google Document ID\n    body: The Google Document body as an Extended Markdown string\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "document_id", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}, {"method_name": "append_to_document_by_name", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its name.\nArgs:\n    name: The Google Document name\n    body: The Google Document body as an Extended Markdown string\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "name", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}]}, {"description": "Get contents of Google Docs as Markdown", "version": "1.4.1", "methods": [{"method_name": "get_document_by_name", "description": "Get a Google Document by its name.\nIf multiple documents with the same name are found,\nyou need to use the ID of the document to load it.\nHint: Copy-pasting the URL of the document in the Agent will allow it to fetch the document by ID\n\nApostrophes in the title need to be escaped with a backslash.\nThe result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "name", "description": "The Google Document name", "required": true, "type": "string"}]}, {"method_name": "get_document_by_id", "description": "Get a Google Document by its ID. The result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "document_id", "description": "The Google Document ID.", "required": true, "type": "string"}]}, {"method_name": "create_document", "description": "Create a new Google Document from an Extended Markdown string.\nArgs:\n    title: The Google Document title\n    body: The Google Document body as an Extended Markdown string.\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "title", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}, {"method_name": "append_to_document_by_id", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its ID.\nArgs:\n    document_id: The Google Document ID\n    body: The Google Document body as an Extended Markdown string\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "document_id", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}, {"method_name": "append_to_document_by_name", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its name.\nArgs:\n    name: The Google Document name\n    body: The Google Document body as an Extended Markdown string\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "name", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}]}, {"description": "Get contents of Google Docs as Markdown", "version": "1.4.2", "methods": [{"method_name": "get_document_by_name", "description": "Get a Google Document by its name.\nIf multiple documents with the same name are found,\nyou need to use the ID of the document to load it.\nHint: Copy-pasting the URL of the document in the Agent will allow it to fetch the document by ID\n\nApostrophes in the title need to be escaped with a backslash.\nThe result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "name", "description": "The Google Document name", "required": true, "type": "string"}]}, {"method_name": "get_document_by_id", "description": "Get a Google Document by its ID. The result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "document_id", "description": "The Google Document ID.", "required": true, "type": "string"}]}, {"method_name": "create_document", "description": "Create a new Google Document from an Extended Markdown string.\nArgs:\n    title: The Google Document title\n    body: The Google Document body as an Extended Markdown string.\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "title", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}, {"method_name": "append_to_document_by_id", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its ID.\nArgs:\n    document_id: The Google Document ID\n    body: The Google Document body as an Extended Markdown string\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "document_id", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}, {"method_name": "append_to_document_by_name", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its name.\nArgs:\n    name: The Google Document name\n    body: The Google Document body as an Extended Markdown string\n    oauth_access_token: The OAuth2 Google access token", "parameters": [{"name": "name", "description": "", "required": true, "type": "string"}, {"name": "body", "description": "", "required": true, "type": "string"}]}]}, {"description": "Get contents of Google Docs as Markdown", "version": "1.4.3", "methods": [{"method_name": "get_document_by_name", "description": "Get a Google Document by its name.\nIf multiple documents with the same name are found,\nyou need to use the ID of the document to load it.\nHint: Copy-pasting the URL of the document in the Agent will allow it to fetch the document by ID\n\nApostrophes in the title need to be escaped with a backslash.\nThe result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "name", "description": "The Google Document name", "required": true, "type": "string"}]}, {"method_name": "get_document_by_id", "description": "Get a Google Document by its ID. The result is the Document formatted using the Extended Markdown Syntax.", "parameters": [{"name": "document_id", "description": "The Google Document ID.", "required": true, "type": "string"}]}, {"method_name": "create_document", "description": "Create a new Google Document from an Extended Markdown string.", "parameters": [{"name": "title", "description": "The Google Document title", "required": true, "type": "string"}, {"name": "body", "description": "The Google Document body as an Extended Markdown string.", "required": true, "type": "string"}]}, {"method_name": "append_to_document_by_id", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its ID.", "parameters": [{"name": "document_id", "description": "The Google Document ID", "required": true, "type": "string"}, {"name": "body", "description": "The Google Document body as an Extended Markdown string", "required": true, "type": "string"}]}, {"method_name": "append_to_document_by_name", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its name.", "parameters": [{"name": "name", "description": "The Google Document name", "required": true, "type": "string"}, {"name": "body", "description": "The Google Document body as an Extended Markdown string", "required": true, "type": "string"}]}]}, {"description": "Get contents of Google Docs as Markdown", "version": "2.0.0", "methods": [{"method_name": "get_document_by_name", "description": "Get a Google Document by its name.\nIf multiple documents with the same name are found,\nyou need to use the ID of the document to load it.\nHint: Copy-pasting the URL of the document in the Agent will allow it to fetch the document by ID\n\nApostrophes in the title need to be escaped with a backslash.\nThe result is the Document formatted using the Extended Markdown Syntax.\n\nWhen no tab is specified, all tab contents are included in a structured format.\n\nNote: Comments are automatically included in the response when available. Comments are fetched\nvia Google Drive API which works with documents.readonly scope.", "parameters": [{"name": "name", "description": "The Google Document name", "required": true, "type": "string"}, {"name": "tab_index", "description": "Optional tab index to get content from a specific tab", "required": false, "type": "integer"}, {"name": "tab_title", "description": "Optional tab title to get content from a specific tab", "required": false, "type": "string"}, {"name": "include_comments", "description": "Optional boolean to include comments in the response", "required": false, "type": "boolean"}]}, {"method_name": "get_document_by_id", "description": "Get a Google Document by its ID. The result is the Document formatted using the Extended Markdown Syntax.\nWhen no tab is specified, all tab contents are included in a structured format.\n\nNote: Comments are automatically included in the response when available. Comments are fetched\nvia Google Drive API which works with documents.readonly scope.", "parameters": [{"name": "document_id", "description": "The Google Document ID.", "required": true, "type": "string"}, {"name": "tab_index", "description": "Optional tab index to get content from a specific tab", "required": false, "type": "integer"}, {"name": "tab_title", "description": "Optional tab title to get content from a specific tab", "required": false, "type": "string"}, {"name": "include_comments", "description": "Optional boolean to include comments in the response", "required": false, "type": "boolean"}]}, {"method_name": "create_document", "description": "Create a new Google Document from an Extended Markdown string.", "parameters": [{"name": "title", "description": "The Google Document title", "required": true, "type": "string"}, {"name": "body", "description": "The Google Document body as an Extended Markdown string.", "required": true, "type": "string"}, {"name": "tab_index", "description": "Optional tab index to add content to a specific tab (for existing documents)", "required": false, "type": "integer"}, {"name": "tab_title", "description": "Optional tab title to add content to a specific tab (for existing documents)", "required": false, "type": "string"}]}, {"method_name": "append_to_document_by_id", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its ID.", "parameters": [{"name": "document_id", "description": "The Google Document ID", "required": true, "type": "string"}, {"name": "body", "description": "The Google Document body as an Extended Markdown string", "required": true, "type": "string"}, {"name": "tab_index", "description": "Optional tab index to append content to a specific tab", "required": false, "type": "integer"}, {"name": "tab_title", "description": "Optional tab title to append content to a specific tab", "required": false, "type": "string"}]}, {"method_name": "append_to_document_by_name", "description": "Appends text formated using Extended Markdown syntax to an existing Google Document by its name.", "parameters": [{"name": "name", "description": "The Google Document name", "required": true, "type": "string"}, {"name": "body", "description": "The Google Document body as an Extended Markdown string", "required": true, "type": "string"}, {"name": "tab_index", "description": "Optional tab index to append content to a specific tab", "required": false, "type": "integer"}, {"name": "tab_title", "description": "Optional tab title to append content to a specific tab", "required": false, "type": "string"}]}, {"method_name": "get_document_comments", "description": "List comments for a Google Doc using the Google Drive API.", "parameters": [{"name": "document_id", "description": "Optional Google Document ID", "required": false, "type": "string"}, {"name": "document_name", "description": "Optional Google Document name", "required": false, "type": "string"}, {"name": "tab_id", "description": "Optional tab ID to filter comments to a specific tab", "required": false, "type": "string"}, {"name": "tab_index", "description": "Optional tab index to filter comments to a specific tab", "required": false, "type": "integer"}, {"name": "tab_title", "description": "Optional tab title to filter comments to a specific tab", "required": false, "type": "string"}]}]}, {"description": "Get contents of Google Docs as Markdown and download files in various formats", "version": "3.0.0", "methods": [{"method_name": "get_document_by_name", "description": "Get a Google Document by its name.\nIf multiple documents with the same name are found,\nyou need to use the ID of the document to load it.\nHint: Copy-pasting the URL of the document in the Agent will allow it to fetch the document by ID\n\nApostrophes in the title need to be escaped with a backslash.\nThe result is the Document formatted using the Extended Markdown Syntax.\n\nWhen no tab is specified, all tab contents are included in a structured format.\n\nNote: Comments are automatically included in the response when available. Comments are fetched\nvia Google Drive API which works with documents.readonly scope.", "parameters": [{"name": "name", "description": "The Google Document name", "required": true, "type": "string"}, {"name": "tab_index", "description": "Optional tab index to get content from a specific tab", "required": false, "type": "integer"}, {"name": "tab_title", "description": "Optional tab title to get content from a specific tab", "required": false, "type": "string"}, {"name": "include_comments", "description": "Optional boolean to include comments in the response", "required": false, "type": "boolean"}, {"name": "download", "description": "Optional boolean to download the document in a supported format and attach to chat (default: True)", "required": false, "type": "boolean"}, {"name": "export_format", "description": "The MIME type for the export format when download=True (default: PDF)\nSupported formats: PDF, DOCX, TXT, HTML, RTF, ODT", "required": false, "type": "string"}]}, {"method_name": "get_document_by_id", "description": "Get a Google Document by its ID. The result is the Document formatted using the Extended Markdown Syntax.\nWhen no tab is specified, all tab contents are included in a structured format.\n\nNote: Comments are automatically included in the response when available. Comments are fetched\nvia Google Drive API which works with documents.readonly scope.", "parameters": [{"name": "document_id", "description": "The Google Document ID.", "required": true, "type": "string"}, {"name": "tab_index", "description": "Optional tab index to get content from a specific tab", "required": false, "type": "integer"}, {"name": "tab_title", "description": "Optional tab title to get content from a specific tab", "required": false, "type": "string"}, {"name": "include_comments", "description": "Optional boolean to include comments in the response", "required": false, "type": "boolean"}, {"name": "download", "description": "Optional boolean to download the document in a supported format and attach to chat (default: True)", "required": false, "type": "boolean"}, {"name": "export_format", "description": "The MIME type for the export format when download=True (default: PDF)\nSupported formats: PDF, DOCX, TXT, HTML, RTF, ODT", "required": false, "type": "string"}]}, {"method_name": "create_document", "description": "Create a new Google Document from an Extended Markdown string.", "parameters": [{"name": "title", "description": "The Google Document title", "required": true, "type": "string"}, {"name": "body", "description": "The Google Document body as an Extended Markdown string.", "required": true, "type": "string"}, {"name": "tab_index", "description": "Optional tab index to add content to a specific tab (for existing documents)", "required": false, "type": "integer"}, {"name": "tab_title", "description": "Optional tab title to add content to a specific tab (for existing documents)", "required": false, "type": "string"}, {"name": "image_files", "description": "Optional list of local file paths to images that should be embedded in the document", "required": false, "type": "array"}]}, {"method_name": "insert_content_to_document_by_id", "description": "Inserts text formatted using Extended Markdown syntax into an existing Google Document by its ID.", "parameters": [{"name": "document_id", "description": "The Google Document ID", "required": true, "type": "string"}, {"name": "body", "description": "The Google Document body as an Extended Markdown string", "required": true, "type": "string"}, {"name": "position", "description": "Whether to prepend (insert at beginning) or append (insert at end) content", "required": false, "type": "string"}, {"name": "tab_index", "description": "Optional tab index to insert content into a specific tab", "required": false, "type": "integer"}, {"name": "tab_title", "description": "Optional tab title to insert content into a specific tab", "required": false, "type": "string"}]}, {"method_name": "insert_content_to_document_by_name", "description": "Inserts text formatted using Extended Markdown syntax into an existing Google Document by its name.", "parameters": [{"name": "name", "description": "The Google Document name", "required": true, "type": "string"}, {"name": "body", "description": "The Google Document body as an Extended Markdown string", "required": true, "type": "string"}, {"name": "position", "description": "Whether to prepend (insert at beginning) or append (insert at end) content", "required": false, "type": "string"}, {"name": "tab_index", "description": "Optional tab index to insert content into a specific tab", "required": false, "type": "integer"}, {"name": "tab_title", "description": "Optional tab title to insert content into a specific tab", "required": false, "type": "string"}]}, {"method_name": "get_document_comments", "description": "List comments for a Google Doc using the Google Drive API.", "parameters": [{"name": "document_id", "description": "Optional Google Document ID", "required": false, "type": "string"}, {"name": "document_name", "description": "Optional Google Document name", "required": false, "type": "string"}, {"name": "tab_id", "description": "Optional tab ID to filter comments to a specific tab", "required": false, "type": "string"}, {"name": "tab_index", "description": "Optional tab index to filter comments to a specific tab", "required": false, "type": "integer"}, {"name": "tab_title", "description": "Optional tab title to filter comments to a specific tab", "required": false, "type": "string"}]}, {"method_name": "list_sema4_files", "description": "List all files in the .sema4ai-document-assets Google Drive folder.", "parameters": []}, {"method_name": "cleanup_old_sema4_files", "description": "Clean up old files in the .sema4ai-document-assets Google Drive folder.", "parameters": [{"name": "days_old", "description": "Number of days after which files are considered old (default: 30)", "required": false, "type": "integer"}]}, {"method_name": "search_documents", "description": "Search Google Documents by name, owner, description, and optionally content.\nUse this action to find documents when you know partial names, keywords, author names,\nor need to search within document text. Supports fuzzy matching for approximate searches.\n\nWhen to use:\n- Finding documents with similar names (\"project report\" matches \"Q1 Project Status Report\")\n- Searching by author (\"documents by john\", \"sarah's files\")\n- Looking for content keywords (use search_content=True for text within documents)\n- General document discovery when exact names are unknown", "parameters": [{"name": "search_query", "description": "Keywords, partial names, author names, or phrases to search for", "required": true, "type": "string"}, {"name": "max_results", "description": "Maximum number of results to return (default: 10, max: 50)", "required": false, "type": "integer"}, {"name": "search_content", "description": "Set to True to search inside document text (slower but finds content matches)", "required": false, "type": "boolean"}]}, {"method_name": "list_recent_documents", "description": "List recently modified Google Documents.\nThis action finds Google Documents that have been modified within the specified time period.\nUse this when you need to find documents you've worked on recently, rather than searching by content.\n\nUSAGE EXAMPLES:\n- \"documents I updated today\" -> days=1\n- \"docs modified this week\" -> days=7\n- \"recent work documents\" -> days=7 or days=14\n- \"files I changed yesterday\" -> days=2", "parameters": [{"name": "days", "description": "Number of days to look back for modifications (default: 7)", "required": false, "type": "integer"}, {"name": "max_results", "description": "Maximum number of results to return (default: 20, max: 100)", "required": false, "type": "integer"}]}]}]}, "Google Drive": {"name": "Google Drive", "versions": [{"description": "Atomic actions operating with Google Drive.", "version": "1.0.0", "methods": [{"method_name": "get_file_by_id", "description": "Get a file from Google Drive by id.", "parameters": [{"name": "file_id", "description": "Unique id of the file.", "required": true, "type": "string"}]}, {"method_name": "get_files_by_query", "description": "Get all files from Google Drive that match the given query.", "parameters": [{"name": "query", "description": "Google Drive API V3 query string for search files in the format query_term operator values.", "required": true, "type": "string"}]}, {"method_name": "get_file_contents", "description": "Get the file contents.", "parameters": [{"name": "name", "description": "Name of the file.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet in case of Excel files, default is the first sheet.", "required": false, "type": "string"}]}, {"method_name": "share_document", "description": "Share a document with a specific email address.", "parameters": [{"name": "name", "description": "Name of the file to be shared.", "required": true, "type": "string"}, {"name": "role", "description": "Assign a specific role. Possible options are: reader, writer, commenter, organizer, fileOrganizer.", "required": true, "type": "string"}, {"name": "email_address", "description": "The email address of the user or group to share the file with.", "required": true, "type": "string"}]}, {"method_name": "list_file_comments", "description": "List the comments on a specific file.", "parameters": [{"name": "name", "description": "Name of the file to read its associated comments.", "required": true, "type": "string"}]}]}, {"description": "Interact with Google Drive resources - search files, get comments, get contents and more!", "version": "1.0.1", "methods": [{"method_name": "get_file_by_id", "description": "Get a file from Google Drive by id.", "parameters": [{"name": "file_id", "description": "Unique id of the file.", "required": true, "type": "string"}]}, {"method_name": "get_files_by_query", "description": "Get all files from Google Drive that match the given query.", "parameters": [{"name": "query", "description": "Google Drive API V3 query string for search files in the format query_term operator values.", "required": true, "type": "string"}]}, {"method_name": "get_file_contents", "description": "Get the file contents.", "parameters": [{"name": "name", "description": "Name of the file.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet in case of Excel files, default is the first sheet.", "required": false, "type": "string"}]}, {"method_name": "share_document", "description": "Share a document with a specific email address.", "parameters": [{"name": "name", "description": "Name of the file to be shared.", "required": true, "type": "string"}, {"name": "role", "description": "Assign a specific role. Possible options are: reader, writer, commenter, organizer, fileOrganizer.", "required": true, "type": "string"}, {"name": "email_address", "description": "The email address of the user or group to share the file with.", "required": true, "type": "string"}]}, {"method_name": "list_file_comments", "description": "List the comments on a specific file.", "parameters": [{"name": "name", "description": "Name of the file to read its associated comments.", "required": true, "type": "string"}]}]}, {"description": "Interact with Google Drive resources - search files, get comments, get contents and more!", "version": "1.0.2", "methods": [{"method_name": "get_file_by_id", "description": "Get a file from Google Drive by id.", "parameters": [{"name": "file_id", "description": "Unique id of the file.", "required": true, "type": "string"}]}, {"method_name": "get_files_by_query", "description": "Get all files from Google Drive that match the given query.", "parameters": [{"name": "query", "description": "Google Drive API V3 query string for search files in the format query_term operator values.", "required": true, "type": "string"}, {"name": "search_all_drives", "description": "Whether to search both My Drives and all shared drives.\nDefault is set to false for better performance and will include both owned files and those that have been\nshared with the user.", "required": false, "type": "boolean"}]}, {"method_name": "get_file_contents", "description": "Get the file contents.", "parameters": [{"name": "name", "description": "Name of the file.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet in case of Excel files, default is the first sheet.", "required": false, "type": "string"}]}, {"method_name": "share_document", "description": "Share a document with a specific email address.", "parameters": [{"name": "name", "description": "Name of the file to be shared.", "required": true, "type": "string"}, {"name": "role", "description": "Assign a specific role. Possible options are: reader, writer, commenter, organizer, fileOrganizer.", "required": true, "type": "string"}, {"name": "email_address", "description": "The email address of the user or group to share the file with.", "required": true, "type": "string"}]}, {"method_name": "list_file_comments", "description": "List the comments on a specific file.", "parameters": [{"name": "name", "description": "Name of the file to read its associated comments.", "required": true, "type": "string"}]}]}, {"description": "Interact with Google Drive resources - search files, get comments, get contents and more!", "version": "1.0.3", "methods": [{"method_name": "get_file_by_id", "description": "Get a file from Google Drive by id.", "parameters": [{"name": "file_id", "description": "Unique id of the file.", "required": true, "type": "string"}]}, {"method_name": "get_files_by_query", "description": "Get all files from Google Drive that match the given query.", "parameters": [{"name": "query", "description": "Google Drive API V3 query string for search files in the format query_term operator values.", "required": true, "type": "string"}, {"name": "search_all_drives", "description": "Whether to search both My Drives and all shared drives.\nDefault is set to false for better performance and will include both owned files and those that have been\nshared with the user.", "required": false, "type": "boolean"}]}, {"method_name": "get_file_contents", "description": "Get the file contents.", "parameters": [{"name": "name", "description": "Name of the file.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet in case of Excel files, default is the first sheet.", "required": false, "type": "string"}]}, {"method_name": "share_document", "description": "Share a document with a specific email address.", "parameters": [{"name": "name", "description": "Name of the file to be shared.", "required": true, "type": "string"}, {"name": "role", "description": "Assign a specific role. Possible options are: reader, writer, commenter, organizer, fileOrganizer.", "required": true, "type": "string"}, {"name": "email_address", "description": "The email address of the user or group to share the file with.", "required": true, "type": "string"}]}, {"method_name": "list_file_comments", "description": "List the comments on a specific file.", "parameters": [{"name": "name", "description": "Name of the file to read its associated comments.", "required": true, "type": "string"}]}]}, {"description": "Interact with Google Drive resources - search files, get comments, get contents and more!", "version": "1.0.4", "methods": [{"method_name": "get_file_by_id", "description": "Get a file from Google Drive by id.", "parameters": [{"name": "file_id", "description": "Unique id of the file.", "required": true, "type": "string"}]}, {"method_name": "get_files_by_query", "description": "Get all files from Google Drive that match the given query.", "parameters": [{"name": "query", "description": "Google Drive API V3 query string for search files in the format query_term operator values.", "required": true, "type": "string"}, {"name": "search_all_drives", "description": "Whether to search both My Drives and all shared drives.\nDefault is set to false for better performance and will include both owned files and those that have been\nshared with the user.", "required": false, "type": "boolean"}]}, {"method_name": "get_file_contents", "description": "Get the file contents.", "parameters": [{"name": "name", "description": "Name of the file.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet in case of Excel files, default is the first sheet.", "required": false, "type": "string"}]}, {"method_name": "share_document", "description": "Share a document with a specific email address.", "parameters": [{"name": "name", "description": "Name of the file to be shared.", "required": true, "type": "string"}, {"name": "role", "description": "Assign a specific role. Possible options are: reader, writer, commenter, organizer, fileOrganizer.", "required": true, "type": "string"}, {"name": "email_address", "description": "The email address of the user or group to share the file with.", "required": true, "type": "string"}]}, {"method_name": "list_file_comments", "description": "List the comments on a specific file.", "parameters": [{"name": "name", "description": "Name of the file to read its associated comments.", "required": true, "type": "string"}]}]}, {"description": "Interact with Google Drive resources - search files, get comments, get contents and more!", "version": "1.0.5", "methods": [{"method_name": "get_file_by_id", "description": "Get a file from Google Drive by id.", "parameters": [{"name": "file_id", "description": "Unique id of the file.", "required": true, "type": "string"}]}, {"method_name": "get_files_by_query", "description": "Get all files from Google Drive that match the given query.", "parameters": [{"name": "query", "description": "Google Drive API V3 query string for search files in the format query_term operator values.", "required": true, "type": "string"}, {"name": "search_all_drives", "description": "Whether to search both My Drives and all shared drives.\nDefault is set to false for better performance and will include both owned files and those that have been\nshared with the user.", "required": false, "type": "boolean"}]}, {"method_name": "get_file_contents", "description": "Get the file contents.", "parameters": [{"name": "name", "description": "Name of the file.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet in case of Excel files, default is the first sheet.", "required": false, "type": "string"}]}, {"method_name": "share_document", "description": "Share a document with a specific email address.", "parameters": [{"name": "name", "description": "Name of the file to be shared.", "required": true, "type": "string"}, {"name": "role", "description": "Assign a specific role. Possible options are: reader, writer, commenter, organizer, fileOrganizer.", "required": true, "type": "string"}, {"name": "email_address", "description": "The email address of the user or group to share the file with.", "required": true, "type": "string"}]}, {"method_name": "list_file_comments", "description": "List the comments on a specific file.", "parameters": [{"name": "name", "description": "Name of the file to read its associated comments.", "required": true, "type": "string"}]}]}, {"description": "Interact with Google Drive resources - search files, get comments, get contents and more!", "version": "1.0.6", "methods": [{"method_name": "get_file_by_id", "description": "Get a file from Google Drive by id.", "parameters": [{"name": "file_id", "description": "Unique id of the file.", "required": true, "type": "string"}]}, {"method_name": "get_files_by_query", "description": "Get all files from Google Drive that match the given query.", "parameters": [{"name": "query", "description": "Google Drive API V3 query string for search files in the format query_term operator values.", "required": true, "type": "string"}, {"name": "search_all_drives", "description": "Whether to search both My Drives and all shared drives.\nDefault is set to false for better performance and will include both owned files and those that have been\nshared with the user.", "required": false, "type": "boolean"}]}, {"method_name": "get_file_contents", "description": "Get the file contents.", "parameters": [{"name": "name", "description": "Name of the file.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet in case of Excel files, default is the first sheet.", "required": false, "type": "string"}]}, {"method_name": "share_document", "description": "Share a document with a specific email address.", "parameters": [{"name": "name", "description": "Name of the file to be shared.", "required": true, "type": "string"}, {"name": "role", "description": "Assign a specific role. Possible options are: reader, writer, commenter, organizer, fileOrganizer.", "required": true, "type": "string"}, {"name": "email_address", "description": "The email address of the user or group to share the file with.", "required": true, "type": "string"}]}, {"method_name": "list_file_comments", "description": "List the comments on a specific file.", "parameters": [{"name": "name", "description": "Name of the file to read its associated comments.", "required": true, "type": "string"}]}]}, {"description": "Interact with Google Drive resources - search files, get comments, get contents and more!", "version": "1.1.0", "methods": [{"method_name": "get_file_by_id", "description": "Get a file from Google Drive by id.", "parameters": [{"name": "file_id", "description": "Unique id of the file.", "required": true, "type": "string"}]}, {"method_name": "get_files_by_query", "description": "Get all files from Google Drive that match the given query.", "parameters": [{"name": "query", "description": "Google Drive API V3 query string for search files in the format query_term operator values.", "required": true, "type": "string"}, {"name": "search_all_drives", "description": "Whether to search both My Drives and all shared drives.\nDefault is set to false for better performance and will include both owned files and those that have been\nshared with the user.", "required": false, "type": "boolean"}]}, {"method_name": "get_file_contents", "description": "Get the file contents.", "parameters": [{"name": "name", "description": "Name of the file.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet in case of Excel files, default is the first sheet.", "required": false, "type": "string"}]}, {"method_name": "share_document", "description": "Share a document with a specific email address.", "parameters": [{"name": "name", "description": "Name of the file to be shared.", "required": true, "type": "string"}, {"name": "role", "description": "Assign a specific role. Possible options are: reader, writer, commenter, organizer, fileOrganizer.", "required": true, "type": "string"}, {"name": "email_address", "description": "The email address of the user or group to share the file with.", "required": true, "type": "string"}]}, {"method_name": "list_file_comments", "description": "List the comments on a specific file.", "parameters": [{"name": "name", "description": "Name of the file to read its associated comments.", "required": true, "type": "string"}]}]}, {"description": "Interact with Google Drive resources - search files, get comments, get contents and more!", "version": "1.1.1", "methods": [{"method_name": "get_file_by_id", "description": "Get a file from Google Drive by id.", "parameters": [{"name": "file_id", "description": "Unique id of the file.", "required": true, "type": "string"}]}, {"method_name": "get_files_by_query", "description": "Get all files from Google Drive that match the given query.", "parameters": [{"name": "query", "description": "Google Drive API V3 query string for search files in the format query_term operator values.", "required": true, "type": "string"}, {"name": "search_all_drives", "description": "Whether to search both My Drives and all shared drives.\nDefault is set to false for better performance and will include both owned files and those that have been\nshared with the user.", "required": false, "type": "boolean"}]}, {"method_name": "get_file_contents", "description": "Get the file contents.", "parameters": [{"name": "name", "description": "Name of the file.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet in case of Excel files, default is the first sheet.", "required": false, "type": "string"}]}, {"method_name": "share_document", "description": "Share a document with a specific email address.", "parameters": [{"name": "name", "description": "Name of the file to be shared.", "required": true, "type": "string"}, {"name": "role", "description": "Assign a specific role. Possible options are: reader, writer, commenter, organizer, fileOrganizer.", "required": true, "type": "string"}, {"name": "email_address", "description": "The email address of the user or group to share the file with.", "required": true, "type": "string"}]}, {"method_name": "list_file_comments", "description": "List the comments on a specific file.", "parameters": [{"name": "name", "description": "Name of the file to read its associated comments.", "required": true, "type": "string"}]}]}, {"description": "Interact with Google Drive resources - search files, get comments, get contents and more!", "version": "1.2.0", "methods": [{"method_name": "get_file_by_id", "description": "Get a file from Google Drive by id.", "parameters": [{"name": "file_id", "description": "Unique id of the file.", "required": true, "type": "string"}]}, {"method_name": "get_files_by_query", "description": "Get all files from Google Drive that match the given query.", "parameters": [{"name": "query", "description": "Google Drive API V3 query string for search files in the format query_term operator values.\nWhen using 'in parents' operator, you can use either the parent folder's ID or name.\nExample: \"name = 'Report' and 'My Folder' in parents\"\nWhen search_all_drives is True, parent folder names will be searched in shared drives first.", "required": true, "type": "string"}, {"name": "search_all_drives", "description": "Whether to search both My Drives and all shared drives.\nDefault is set to false for better performance and will include both owned files and those that have been\nshared with the user.", "required": false, "type": "boolean"}, {"name": "basic_info_only", "description": "Whether to return only the basic information of the files", "required": false, "type": "boolean"}, {"name": "save_result_as_csv", "description": "If True, saves results to 'query_result.csv'. If a string is provided,\nuses that as the filename to save the CSV results.", "required": false, "type": "string"}]}, {"method_name": "get_file_contents", "description": "Get the file contents.", "parameters": [{"name": "name", "description": "Name of the file.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet in case of Excel files, default is the first sheet.", "required": false, "type": "string"}]}, {"method_name": "share_document", "description": "Share a document with a specific email address.", "parameters": [{"name": "name", "description": "Name of the file to be shared.", "required": true, "type": "string"}, {"name": "role", "description": "Assign a specific role. Possible options are: reader, writer, commenter, organizer, fileOrganizer.", "required": true, "type": "string"}, {"name": "email_address", "description": "The email address of the user or group to share the file with.", "required": true, "type": "string"}]}, {"method_name": "list_file_comments", "description": "List the comments on a specific file.", "parameters": [{"name": "name", "description": "Name of the file to read its associated comments.", "required": true, "type": "string"}]}, {"method_name": "upload_file", "description": "Upload a file to Google Drive, and optionally share it with a user.\nThe `parent_folder_id` can be either a folder ID or a shared drive ID, if not then use\n`get_files_by_query` to find the ID of the parent folder.", "parameters": [{"name": "filename", "description": "The name of the file to prompt the user to select or upload.", "required": true, "type": "string"}, {"name": "drive_file_name", "description": "Desired name for the file in Google Drive.", "required": true, "type": "string"}, {"name": "parent_folder_id", "description": "Optional ID of the parent folder in Drive.", "required": false, "type": "string"}, {"name": "share_with_email", "description": "Optional email address to share the file with after upload.", "required": false, "type": "string"}, {"name": "share_role", "description": "Role to grant to the shared user (reader, writer, commenter, organizer, fileOrganizer). Default is 'reader'.", "required": false, "type": "string"}]}]}, {"description": "Interact with Google Drive resources - search files, get comments, get contents and more!", "version": "1.2.1", "methods": [{"method_name": "get_file_by_id", "description": "Get a file from Google Drive by id.", "parameters": [{"name": "file_id", "description": "Unique id of the file.", "required": true, "type": "string"}]}, {"method_name": "get_files_by_query", "description": "Get all files from Google Drive that match the given query.", "parameters": [{"name": "query", "description": "Google Drive API V3 query string for search files in the format query_term operator values.\nWhen using 'in parents' operator, you can use either the parent folder's ID or name.\nExample: \"name = 'Report' and 'My Folder' in parents\"\nWhen search_all_drives is True, parent folder names will be searched in shared drives first.", "required": true, "type": "string"}, {"name": "search_all_drives", "description": "Whether to search both My Drives and all shared drives.\nDefault is set to false for better performance and will include both owned files and those that have been\nshared with the user.", "required": false, "type": "boolean"}, {"name": "basic_info_only", "description": "Whether to return only the basic information of the files", "required": false, "type": "boolean"}, {"name": "save_result_as_csv", "description": "If True, saves results to 'query_result.csv'. If a string is provided,\nuses that as the filename to save the CSV results.", "required": false, "type": "string"}]}, {"method_name": "get_file_contents", "description": "Get the file contents.", "parameters": [{"name": "name", "description": "Name of the file.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet in case of Excel files, default is the first sheet.", "required": false, "type": "string"}]}, {"method_name": "share_document", "description": "Share a document with a specific email address.", "parameters": [{"name": "name", "description": "Name of the file to be shared.", "required": true, "type": "string"}, {"name": "role", "description": "Assign a specific role. Possible options are: reader, writer, commenter, organizer, fileOrganizer.", "required": true, "type": "string"}, {"name": "email_address", "description": "The email address of the user or group to share the file with.", "required": true, "type": "string"}]}, {"method_name": "list_file_comments", "description": "List the comments on a specific file.", "parameters": [{"name": "name", "description": "Name of the file to read its associated comments.", "required": true, "type": "string"}]}, {"method_name": "upload_file", "description": "Upload a file to Google Drive, and optionally share it with a user.\nThe `parent_folder_id` can be either a folder ID or a shared drive ID, if not then use\n`get_files_by_query` to find the ID of the parent folder.", "parameters": [{"name": "filename", "description": "The name of the file to prompt the user to select or upload.", "required": true, "type": "string"}, {"name": "drive_file_name", "description": "Desired name for the file in Google Drive.", "required": true, "type": "string"}, {"name": "parent_folder_id", "description": "Optional ID of the parent folder in Drive.", "required": false, "type": "string"}, {"name": "share_with_email", "description": "Optional email address to share the file with after upload.", "required": false, "type": "string"}, {"name": "share_role", "description": "Role to grant to the shared user (reader, writer, commenter, organizer, fileOrganizer). Default is 'reader'.", "required": false, "type": "string"}]}]}, {"description": "Interact with Google Drive resources - search files, get comments, get contents and more!", "version": "1.3.0", "methods": [{"method_name": "get_file_by_id", "description": "Get a file from Google Drive by id.", "parameters": [{"name": "file_id", "description": "Unique id of the file.", "required": true, "type": "string"}, {"name": "attach", "description": "Whether to attach the file to the chat. Default is True.", "required": false, "type": "boolean"}, {"name": "attach_with_name", "description": "Name of the file to attach to the chat. Default is the file name.", "required": false, "type": "string"}]}, {"method_name": "get_files_by_query", "description": "Get all files from Google Drive that match the given query.", "parameters": [{"name": "query", "description": "Google Drive API V3 query string for search files in the format query_term operator values.\nWhen using 'in parents' operator, you can use either the parent folder's ID or name.\nExample: \"name = 'Report' and 'My Folder' in parents\"\nWhen search_all_drives is True, parent folder names will be searched in shared drives first.", "required": true, "type": "string"}, {"name": "search_all_drives", "description": "Whether to search both My Drives and all shared drives.\nDefault is set to false for better performance and will include both owned files and those that have been\nshared with the user.", "required": false, "type": "boolean"}, {"name": "basic_info_only", "description": "Whether to return only the basic information of the files", "required": false, "type": "boolean"}, {"name": "save_result_as_csv", "description": "If True, saves results to 'query_result.csv'. If a string is provided,\nuses that as the filename to save the CSV results.", "required": false, "type": "string"}, {"name": "attach", "description": "Whether to attach each file to the chat. Default is False.", "required": false, "type": "boolean"}]}, {"method_name": "get_file_contents", "description": "Get the file contents.", "parameters": [{"name": "name", "description": "Name of the file.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet in case of Excel files, default is the first sheet.", "required": false, "type": "string"}, {"name": "attach", "description": "Whether to attach the file to the chat. Default is True.", "required": false, "type": "boolean"}, {"name": "attach_with_name", "description": "Name of the file to attach to the chat. Default is the file name.", "required": false, "type": "string"}]}, {"method_name": "share_document", "description": "Share a document with a specific email address.", "parameters": [{"name": "name", "description": "Name of the file to be shared.", "required": true, "type": "string"}, {"name": "role", "description": "Assign a specific role. Possible options are: reader, writer, commenter, organizer, fileOrganizer.", "required": true, "type": "string"}, {"name": "email_address", "description": "The email address of the user or group to share the file with.", "required": true, "type": "string"}]}, {"method_name": "list_file_comments", "description": "List the comments on a specific file.", "parameters": [{"name": "name", "description": "Name of the file to read its associated comments.", "required": true, "type": "string"}]}, {"method_name": "upload_file", "description": "Upload a file to Google Drive, and optionally share it with a user.\nThe `parent_folder_id` can be either a folder ID or a shared drive ID, if not then use\n`get_files_by_query` to find the ID of the parent folder.", "parameters": [{"name": "filename", "description": "The name of the file to prompt the user to select or upload.", "required": true, "type": "string"}, {"name": "drive_file_name", "description": "Desired name for the file in Google Drive.", "required": true, "type": "string"}, {"name": "parent_folder_id", "description": "Optional ID of the parent folder in Drive.", "required": false, "type": "string"}, {"name": "share_with_email", "description": "Optional email address to share the file with after upload.", "required": false, "type": "string"}, {"name": "share_role", "description": "Role to grant to the shared user (reader, writer, commenter, organizer, fileOrganizer). Default is 'reader'.", "required": false, "type": "string"}]}]}, {"description": "Interact with Google Drive resources - search files, get comments, get contents and more!", "version": "1.3.1", "methods": [{"method_name": "get_file_by_id", "description": "Get a file from Google Drive by id.", "parameters": [{"name": "file_id", "description": "Unique id of the file.", "required": true, "type": "string"}, {"name": "attach", "description": "Whether to attach the file to the chat. Default is True.", "required": false, "type": "boolean"}, {"name": "attach_with_name", "description": "Name of the file to attach to the chat. Default is the file name.", "required": false, "type": "string"}]}, {"method_name": "get_files_by_query", "description": "Get all files from Google Drive that match the given query.", "parameters": [{"name": "query", "description": "Google Drive API V3 query string for search files in the format query_term operator values.\nWhen using 'in parents' operator, you can use either the parent folder's ID or name.\nExample: \"name = 'Report' and 'My Folder' in parents\"\nWhen search_all_drives is True, parent folder names will be searched in shared drives first.", "required": true, "type": "string"}, {"name": "search_all_drives", "description": "Whether to search both My Drives and all shared drives.\nDefault is set to false for better performance and will include both owned files and those that have been\nshared with the user.", "required": false, "type": "boolean"}, {"name": "basic_info_only", "description": "Whether to return only the basic information of the files", "required": false, "type": "boolean"}, {"name": "save_result_as_csv", "description": "If True, saves results to 'query_result.csv'. If a string is provided,\nuses that as the filename to save the CSV results.", "required": false, "type": "string"}, {"name": "attach", "description": "Whether to attach each file to the chat. Default is False.", "required": false, "type": "boolean"}]}, {"method_name": "get_file_contents", "description": "Get the file contents.", "parameters": [{"name": "name", "description": "Name of the file.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet in case of Excel files, default is the first sheet.", "required": false, "type": "string"}, {"name": "attach", "description": "Whether to attach the file to the chat. Default is True.", "required": false, "type": "boolean"}, {"name": "attach_with_name", "description": "Name of the file to attach to the chat. Default is the file name.", "required": false, "type": "string"}]}, {"method_name": "share_document", "description": "Share a document with a specific email address.", "parameters": [{"name": "name", "description": "Name of the file to be shared.", "required": true, "type": "string"}, {"name": "role", "description": "Assign a specific role. Possible options are: reader, writer, commenter, organizer, fileOrganizer.", "required": true, "type": "string"}, {"name": "email_address", "description": "The email address of the user or group to share the file with.", "required": true, "type": "string"}]}, {"method_name": "list_file_comments", "description": "List the comments on a specific file.", "parameters": [{"name": "name", "description": "Name of the file to read its associated comments.", "required": true, "type": "string"}]}, {"method_name": "upload_file", "description": "Upload a file to Google Drive, and optionally share it with a user.\nThe `parent_folder_id` can be either a folder ID or a shared drive ID, if not then use\n`get_files_by_query` to find the ID of the parent folder.", "parameters": [{"name": "filename", "description": "The name of the file to prompt the user to select or upload.", "required": true, "type": "string"}, {"name": "drive_file_name", "description": "Desired name for the file in Google Drive.", "required": true, "type": "string"}, {"name": "parent_folder_id", "description": "Optional ID of the parent folder in Drive.", "required": false, "type": "string"}, {"name": "share_with_email", "description": "Optional email address to share the file with after upload.", "required": false, "type": "string"}, {"name": "share_role", "description": "Role to grant to the shared user (reader, writer, commenter, organizer, fileOrganizer). Default is 'reader'.", "required": false, "type": "string"}]}]}]}, "Google Mail": {"name": "Google Mail", "versions": [{"description": "Atomic actions operating with Google Mail (GMail) using OAuth2 authentication.", "version": "1.1.0", "methods": [{"method_name": "send_draft", "description": "Send draft email by its draft id.", "parameters": [{"name": "draft_id", "description": "the id of the draft to send", "required": true, "type": "string"}]}, {"method_name": "get_email_content", "description": "Get Google email content with specific email id or with\na query filter.", "parameters": [{"name": "email_id", "description": "the email id to get the content from", "required": false, "type": "string"}, {"name": "query", "description": "the query filter to apply to the emails", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to return (default 10)", "required": false, "type": "integer"}]}, {"method_name": "create_draft", "description": "Create a draft of an email.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "remove_labels", "description": "Removes label(s) from emails using Google Email labels with a specific email id or with a query filter.", "parameters": [{"name": "query", "description": "the query filter to find emails to remove labels", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "labels", "description": "the label names to remove from the emails (comma separated)", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to remove labels", "required": false, "type": "integer"}]}, {"method_name": "send_email", "description": "Send the email to the recipient(s) using the Gmail API.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": true, "type": "string"}, {"name": "body", "description": "the message of the email", "required": true, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": true, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "list_drafts", "description": "Get list of drafts or filter drafts with a query.", "parameters": [{"name": "query", "description": "query to filter drafts or list all drafts", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Moves emails using Google Email labels with a specific email id or with a query filter.\nMaximum of 100 emails can be moved at a time (set that on \"all\").\n\nEmail can be moved to a label or to the trash (label=\"TRASH\").", "parameters": [{"name": "query", "description": "the query filter to find emails to move", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "label", "description": "the label name to apply to the emails", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to move (default 100)", "required": false, "type": "integer"}]}, {"method_name": "search_emails", "description": "Search Google emails with a query filter.\nPlease inform user if there are more than `max_results` emails.", "parameters": [{"name": "query", "description": "the query filter to apply to the emails", "required": true, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to return (default 100)", "required": false, "type": "integer"}]}, {"method_name": "update_draft", "description": "Update existing draft email by its draft id.\nIf draft_id is unknown then use action \"get_email_content\" to get the draft_id.\n\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "draft_id", "description": "identify the draft by its id", "required": true, "type": "string"}, {"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}]}, {"description": "Search for messages, create drafts and send emails.", "version": "1.1.1", "methods": [{"method_name": "remove_labels", "description": "Removes label(s) from emails using Google Email labels with a specific email id or with a query filter.", "parameters": [{"name": "query", "description": "the query filter to find emails to remove labels", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "labels", "description": "the label names to remove from the emails (comma separated)", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to remove labels", "required": false, "type": "integer"}]}, {"method_name": "update_draft", "description": "Update existing draft email by its draft id.\nIf draft_id is unknown then use action \"get_email_content\" to get the draft_id.\n\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "draft_id", "description": "identify the draft by its id", "required": true, "type": "string"}, {"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "get_email_content", "description": "Get Google email content with specific email id or with\na query filter.", "parameters": [{"name": "email_id", "description": "the email id to get the content from", "required": false, "type": "string"}, {"name": "query", "description": "the query filter to apply to the emails", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to return (default 10)", "required": false, "type": "integer"}]}, {"method_name": "list_drafts", "description": "Get list of drafts or filter drafts with a query.", "parameters": [{"name": "query", "description": "query to filter drafts or list all drafts", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Moves emails using Google Email labels with a specific email id or with a query filter.\nMaximum of 100 emails can be moved at a time (set that on \"all\").\n\nEmail can be moved to a label or to the trash (label=\"TRASH\").", "parameters": [{"name": "query", "description": "the query filter to find emails to move", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "label", "description": "the label name to apply to the emails", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to move (default 100)", "required": false, "type": "integer"}]}, {"method_name": "send_draft", "description": "Send draft email by its draft id.", "parameters": [{"name": "draft_id", "description": "the id of the draft to send", "required": true, "type": "string"}]}, {"method_name": "search_emails", "description": "Search Google emails with a query filter.\nPlease inform user if there are more than `max_results` emails.", "parameters": [{"name": "query", "description": "the query filter to apply to the emails", "required": true, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to return (default 100)", "required": false, "type": "integer"}]}, {"method_name": "send_email", "description": "Send the email to the recipient(s) using the Gmail API.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": true, "type": "string"}, {"name": "body", "description": "the message of the email", "required": true, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": true, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "create_draft", "description": "Create a draft of an email.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}]}, {"description": "Search for messages, create drafts and send emails.", "version": "1.1.2", "methods": [{"method_name": "send_draft", "description": "Send draft email by its draft id.", "parameters": [{"name": "draft_id", "description": "the id of the draft to send", "required": true, "type": "string"}]}, {"method_name": "search_emails", "description": "Search Google emails with a query filter.\nPlease inform user if there are more than `max_results` emails.", "parameters": [{"name": "query", "description": "the query filter to apply to the emails", "required": true, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to return (default 100)", "required": false, "type": "integer"}]}, {"method_name": "update_draft", "description": "Update existing draft email by its draft id.\nIf draft_id is unknown then use action \"get_email_content\" to get the draft_id.\n\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "draft_id", "description": "identify the draft by its id", "required": true, "type": "string"}, {"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "create_draft", "description": "Create a draft of an email.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "get_email_content", "description": "Get Google email content with specific email id or with\na query filter.", "parameters": [{"name": "email_id", "description": "the email id to get the content from", "required": false, "type": "string"}, {"name": "query", "description": "the query filter to apply to the emails", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to return (default 10)", "required": false, "type": "integer"}]}, {"method_name": "remove_labels", "description": "Removes label(s) from emails using Google Email labels with a specific email id or with a query filter.", "parameters": [{"name": "query", "description": "the query filter to find emails to remove labels", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "labels", "description": "the label names to remove from the emails (comma separated)", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to remove labels", "required": false, "type": "integer"}]}, {"method_name": "send_email", "description": "Send the email to the recipient(s) using the Gmail API.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": true, "type": "string"}, {"name": "body", "description": "the message of the email", "required": true, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": true, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Moves emails using Google Email labels with a specific email id or with a query filter.\nMaximum of 100 emails can be moved at a time (set that on \"all\").\n\nEmail can be moved to a label or to the trash (label=\"TRASH\").", "parameters": [{"name": "query", "description": "the query filter to find emails to move", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "label", "description": "the label name to apply to the emails", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to move (default 100)", "required": false, "type": "integer"}]}, {"method_name": "list_drafts", "description": "Get list of drafts or filter drafts with a query.", "parameters": [{"name": "query", "description": "query to filter drafts or list all drafts", "required": false, "type": "string"}]}]}, {"description": "Search for messages, create drafts and send emails.", "version": "1.1.3", "methods": [{"method_name": "create_draft", "description": "Create a draft of an email.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "get_email_content", "description": "Get Google email content with specific email id or with\na query filter.", "parameters": [{"name": "email_id", "description": "the email id to get the content from", "required": false, "type": "string"}, {"name": "query", "description": "the query filter to apply to the emails", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to return (default 10)", "required": false, "type": "integer"}]}, {"method_name": "list_drafts", "description": "Get list of drafts or filter drafts with a query.", "parameters": [{"name": "query", "description": "query to filter drafts or list all drafts", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Moves emails using Google Email labels with a specific email id or with a query filter.\nMaximum of 100 emails can be moved at a time (set that on \"all\").\n\nEmail can be moved to a label or to the trash (label=\"TRASH\").", "parameters": [{"name": "query", "description": "the query filter to find emails to move", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "label", "description": "the label name to apply to the emails", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to move (default 100)", "required": false, "type": "integer"}]}, {"method_name": "remove_labels", "description": "Removes label(s) from emails using Google Email labels with a specific email id or with a query filter.", "parameters": [{"name": "query", "description": "the query filter to find emails to remove labels", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "labels", "description": "the label names to remove from the emails (comma separated)", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to remove labels", "required": false, "type": "integer"}]}, {"method_name": "search_emails", "description": "Search Google emails with a query filter.\nPlease inform user if there are more than `max_results` emails.", "parameters": [{"name": "query", "description": "the query filter to apply to the emails", "required": true, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to return (default 100)", "required": false, "type": "integer"}]}, {"method_name": "send_draft", "description": "Send draft email by its draft id.", "parameters": [{"name": "draft_id", "description": "the id of the draft to send", "required": true, "type": "string"}]}, {"method_name": "send_email", "description": "Send the email to the recipient(s) using the Gmail API.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": true, "type": "string"}, {"name": "body", "description": "the message of the email", "required": true, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": true, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "update_draft", "description": "Update existing draft email by its draft id.\nIf draft_id is unknown then use action \"get_email_content\" to get the draft_id.\n\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "draft_id", "description": "identify the draft by its id", "required": true, "type": "string"}, {"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}]}, {"description": "Search for messages, create drafts and send emails.", "version": "1.1.4", "methods": [{"method_name": "create_draft", "description": "Create a draft of an email.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "get_email_content", "description": "Get Google email content with specific email id or with\na query filter.", "parameters": [{"name": "email_id", "description": "the email id to get the content from", "required": false, "type": "string"}, {"name": "query", "description": "the query filter to apply to the emails", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to return (default 10)", "required": false, "type": "integer"}]}, {"method_name": "list_drafts", "description": "Get list of drafts or filter drafts with a query.", "parameters": [{"name": "query", "description": "query to filter drafts or list all drafts", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Moves emails using Google Email labels with a specific email id or with a query filter.\nMaximum of 100 emails can be moved at a time (set that on \"all\").\n\nEmail can be moved to a label or to the trash (label=\"TRASH\").", "parameters": [{"name": "query", "description": "the query filter to find emails to move", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "label", "description": "the label name to apply to the emails", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to move (default 100)", "required": false, "type": "integer"}]}, {"method_name": "remove_labels", "description": "Removes label(s) from emails using Google Email labels with a specific email id or with a query filter.", "parameters": [{"name": "query", "description": "the query filter to find emails to remove labels", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "labels", "description": "the label names to remove from the emails (comma separated)", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to remove labels", "required": false, "type": "integer"}]}, {"method_name": "search_emails", "description": "Search Google emails with a query filter.\nPlease inform user if there are more than `max_results` emails.", "parameters": [{"name": "query", "description": "the query filter to apply to the emails", "required": true, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to return (default 100)", "required": false, "type": "integer"}]}, {"method_name": "send_draft", "description": "Send draft email by its draft id.", "parameters": [{"name": "draft_id", "description": "the id of the draft to send", "required": true, "type": "string"}]}, {"method_name": "send_email", "description": "Send the email to the recipient(s) using the Gmail API.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": true, "type": "string"}, {"name": "body", "description": "the message of the email", "required": true, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": true, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "update_draft", "description": "Update existing draft email by its draft id.\nIf draft_id is unknown then use action \"get_email_content\" to get the draft_id.\n\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "draft_id", "description": "identify the draft by its id", "required": true, "type": "string"}, {"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}]}, {"description": "Search for messages, create drafts and send emails.", "version": "1.2.0", "methods": [{"method_name": "create_draft", "description": "Create a draft of an email.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "get_email_content", "description": "Get Google email content with specific email id or with\na query filter.", "parameters": [{"name": "email_id", "description": "the email id to get the content from", "required": false, "type": "string"}, {"name": "query", "description": "the query filter to apply to the emails", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to return (default 10)", "required": false, "type": "integer"}]}, {"method_name": "list_drafts", "description": "Get list of drafts or filter drafts with a query.", "parameters": [{"name": "query", "description": "query to filter drafts or list all drafts", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Moves emails using Google Email labels with a specific email id or with a query filter.\nMaximum of 100 emails can be moved at a time (set that on \"all\").\n\nEmail can be moved to a label or to the trash (label=\"TRASH\").", "parameters": [{"name": "query", "description": "the query filter to find emails to move", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "label", "description": "the label name to apply to the emails", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to move (default 100)", "required": false, "type": "integer"}]}, {"method_name": "remove_labels", "description": "Removes label(s) from emails using Google Email labels with a specific email id or with a query filter.", "parameters": [{"name": "query", "description": "the query filter to find emails to remove labels", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "labels", "description": "the label names to remove from the emails (comma separated)", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to remove labels", "required": false, "type": "integer"}]}, {"method_name": "search_emails", "description": "Search Google emails with a query filter.\nPlease inform user if there are more than `max_results` emails.", "parameters": [{"name": "query", "description": "the query filter to apply to the emails", "required": true, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to return (default 100)", "required": false, "type": "integer"}]}, {"method_name": "send_draft", "description": "Send draft email by its draft id.", "parameters": [{"name": "draft_id", "description": "the id of the draft to send", "required": true, "type": "string"}]}, {"method_name": "send_email", "description": "Send the email to the recipient(s) using the Gmail API.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": true, "type": "string"}, {"name": "body", "description": "the message of the email", "required": true, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": true, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "update_draft", "description": "Update existing draft email by its draft id.\nIf draft_id is unknown then use action \"get_email_content\" to get the draft_id.\n\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "draft_id", "description": "identify the draft by its id", "required": true, "type": "string"}, {"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}]}, {"description": "Search for messages, create drafts and send emails.", "version": "1.2.1", "methods": [{"method_name": "create_draft", "description": "Create a draft of an email.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "get_email_content", "description": "Get Google email content with specific email id or with\na query filter.", "parameters": [{"name": "email_id", "description": "the email id to get the content from", "required": false, "type": "string"}, {"name": "query", "description": "the query filter to apply to the emails", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to return (default 10)", "required": false, "type": "integer"}]}, {"method_name": "list_drafts", "description": "Get list of drafts or filter drafts with a query.", "parameters": [{"name": "query", "description": "query to filter drafts or list all drafts", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Moves emails using Google Email labels with a specific email id or with a query filter.\nMaximum of 100 emails can be moved at a time (set that on \"all\").\n\nEmail can be moved to a label or to the trash (label=\"TRASH\").", "parameters": [{"name": "query", "description": "the query filter to find emails to move", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "label", "description": "the label name to apply to the emails", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to move (default 100)", "required": false, "type": "integer"}]}, {"method_name": "remove_labels", "description": "Removes label(s) from emails using Google Email labels with a specific email id or with a query filter.", "parameters": [{"name": "query", "description": "the query filter to find emails to remove labels", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "labels", "description": "the label names to remove from the emails (comma separated)", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to remove labels", "required": false, "type": "integer"}]}, {"method_name": "search_emails", "description": "Search Google emails with a query filter.\nPlease inform user if there are more than `max_results` emails.", "parameters": [{"name": "query", "description": "the query filter to apply to the emails", "required": true, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to return (default 100)", "required": false, "type": "integer"}]}, {"method_name": "send_draft", "description": "Send draft email by its draft id.", "parameters": [{"name": "draft_id", "description": "the id of the draft to send", "required": true, "type": "string"}]}, {"method_name": "send_email", "description": "Send the email to the recipient(s) using the Gmail API.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": true, "type": "string"}, {"name": "body", "description": "the message of the email", "required": true, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": true, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "update_draft", "description": "Update existing draft email by its draft id.\nIf draft_id is unknown then use action \"get_email_content\" to get the draft_id.\n\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "draft_id", "description": "identify the draft by its id", "required": true, "type": "string"}, {"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}]}, {"description": "Search for messages, create drafts and send emails.", "version": "1.3.0", "methods": [{"method_name": "create_draft", "description": "Create a draft of an email.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "get_email_content", "description": "Get Google email content with specific email id or with\na query filter.", "parameters": [{"name": "email_id", "description": "the email id to get the content from", "required": false, "type": "string"}, {"name": "query", "description": "the query filter to apply to the emails", "required": false, "type": "string"}, {"name": "fetch_attachments", "description": "if True, the attachments will be saved to Files API", "required": false, "type": "boolean"}, {"name": "max_results", "description": "the maximum number of emails to return (default 10)", "required": false, "type": "integer"}]}, {"method_name": "list_drafts", "description": "Get list of drafts or filter drafts with a query.", "parameters": [{"name": "query", "description": "query to filter drafts or list all drafts", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Moves emails using Google Email labels with a specific email id or with a query filter.\nMaximum of 100 emails can be moved at a time (set that on \"all\").\n\nEmail can be moved to a label or to the trash (label=\"TRASH\").", "parameters": [{"name": "query", "description": "the query filter to find emails to move", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "label", "description": "the label name to apply to the emails", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to move (default 100)", "required": false, "type": "integer"}]}, {"method_name": "remove_labels", "description": "Removes label(s) from emails using Google Email labels with a specific email id or with a query filter.", "parameters": [{"name": "query", "description": "the query filter to find emails to remove labels", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "labels", "description": "the label names to remove from the emails (comma separated)", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to remove labels", "required": false, "type": "integer"}]}, {"method_name": "search_emails", "description": "Search Google emails with a query filter.\nPlease inform user if there are more than `max_results` emails.", "parameters": [{"name": "query", "description": "the query filter to apply to the emails", "required": true, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to return (default 100)", "required": false, "type": "integer"}, {"name": "fetch_attachments", "description": "if True, the attachments will be saved to Files API", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send draft email by its draft id.", "parameters": [{"name": "draft_id", "description": "the id of the draft to send", "required": true, "type": "string"}]}, {"method_name": "send_email", "description": "Send the email to the recipient(s) using the Gmail API.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": true, "type": "string"}, {"name": "body", "description": "the message of the email", "required": true, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": true, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "update_draft", "description": "Update existing draft email by its draft id.\nIf draft_id is unknown then use action \"get_email_content\" to get the draft_id.\n\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "draft_id", "description": "identify the draft by its id", "required": true, "type": "string"}, {"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}]}, {"description": "Search for messages, create drafts and send emails.", "version": "1.3.1", "methods": [{"method_name": "create_draft", "description": "Create a draft of an email.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "get_email_content", "description": "Get Google email content with specific email id or with\na query filter.", "parameters": [{"name": "email_id", "description": "the email id to get the content from", "required": false, "type": "string"}, {"name": "query", "description": "the query filter to apply to the emails", "required": false, "type": "string"}, {"name": "fetch_attachments", "description": "if True, the attachments will be saved to Files API", "required": false, "type": "boolean"}, {"name": "max_results", "description": "the maximum number of emails to return (default 10)", "required": false, "type": "integer"}]}, {"method_name": "list_drafts", "description": "Get list of drafts or filter drafts with a query.", "parameters": [{"name": "query", "description": "query to filter drafts or list all drafts", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Moves emails using Google Email labels with a specific email id or with a query filter.\nMaximum of 100 emails can be moved at a time (set that on \"all\").\n\nEmail can be moved to a label or to the trash (label=\"TRASH\").", "parameters": [{"name": "query", "description": "the query filter to find emails to move", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "label", "description": "the label name to apply to the emails", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to move (default 100)", "required": false, "type": "integer"}]}, {"method_name": "remove_labels", "description": "Removes label(s) from emails using Google Email labels with a specific email id or with a query filter.", "parameters": [{"name": "query", "description": "the query filter to find emails to remove labels", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "labels", "description": "the label names to remove from the emails (comma separated)", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to remove labels", "required": false, "type": "integer"}]}, {"method_name": "search_emails", "description": "Search Google emails with a query filter.\nPlease inform user if there are more than `max_results` emails.", "parameters": [{"name": "query", "description": "the query filter to apply to the emails", "required": true, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to return (default 100)", "required": false, "type": "integer"}, {"name": "fetch_attachments", "description": "if True, the attachments will be saved to Files API", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send draft email by its draft id.", "parameters": [{"name": "draft_id", "description": "the id of the draft to send", "required": true, "type": "string"}]}, {"method_name": "send_email", "description": "Send the email to the recipient(s) using the Gmail API.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": true, "type": "string"}, {"name": "body", "description": "the message of the email", "required": true, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": true, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "update_draft", "description": "Update existing draft email by its draft id.\nIf draft_id is unknown then use action \"get_email_content\" to get the draft_id.\n\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "draft_id", "description": "identify the draft by its id", "required": true, "type": "string"}, {"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}]}, {"description": "Search for messages, create drafts and send emails.", "version": "1.3.2", "methods": [{"method_name": "create_draft", "description": "Create a draft of an email.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "get_email_content", "description": "Get Google email content with specific email id or with\na query filter.", "parameters": [{"name": "email_id", "description": "the email id to get the content from", "required": false, "type": "string"}, {"name": "query", "description": "the query filter to apply to the emails", "required": false, "type": "string"}, {"name": "fetch_attachments", "description": "if True, the attachments will be saved to Files API", "required": false, "type": "boolean"}, {"name": "max_results", "description": "the maximum number of emails to return (default 10)", "required": false, "type": "integer"}]}, {"method_name": "list_drafts", "description": "Get list of drafts or filter drafts with a query.", "parameters": [{"name": "query", "description": "query to filter drafts or list all drafts", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Moves emails using Google Email labels with a specific email id or with a query filter.\nMaximum of 100 emails can be moved at a time (set that on \"all\").\n\nEmail can be moved to a label or to the trash (label=\"TRASH\").", "parameters": [{"name": "query", "description": "the query filter to find emails to move", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "label", "description": "the label name to apply to the emails", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to move (default 100)", "required": false, "type": "integer"}]}, {"method_name": "remove_labels", "description": "Removes label(s) from emails using Google Email labels with a specific email id or with a query filter.", "parameters": [{"name": "query", "description": "the query filter to find emails to remove labels", "required": false, "type": "string"}, {"name": "email_ids", "description": "the email id(s) to move", "required": false, "type": "object"}, {"name": "labels", "description": "the label names to remove from the emails (comma separated)", "required": false, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to remove labels", "required": false, "type": "integer"}]}, {"method_name": "search_emails", "description": "Search Google emails with a query filter.\nPlease inform user if there are more than `max_results` emails.", "parameters": [{"name": "query", "description": "the query filter to apply to the emails", "required": true, "type": "string"}, {"name": "max_results", "description": "the maximum number of emails to return (default 100)", "required": false, "type": "integer"}, {"name": "fetch_attachments", "description": "if True, the attachments will be saved to Files API", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send draft email by its draft id.", "parameters": [{"name": "draft_id", "description": "the id of the draft to send", "required": true, "type": "string"}]}, {"method_name": "send_email", "description": "Send the email to the recipient(s) using the Gmail API.\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "subject", "description": "the subject of the email", "required": true, "type": "string"}, {"name": "body", "description": "the message of the email", "required": true, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": true, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}, {"method_name": "update_draft", "description": "Update existing draft email by its draft id.\nIf draft_id is unknown then use action \"get_email_content\" to get the draft_id.\n\nThe recipients can be given with `to`, `cc` and `bcc` parameters as a comma separated list.", "parameters": [{"name": "draft_id", "description": "identify the draft by its id", "required": true, "type": "string"}, {"name": "subject", "description": "the subject of the email", "required": false, "type": "string"}, {"name": "body", "description": "the message of the email", "required": false, "type": "string"}, {"name": "to", "description": "the email address(es) of the recipient(s), comma separated", "required": false, "type": "string"}, {"name": "cc", "description": "the email address(es) of the recipient(s) to be cc'd, comma separated", "required": false, "type": "string"}, {"name": "bcc", "description": "the email address(es) of the recipient(s) to be bcc'd, comma separated", "required": false, "type": "string"}]}]}]}, "Google Search": {"name": "Google Search", "versions": [{"description": "Google search action requiring API and context keys from Google.", "version": "1.0.0", "methods": [{"method_name": "google_search", "description": "Performs Google Search to find information about a topic.\nSecrets are required. Do not call if they are given.\n\nTo list all possible results use count=0.", "parameters": [{"name": "topic", "description": "topic to search on", "required": true, "type": "string"}, {"name": "count", "description": "count on how many results to retrieve", "required": false, "type": "integer"}]}]}, {"description": "Agent can make Google searches using a custom search engine (requires API key).", "version": "1.0.1", "methods": [{"method_name": "google_search", "description": "Performs Google Search to find information about a topic.\nSecrets are required. Do not call if they are given.\n\nTo list all possible results use count=0.", "parameters": [{"name": "topic", "description": "topic to search on", "required": true, "type": "string"}, {"name": "count", "description": "count on how many results to retrieve", "required": false, "type": "integer"}]}]}, {"description": "Agent can make Google searches using a custom search engine (requires API key).", "version": "1.0.2", "methods": [{"method_name": "google_search", "description": "Performs Google Search to find information about a topic.\nSecrets are required. Do not call if they are given.\n\nTo list all possible results use count=0.", "parameters": [{"name": "topic", "description": "topic to search on", "required": true, "type": "string"}, {"name": "count", "description": "count on how many results to retrieve", "required": false, "type": "integer"}]}]}, {"description": "Agent can make Google searches using a custom search engine (requires API key).", "version": "1.0.3", "methods": [{"method_name": "google_search", "description": "Performs Google Search to find information about a topic.\nSecrets are required. Do not call if they are given.\n\nTo list all possible results use count=0.", "parameters": [{"name": "topic", "description": "topic to search on", "required": true, "type": "string"}, {"name": "count", "description": "count on how many results to retrieve", "required": false, "type": "integer"}]}]}, {"description": "Agent can make Google searches using a custom search engine (requires API key).", "version": "1.0.4", "methods": [{"method_name": "google_search", "description": "Performs Google Search to find information about a topic.\nTo list all possible results use count=0.", "parameters": [{"name": "topic", "description": "topic to search on", "required": true, "type": "string"}, {"name": "count", "description": "count on how many results to retrieve", "required": false, "type": "integer"}]}]}, {"description": "Agent can make Google searches using a custom search engine (requires API key).", "version": "1.1.0", "methods": [{"method_name": "google_search", "description": "Performs Google Search to find information about a topic.\nTo list all possible results use count=0.", "parameters": [{"name": "topic", "description": "topic to search on", "required": true, "type": "string"}, {"name": "count", "description": "count on how many results to retrieve", "required": false, "type": "integer"}]}]}, {"description": "Agent can make Google searches using a custom search engine (requires API key).", "version": "1.1.1", "methods": [{"method_name": "google_search", "description": "Performs Google Search to find information about a topic.\nTo list all possible results use count=0.", "parameters": [{"name": "topic", "description": "topic to search on", "required": true, "type": "string"}, {"name": "count", "description": "count on how many results to retrieve", "required": false, "type": "integer"}]}]}, {"description": "Agent can make Google searches using a custom search engine (requires API key).", "version": "1.2.0", "methods": [{"method_name": "google_search", "description": "Performs Google Search to find information about a topic.\nTo list all possible results use count=0.", "parameters": [{"name": "topic", "description": "topic to search on", "required": true, "type": "string"}, {"name": "count", "description": "count on how many results to retrieve", "required": false, "type": "integer"}]}]}, {"description": "Agent can make Google searches using a custom search engine (requires API key).", "version": "1.2.1", "methods": [{"method_name": "google_search", "description": "Performs Google Search to find information about a topic.\nTo list all possible results use count=0.", "parameters": [{"name": "topic", "description": "topic to search on", "required": true, "type": "string"}, {"name": "count", "description": "count on how many results to retrieve", "required": false, "type": "integer"}]}]}, {"description": "Agent can make Google searches using a custom search engine (requires API key).", "version": "1.2.2", "methods": [{"method_name": "google_search", "description": "Performs Google Search to find information about a topic.\nTo list all possible results use count=0.", "parameters": [{"name": "topic", "description": "topic to search on", "required": true, "type": "string"}, {"name": "count", "description": "count on how many results to retrieve", "required": false, "type": "integer"}]}]}]}, "Google Sheets": {"name": "Google Sheets", "versions": [{"description": "Atomic actions operating with Google Sheets.", "version": "1.0.0", "methods": [{"method_name": "create_spreadsheet", "description": "Creates a new Spreadsheet.", "parameters": [{"name": "name", "description": "Name of the Spreadsheet, which will be later used when reading or writing into it.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Creates a new Worksheet.", "parameters": [{"name": "spreadsheet", "description": "Name of the Spreadsheet where to add the new Worksheet.", "required": true, "type": "string"}, {"name": "title", "description": "The title of the new Worksheet.", "required": true, "type": "string"}, {"name": "rows", "description": "Number of rows to be added in the new Worksheet.", "required": false, "type": "integer"}, {"name": "columns", "description": "Number of columns to be added in the new Worksheet.", "required": false, "type": "integer"}]}, {"method_name": "get_sheet_content", "description": "Get all content from the chosen Google Spreadsheet Sheet.\nTo avoid performance issues there is a limit of rows to retrieve starting\nfrom `from_row`. Default is 100 rows.", "parameters": [{"name": "spreadsheet", "description": "Spreadsheet object or name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet within the spreadsheet.", "required": true, "type": "string"}, {"name": "from_row", "description": "Used for pagination, default is first row.", "required": false, "type": "integer"}, {"name": "limit", "description": "How many rows to retrieve starting from line number defined in `from_row`.", "required": false, "type": "integer"}]}, {"method_name": "get_spreadsheet_schema", "description": "Get necessary information to be able to work with a Google Spreadsheets correctly.\nMethod will return the first few rows of each Sheet as an example.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}]}, {"method_name": "add_sheet_rows", "description": "Add multiple rows to the Google sheet.\nMake sure the values are in correct columns (needs to be ordered the same as in the document).", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet you want to work on.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "rows_to_add", "description": "The rows to be added to the end of the sheet.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 or R1:C1 notation.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "cells", "description": "Cell or range of cells to update.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}]}]}, {"description": "Create and read spreadsheets. Add/update rows.", "version": "1.0.1", "methods": [{"method_name": "create_spreadsheet", "description": "Creates a new Spreadsheet.", "parameters": [{"name": "name", "description": "Name of the Spreadsheet, which will be later used when reading or writing into it.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Creates a new Worksheet.", "parameters": [{"name": "spreadsheet", "description": "Name of the Spreadsheet where to add the new Worksheet.", "required": true, "type": "string"}, {"name": "title", "description": "The title of the new Worksheet.", "required": true, "type": "string"}, {"name": "rows", "description": "Number of rows to be added in the new Worksheet.", "required": false, "type": "integer"}, {"name": "columns", "description": "Number of columns to be added in the new Worksheet.", "required": false, "type": "integer"}]}, {"method_name": "get_sheet_content", "description": "Get all content from the chosen Google Spreadsheet Sheet.\nTo avoid performance issues there is a limit of rows to retrieve starting\nfrom `from_row`. Default is 100 rows.", "parameters": [{"name": "spreadsheet", "description": "Spreadsheet object or name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet within the spreadsheet.", "required": true, "type": "string"}, {"name": "from_row", "description": "Used for pagination, default is first row.", "required": false, "type": "integer"}, {"name": "limit", "description": "How many rows to retrieve starting from line number defined in `from_row`.", "required": false, "type": "integer"}]}, {"method_name": "get_spreadsheet_schema", "description": "Get necessary information to be able to work with a Google Spreadsheets correctly.\nMethod will return the first few rows of each Sheet as an example.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}]}, {"method_name": "add_sheet_rows", "description": "Add multiple rows to the Google sheet.\nMake sure the values are in correct columns (needs to be ordered the same as in the document).", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet you want to work on.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "rows_to_add", "description": "The rows to be added to the end of the sheet.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 or R1:C1 notation.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "cells", "description": "Cell or range of cells to update.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}]}]}, {"description": "Create and read spreadsheets. Add/update rows.", "version": "1.0.2", "methods": [{"method_name": "create_spreadsheet", "description": "Creates a new Spreadsheet.", "parameters": [{"name": "name", "description": "Name of the Spreadsheet, which will be later used when reading or writing into it.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Creates a new Worksheet.", "parameters": [{"name": "spreadsheet", "description": "Name of the Spreadsheet where to add the new Worksheet.", "required": true, "type": "string"}, {"name": "title", "description": "The title of the new Worksheet.", "required": true, "type": "string"}, {"name": "rows", "description": "Number of rows to be added in the new Worksheet.", "required": false, "type": "integer"}, {"name": "columns", "description": "Number of columns to be added in the new Worksheet.", "required": false, "type": "integer"}]}, {"method_name": "get_sheet_content", "description": "Get all content from the chosen Google Spreadsheet Sheet.\nTo avoid performance issues there is a limit of rows to retrieve starting\nfrom `from_row`. Default is 100 rows.", "parameters": [{"name": "spreadsheet", "description": "Spreadsheet object or name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet within the spreadsheet.", "required": true, "type": "string"}, {"name": "from_row", "description": "Used for pagination, default is first row.", "required": false, "type": "integer"}, {"name": "limit", "description": "How many rows to retrieve starting from line number defined in `from_row`.", "required": false, "type": "integer"}]}, {"method_name": "get_spreadsheet_schema", "description": "Get necessary information to be able to work with a Google Spreadsheets correctly.\nMethod will return the first few rows of each Sheet as an example.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}]}, {"method_name": "add_sheet_rows", "description": "Add multiple rows to the Google sheet.\nMake sure the values are in correct columns (needs to be ordered the same as in the document).", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet you want to work on.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "rows_to_add", "description": "The rows to be added to the end of the sheet.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 or R1:C1 notation.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "cells", "description": "Cell or range of cells to update.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}]}]}, {"description": "Create and read spreadsheets. Add/update rows.", "version": "1.0.3", "methods": [{"method_name": "create_spreadsheet", "description": "Creates a new Spreadsheet.", "parameters": [{"name": "name", "description": "Name of the Spreadsheet, which will be later used when reading or writing into it.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Creates a new Worksheet.", "parameters": [{"name": "spreadsheet", "description": "Name of the Spreadsheet where to add the new Worksheet.", "required": true, "type": "string"}, {"name": "title", "description": "The title of the new Worksheet.", "required": true, "type": "string"}, {"name": "rows", "description": "Number of rows to be added in the new Worksheet.", "required": false, "type": "integer"}, {"name": "columns", "description": "Number of columns to be added in the new Worksheet.", "required": false, "type": "integer"}]}, {"method_name": "get_sheet_content", "description": "Get all content from the chosen Google Spreadsheet Sheet.\nTo avoid performance issues there is a limit of rows to retrieve starting\nfrom `from_row`. Default is 100 rows.", "parameters": [{"name": "spreadsheet", "description": "Spreadsheet object or name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet within the spreadsheet.", "required": true, "type": "string"}, {"name": "from_row", "description": "Used for pagination, default is first row.", "required": false, "type": "integer"}, {"name": "limit", "description": "How many rows to retrieve starting from line number defined in `from_row`.", "required": false, "type": "integer"}]}, {"method_name": "get_spreadsheet_schema", "description": "Get necessary information to be able to work with a Google Spreadsheets correctly.\nMethod will return the first few rows of each Sheet as an example.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}]}, {"method_name": "add_sheet_rows", "description": "Add multiple rows to the Google sheet.\nMake sure the values are in correct columns (needs to be ordered the same as in the document).", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet you want to work on.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "rows_to_add", "description": "The rows to be added to the end of the sheet.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 or R1:C1 notation.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "cells", "description": "Cell or range of cells to update.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}]}]}, {"description": "Create and read spreadsheets. Add/update rows.", "version": "1.0.4", "methods": [{"method_name": "create_spreadsheet", "description": "Creates a new Spreadsheet.", "parameters": [{"name": "name", "description": "Name of the Spreadsheet, which will be later used when reading or writing into it.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Creates a new Worksheet.", "parameters": [{"name": "spreadsheet", "description": "Name of the Spreadsheet where to add the new Worksheet.", "required": true, "type": "string"}, {"name": "title", "description": "The title of the new Worksheet.", "required": true, "type": "string"}, {"name": "rows", "description": "Number of rows to be added in the new Worksheet.", "required": false, "type": "integer"}, {"name": "columns", "description": "Number of columns to be added in the new Worksheet.", "required": false, "type": "integer"}]}, {"method_name": "get_sheet_content", "description": "Get all content from the chosen Google Spreadsheet Sheet.\nTo avoid performance issues there is a limit of rows to retrieve starting\nfrom `from_row`. Default is 100 rows.", "parameters": [{"name": "spreadsheet", "description": "Spreadsheet object or name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet within the spreadsheet.", "required": true, "type": "string"}, {"name": "from_row", "description": "Used for pagination, default is first row.", "required": false, "type": "integer"}, {"name": "limit", "description": "How many rows to retrieve starting from line number defined in `from_row`.", "required": false, "type": "integer"}]}, {"method_name": "get_spreadsheet_schema", "description": "Get necessary information to be able to work with a Google Spreadsheets correctly.\nMethod will return the first few rows of each Sheet as an example.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}]}, {"method_name": "add_sheet_rows", "description": "Add multiple rows to the Google sheet.\nMake sure the values are in correct columns (needs to be ordered the same as in the document).", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet you want to work on.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "rows_to_add", "description": "The rows to be added to the end of the sheet.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 or R1:C1 notation.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "cells", "description": "Cell or range of cells to update.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}]}]}, {"description": "Create and read spreadsheets. Add/update rows.", "version": "1.0.5", "methods": [{"method_name": "create_spreadsheet", "description": "Creates a new Spreadsheet.", "parameters": [{"name": "name", "description": "Name of the Spreadsheet, which will be later used when reading or writing into it.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Creates a new Worksheet.", "parameters": [{"name": "spreadsheet", "description": "Name of the Spreadsheet where to add the new Worksheet.", "required": true, "type": "string"}, {"name": "title", "description": "The title of the new Worksheet.", "required": true, "type": "string"}, {"name": "rows", "description": "Number of rows to be added in the new Worksheet.", "required": false, "type": "integer"}, {"name": "columns", "description": "Number of columns to be added in the new Worksheet.", "required": false, "type": "integer"}]}, {"method_name": "get_sheet_content", "description": "Get all content from the chosen Google Spreadsheet Sheet.\nTo avoid performance issues there is a limit of rows to retrieve starting\nfrom `from_row`. Default is 100 rows.", "parameters": [{"name": "spreadsheet", "description": "Spreadsheet object or name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet within the spreadsheet.", "required": true, "type": "string"}, {"name": "from_row", "description": "Used for pagination, default is first row.", "required": false, "type": "integer"}, {"name": "limit", "description": "How many rows to retrieve starting from line number defined in `from_row`.", "required": false, "type": "integer"}]}, {"method_name": "get_spreadsheet_schema", "description": "Get necessary information to be able to work with a Google Spreadsheets correctly.\nMethod will return the first few rows of each Sheet as an example.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}]}, {"method_name": "add_sheet_rows", "description": "Add multiple rows to the Google sheet.\nMake sure the values are in correct columns (needs to be ordered the same as in the document).", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet you want to work on.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "rows_to_add", "description": "The rows to be added to the end of the sheet.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 or R1:C1 notation.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "cells", "description": "Cell or range of cells to update.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}]}]}, {"description": "Create and read spreadsheets. Add/update rows.", "version": "1.1.0", "methods": [{"method_name": "create_spreadsheet", "description": "Creates a new Spreadsheet.", "parameters": [{"name": "name", "description": "Name of the Spreadsheet, which will be later used when reading or writing into it.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Creates a new Worksheet.", "parameters": [{"name": "spreadsheet", "description": "Name of the Spreadsheet where to add the new Worksheet.", "required": true, "type": "string"}, {"name": "title", "description": "The title of the new Worksheet.", "required": true, "type": "string"}, {"name": "rows", "description": "Number of rows to be added in the new Worksheet.", "required": false, "type": "integer"}, {"name": "columns", "description": "Number of columns to be added in the new Worksheet.", "required": false, "type": "integer"}]}, {"method_name": "get_sheet_content", "description": "Get all content from the chosen Google Spreadsheet Sheet.\nTo avoid performance issues there is a limit of rows to retrieve starting\nfrom `from_row`. Default is 100 rows.", "parameters": [{"name": "spreadsheet", "description": "Spreadsheet object or name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet within the spreadsheet.", "required": true, "type": "string"}, {"name": "from_row", "description": "Used for pagination, default is first row.", "required": false, "type": "integer"}, {"name": "limit", "description": "How many rows to retrieve starting from line number defined in `from_row`.", "required": false, "type": "integer"}]}, {"method_name": "get_spreadsheet_schema", "description": "Get necessary information to be able to work with a Google Spreadsheets correctly.\nMethod will return the first few rows of each Sheet as an example.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}]}, {"method_name": "add_sheet_rows", "description": "Add multiple rows to the Google sheet.\nMake sure the values are in correct columns (needs to be ordered the same as in the document).", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet you want to work on.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "rows_to_add", "description": "The rows to be added to the end of the sheet.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 or R1:C1 notation.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "cells", "description": "Cell or range of cells to update.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}]}]}, {"description": "Create and read spreadsheets. Add/update rows.", "version": "1.1.1", "methods": [{"method_name": "create_spreadsheet", "description": "Creates a new Spreadsheet.", "parameters": [{"name": "name", "description": "Name of the Spreadsheet, which will be later used when reading or writing into it.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Creates a new Worksheet.", "parameters": [{"name": "spreadsheet", "description": "Name of the Spreadsheet where to add the new Worksheet.", "required": true, "type": "string"}, {"name": "title", "description": "The title of the new Worksheet.", "required": true, "type": "string"}, {"name": "rows", "description": "Number of rows to be added in the new Worksheet.", "required": false, "type": "integer"}, {"name": "columns", "description": "Number of columns to be added in the new Worksheet.", "required": false, "type": "integer"}]}, {"method_name": "get_sheet_content", "description": "Get all content from the chosen Google Spreadsheet Sheet.\nTo avoid performance issues there is a limit of rows to retrieve starting\nfrom `from_row`. Default is 100 rows.", "parameters": [{"name": "spreadsheet", "description": "Spreadsheet object or name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet within the spreadsheet.", "required": true, "type": "string"}, {"name": "from_row", "description": "Used for pagination, default is first row.", "required": false, "type": "integer"}, {"name": "limit", "description": "How many rows to retrieve starting from line number defined in `from_row`.", "required": false, "type": "integer"}]}, {"method_name": "get_spreadsheet_schema", "description": "Get necessary information to be able to work with a Google Spreadsheets correctly.\nMethod will return the first few rows of each Sheet as an example.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}]}, {"method_name": "add_sheet_rows", "description": "Add multiple rows to the Google sheet.\nMake sure the values are in correct columns (needs to be ordered the same as in the document).", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet you want to work on.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "rows_to_add", "description": "The rows to be added to the end of the sheet.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 or R1:C1 notation.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "cells", "description": "Cell or range of cells to update.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}]}]}, {"description": "Create and read spreadsheets. Add/update rows.", "version": "1.1.2", "methods": [{"method_name": "create_spreadsheet", "description": "Creates a new Spreadsheet.", "parameters": [{"name": "name", "description": "Name of the Spreadsheet, which will be later used when reading or writing into it.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Creates a new Worksheet.", "parameters": [{"name": "spreadsheet", "description": "Name of the Spreadsheet where to add the new Worksheet.", "required": true, "type": "string"}, {"name": "title", "description": "The title of the new Worksheet.", "required": true, "type": "string"}, {"name": "rows", "description": "Number of rows to be added in the new Worksheet.", "required": false, "type": "integer"}, {"name": "columns", "description": "Number of columns to be added in the new Worksheet.", "required": false, "type": "integer"}]}, {"method_name": "get_sheet_content", "description": "Get all content from the chosen Google Spreadsheet Sheet.\nTo avoid performance issues there is a limit of rows to retrieve starting\nfrom `from_row`. Default is 100 rows.", "parameters": [{"name": "spreadsheet", "description": "Spreadsheet object or name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet within the spreadsheet.", "required": true, "type": "string"}, {"name": "from_row", "description": "Used for pagination, default is first row.", "required": false, "type": "integer"}, {"name": "limit", "description": "How many rows to retrieve starting from line number defined in `from_row`.", "required": false, "type": "integer"}]}, {"method_name": "get_spreadsheet_schema", "description": "Get necessary information to be able to work with a Google Spreadsheets correctly.\nMethod will return the first few rows of each Sheet as an example.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}]}, {"method_name": "add_sheet_rows", "description": "Add multiple rows to the Google sheet.\nMake sure the values are in correct columns (needs to be ordered the same as in the document).", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet you want to work on.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "rows_to_add", "description": "The rows to be added to the end of the sheet.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 or R1:C1 notation.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "cells", "description": "Cell or range of cells to update.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}]}]}, {"description": "Create and read spreadsheets. Add/update rows.", "version": "1.1.3", "methods": [{"method_name": "create_spreadsheet", "description": "Creates a new Spreadsheet.", "parameters": [{"name": "name", "description": "Name of the Spreadsheet, which will be later used when reading or writing into it.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Creates a new Worksheet.", "parameters": [{"name": "spreadsheet", "description": "Name of the Spreadsheet where to add the new Worksheet.", "required": true, "type": "string"}, {"name": "title", "description": "The title of the new Worksheet.", "required": true, "type": "string"}, {"name": "rows", "description": "Number of rows to be added in the new Worksheet.", "required": false, "type": "integer"}, {"name": "columns", "description": "Number of columns to be added in the new Worksheet.", "required": false, "type": "integer"}]}, {"method_name": "get_sheet_content", "description": "Get all content from the chosen Google Spreadsheet Sheet.\nTo avoid performance issues there is a limit of rows to retrieve starting\nfrom `from_row`. Default is 100 rows.", "parameters": [{"name": "spreadsheet", "description": "Spreadsheet object or name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet within the spreadsheet.", "required": true, "type": "string"}, {"name": "from_row", "description": "Used for pagination, default is first row.", "required": false, "type": "integer"}, {"name": "limit", "description": "How many rows to retrieve starting from line number defined in `from_row`.", "required": false, "type": "integer"}]}, {"method_name": "get_spreadsheet_schema", "description": "Get necessary information to be able to work with a Google Spreadsheets correctly.\nMethod will return the first few rows of each Sheet as an example.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}]}, {"method_name": "add_sheet_rows", "description": "Add multiple rows to the Google sheet.\nMake sure the values are in correct columns (needs to be ordered the same as in the document).", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet you want to work on.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "rows_to_add", "description": "The rows to be added to the end of the sheet.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 or R1:C1 notation.", "parameters": [{"name": "spreadsheet", "description": "Name of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "cells", "description": "Cell or range of cells to update.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}]}]}, {"description": "Create and read spreadsheets. Add/update rows.", "version": "1.2.0", "methods": [{"method_name": "create_spreadsheet", "description": "Creates a new Spreadsheet.", "parameters": [{"name": "name", "description": "Name of the Spreadsheet, which will be later used when reading or writing into it.", "required": true, "type": "string"}]}, {"method_name": "create_worksheet", "description": "Creates a new Worksheet.", "parameters": [{"name": "spreadsheet", "description": "Name, ID, or URL of the Spreadsheet where to add the new Worksheet.", "required": true, "type": "string"}, {"name": "title", "description": "The title of the new Worksheet.", "required": true, "type": "string"}, {"name": "rows", "description": "Number of rows to be added in the new Worksheet.", "required": false, "type": "integer"}, {"name": "columns", "description": "Number of columns to be added in the new Worksheet.", "required": false, "type": "integer"}]}, {"method_name": "get_sheet_content", "description": "Get all content from the chosen Google Spreadsheet Sheet.\nTo avoid performance issues there is a limit of rows to retrieve starting\nfrom `from_row`. Default is 100 rows.", "parameters": [{"name": "spreadsheet", "description": "Name, ID, or URL of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the worksheet within the spreadsheet.", "required": true, "type": "string"}, {"name": "from_row", "description": "Used for pagination, default is first row.", "required": false, "type": "integer"}, {"name": "limit", "description": "How many rows to retrieve starting from line number defined in `from_row`.", "required": false, "type": "integer"}]}, {"method_name": "get_spreadsheet_schema", "description": "Get necessary information to be able to work with a Google Spreadsheets correctly.\nMethod will return the first few rows of each Sheet as an example.", "parameters": [{"name": "spreadsheet", "description": "Name, ID, or URL of the spreadsheet from which to get the data.", "required": true, "type": "string"}]}, {"method_name": "add_sheet_rows", "description": "Add multiple rows to the Google sheet.\nMake sure the values are in correct columns (needs to be ordered the same as in the document).", "parameters": [{"name": "spreadsheet", "description": "Name, ID, or URL of the spreadsheet you want to work on.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "rows_to_add", "description": "The rows to be added to the end of the sheet.", "required": true, "type": "object"}]}, {"method_name": "update_sheet_rows", "description": "Update a cell or a range of cells in a worksheet using A1 or R1:C1 notation.", "parameters": [{"name": "spreadsheet", "description": "Name, ID, or URL of the spreadsheet from which to get the data.", "required": true, "type": "string"}, {"name": "worksheet", "description": "Name of the sheet where the data is added to.", "required": true, "type": "string"}, {"name": "cells", "description": "Cell or range of cells to update.", "required": true, "type": "string"}, {"name": "data", "description": "Data to be inserted into the cell or cells.", "required": true, "type": "object"}]}]}]}, "HubSpot": {"name": "HubSpot", "versions": [{"description": "Atomic actions operating on resources in HubSpot.", "version": "1.0.0", "methods": [{"method_name": "search_companies", "description": "Search for HubSpot companies based on the provided string query.\nThis is a basic search returning a list of companies that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.", "parameters": [{"name": "query", "description": "String that is searched for in all the company properties for a match.", "required": true, "type": "string"}, {"name": "limit", "description": "The maximum number of results the search can return.", "required": false, "type": "integer"}]}, {"method_name": "search_contacts", "description": "Search for HubSpot contacts based on the provided string query.\nThis is a basic search returning a list of contacts that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.", "parameters": [{"name": "query", "description": "String that is searched for in all the contact properties for a match.", "required": true, "type": "string"}, {"name": "limit", "description": "The maximum number of results the search can return.", "required": false, "type": "integer"}]}, {"method_name": "search_deals", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.", "parameters": [{"name": "query", "description": "String that is searched for in all the deals properties for a match.", "required": true, "type": "string"}, {"name": "limit", "description": "The maximum number of results the search can return.", "required": false, "type": "integer"}]}, {"method_name": "search_tickets", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\nTickets are best for managing customer interactions, track progress and reporting\nto them.", "parameters": [{"name": "query", "description": "String that is searched for in all the deals properties for a match.", "required": true, "type": "string"}, {"name": "limit", "description": "The maximum number of results the search can return.", "required": false, "type": "integer"}]}, {"method_name": "search_objects", "description": "Search for HubSpot objects based on the provided string query.\nThis is a basic search returning a list of objects that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\nTasks are better for managing internal workflows, the stepping stones to get\ntickets done.", "parameters": [{"name": "object_type", "description": "The kind of object you are searching, currently supporting: tasks.", "required": true, "type": "string"}, {"name": "query", "description": "String that is searched for in all the object properties for a match.", "required": true, "type": "string"}, {"name": "limit", "description": "The maximum number of results the search can return.", "required": false, "type": "integer"}]}]}, {"description": "Atomic actions operating on resources in HubSpot.", "version": "1.1.0", "methods": [{"method_name": "create_company", "description": "Create a new company.", "parameters": [{"name": "company_data", "description": "JSON representation of the company to be created.", "required": true, "type": "object"}]}, {"method_name": "create_contact", "description": "Create a new contact.", "parameters": [{"name": "contact_data", "description": "JSON representation of the contact to be created.", "required": true, "type": "object"}]}, {"method_name": "create_deal", "description": "Create a new deal.\nThe CreateDeal object requires a `dealstage` attribute which should be the ID of the deal stage and this can be\nfound by listing all the deal pipelines beforehand.", "parameters": [{"name": "deal_data", "description": "JSON representation of the deal to be created.", "required": true, "type": "object"}]}, {"method_name": "create_ticket", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "ticket_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "create_tasks", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "task_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "update_company", "description": "Update an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to update.", "required": true, "type": "string"}, {"name": "company_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_contact", "description": "Update an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to update.", "required": true, "type": "string"}, {"name": "contact_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_deal", "description": "Update an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to update.", "required": true, "type": "string"}, {"name": "deal_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to update.", "required": true, "type": "string"}, {"name": "ticket_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_task", "description": "Update an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to update.", "required": true, "type": "string"}, {"name": "task_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "delete_company", "description": "Delete an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_contact", "description": "Delete an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_deal", "description": "Delete an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Delete an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_task", "description": "Delete an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to delete.", "required": true, "type": "string"}]}, {"method_name": "search_companies", "description": "Search for HubSpot companies based on the provided string query.\nThis is a basic search returning a list of companies that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_contacts", "description": "Search for HubSpot contacts based on the provided string query.\nThis is a basic search returning a list of contacts that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_deals", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` string among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_tickets", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.\n\nTickets are best for managing customer interactions, track progress and reporting\nto them.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_objects", "description": "Search for HubSpot objects based on the provided string query.\nThis is a basic search returning a list of objects that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\nTasks are better for managing internal workflows, the stepping stones to get\ntickets done.", "parameters": [{"name": "object_type", "description": "The kind of object you are searching, currently supporting: tasks.", "required": true, "type": "string"}, {"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match\n- filter_groups: A list of filters to apply to the search\n- limit: The maximum number of results the search can return", "required": true, "type": "object"}]}, {"method_name": "list_pipelines", "description": "Get all deal pipelines and its stages.\nThis is necessary to pull the ID of the stage when you need to create a new Deal.\n\n Args:\n     object_type: The kind of object you are searching, currently supporting: deals and tickets.\n     token: An OAuth2 Public App (client) token structure used to make API calls.", "parameters": [{"name": "object_type", "description": "", "required": true, "type": "string"}]}, {"method_name": "list_owners", "description": "Get all owners.", "parameters": []}, {"method_name": "get_marketing_email_analytics", "description": "Retrieve marketing email analytics within a specified time interval.", "parameters": [{"name": "query", "description": "JSON containing the following search parameters:\n- startTimestamp: Start timestamp\n- endTimestamp: End timestamp", "required": true, "type": "object"}]}]}, {"description": "Atomic actions operating on resources in HubSpot.", "version": "1.1.1", "methods": [{"method_name": "create_company", "description": "Create a new company.", "parameters": [{"name": "company_data", "description": "JSON representation of the company to be created.", "required": true, "type": "object"}]}, {"method_name": "create_contact", "description": "Create a new contact.", "parameters": [{"name": "contact_data", "description": "JSON representation of the contact to be created.", "required": true, "type": "object"}]}, {"method_name": "create_deal", "description": "Create a new deal.\nThe CreateDeal object requires a `dealstage` attribute which should be the ID of the deal stage and this can be\nfound by listing all the deal pipelines beforehand.", "parameters": [{"name": "deal_data", "description": "JSON representation of the deal to be created.", "required": true, "type": "object"}]}, {"method_name": "create_ticket", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "ticket_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "create_tasks", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "task_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "update_company", "description": "Update an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to update.", "required": true, "type": "string"}, {"name": "company_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_contact", "description": "Update an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to update.", "required": true, "type": "string"}, {"name": "contact_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_deal", "description": "Update an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to update.", "required": true, "type": "string"}, {"name": "deal_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to update.", "required": true, "type": "string"}, {"name": "ticket_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_task", "description": "Update an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to update.", "required": true, "type": "string"}, {"name": "task_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "delete_company", "description": "Delete an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_contact", "description": "Delete an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_deal", "description": "Delete an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Delete an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_task", "description": "Delete an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to delete.", "required": true, "type": "string"}]}, {"method_name": "search_companies", "description": "Search for HubSpot companies based on the provided string query.\nThis is a basic search returning a list of companies that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_contacts", "description": "Search for HubSpot contacts based on the provided string query.\nThis is a basic search returning a list of contacts that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_deals", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` string among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_tickets", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.\n\nTickets are best for managing customer interactions, track progress and reporting\nto them.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_objects", "description": "Search for HubSpot objects based on the provided string query.\nThis is a basic search returning a list of objects that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\nTasks are better for managing internal workflows, the stepping stones to get\ntickets done.", "parameters": [{"name": "object_type", "description": "The kind of object you are searching, currently supporting: tasks.", "required": true, "type": "string"}, {"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match\n- filter_groups: A list of filters to apply to the search\n- limit: The maximum number of results the search can return", "required": true, "type": "object"}]}, {"method_name": "list_pipelines", "description": "Get all deal pipelines and its stages.\nThis is necessary to pull the ID of the stage when you need to create a new Deal.\n\n Args:\n     object_type: The kind of object you are searching, currently supporting: deals and tickets.\n     token: An OAuth2 Public App (client) token structure used to make API calls.", "parameters": [{"name": "object_type", "description": "", "required": true, "type": "string"}]}, {"method_name": "list_owners", "description": "Get all owners.", "parameters": []}, {"method_name": "get_marketing_email_analytics", "description": "Retrieve marketing email analytics within a specified time interval.", "parameters": [{"name": "query", "description": "JSON containing the following search parameters:\n- startTimestamp: Start timestamp\n- endTimestamp: End timestamp", "required": true, "type": "object"}]}]}, {"description": "Search and manage all aspects of CRM objects, including companies, contacts, deals, and more.", "version": "1.1.2", "methods": [{"method_name": "create_company", "description": "Create a new company.", "parameters": [{"name": "company_data", "description": "JSON representation of the company to be created.", "required": true, "type": "object"}]}, {"method_name": "create_contact", "description": "Create a new contact.", "parameters": [{"name": "contact_data", "description": "JSON representation of the contact to be created.", "required": true, "type": "object"}]}, {"method_name": "create_deal", "description": "Create a new deal.\nThe CreateDeal object requires a `dealstage` attribute which should be the ID of the deal stage and this can be\nfound by listing all the deal pipelines beforehand.", "parameters": [{"name": "deal_data", "description": "JSON representation of the deal to be created.", "required": true, "type": "object"}]}, {"method_name": "create_ticket", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "ticket_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "create_tasks", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "task_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "update_company", "description": "Update an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to update.", "required": true, "type": "string"}, {"name": "company_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_contact", "description": "Update an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to update.", "required": true, "type": "string"}, {"name": "contact_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_deal", "description": "Update an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to update.", "required": true, "type": "string"}, {"name": "deal_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to update.", "required": true, "type": "string"}, {"name": "ticket_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_task", "description": "Update an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to update.", "required": true, "type": "string"}, {"name": "task_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "delete_company", "description": "Delete an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_contact", "description": "Delete an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_deal", "description": "Delete an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Delete an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_task", "description": "Delete an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to delete.", "required": true, "type": "string"}]}, {"method_name": "search_companies", "description": "Search for HubSpot companies based on the provided string query.\nThis is a basic search returning a list of companies that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_contacts", "description": "Search for HubSpot contacts based on the provided string query.\nThis is a basic search returning a list of contacts that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_deals", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` string among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_tickets", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.\n\nTickets are best for managing customer interactions, track progress and reporting\nto them.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_objects", "description": "Search for HubSpot objects based on the provided string query.\nThis is a basic search returning a list of objects that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\nTasks are better for managing internal workflows, the stepping stones to get\ntickets done.", "parameters": [{"name": "object_type", "description": "The kind of object you are searching, currently supporting: tasks.", "required": true, "type": "string"}, {"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match\n- filter_groups: A list of filters to apply to the search\n- limit: The maximum number of results the search can return", "required": true, "type": "object"}]}, {"method_name": "list_pipelines", "description": "Get all deal pipelines and its stages.\nThis is necessary to pull the ID of the stage when you need to create a new Deal.\n\n Args:\n     object_type: The kind of object you are searching, currently supporting: deals and tickets.\n     token: An OAuth2 Public App (client) token structure used to make API calls.", "parameters": [{"name": "object_type", "description": "", "required": true, "type": "string"}]}, {"method_name": "list_owners", "description": "Get all owners.", "parameters": []}, {"method_name": "get_marketing_email_analytics", "description": "Retrieve marketing email analytics within a specified time interval.", "parameters": [{"name": "query", "description": "JSON containing the following search parameters:\n- startTimestamp: Start timestamp\n- endTimestamp: End timestamp", "required": true, "type": "object"}]}]}, {"description": "Search and manage all aspects of CRM objects, including companies, contacts, deals, and more.", "version": "1.1.3", "methods": [{"method_name": "create_company", "description": "Create a new company.", "parameters": [{"name": "company_data", "description": "JSON representation of the company to be created.", "required": true, "type": "object"}]}, {"method_name": "create_contact", "description": "Create a new contact.", "parameters": [{"name": "contact_data", "description": "JSON representation of the contact to be created.", "required": true, "type": "object"}]}, {"method_name": "create_deal", "description": "Create a new deal.\nThe CreateDeal object requires a `dealstage` attribute which should be the ID of the deal stage and this can be\nfound by listing all the deal pipelines beforehand.", "parameters": [{"name": "deal_data", "description": "JSON representation of the deal to be created.", "required": true, "type": "object"}]}, {"method_name": "create_ticket", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "ticket_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "create_tasks", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "task_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "update_company", "description": "Update an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to update.", "required": true, "type": "string"}, {"name": "company_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_contact", "description": "Update an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to update.", "required": true, "type": "string"}, {"name": "contact_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_deal", "description": "Update an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to update.", "required": true, "type": "string"}, {"name": "deal_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to update.", "required": true, "type": "string"}, {"name": "ticket_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_task", "description": "Update an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to update.", "required": true, "type": "string"}, {"name": "task_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "search_companies", "description": "Search for HubSpot companies based on the provided string query.\nThis is a basic search returning a list of companies that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_contacts", "description": "Search for HubSpot contacts based on the provided string query.\nThis is a basic search returning a list of contacts that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_deals", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` string among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_tickets", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.\n\nTickets are best for managing customer interactions, track progress and reporting\nto them.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_objects", "description": "Search for HubSpot objects based on the provided string query.\nThis is a basic search returning a list of objects that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\nTasks are better for managing internal workflows, the stepping stones to get\ntickets done.", "parameters": [{"name": "object_type", "description": "The kind of object you are searching, currently supporting: tasks.", "required": true, "type": "string"}, {"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match\n- filter_groups: A list of filters to apply to the search\n- limit: The maximum number of results the search can return", "required": true, "type": "object"}]}, {"method_name": "list_pipelines", "description": "Get all deal pipelines and its stages.\nThis is necessary to pull the ID of the stage when you need to create a new Deal.\n\n Args:\n     object_type: The kind of object you are searching, currently supporting: deals and tickets.\n     token: An OAuth2 Public App (client) token structure used to make API calls.", "parameters": [{"name": "object_type", "description": "", "required": true, "type": "string"}]}, {"method_name": "list_owners", "description": "Get all owners.", "parameters": []}, {"method_name": "get_marketing_email_analytics", "description": "Retrieve marketing email analytics within a specified time interval.", "parameters": [{"name": "query", "description": "JSON containing the following search parameters:\n- startTimestamp: Start timestamp\n- endTimestamp: End timestamp", "required": true, "type": "object"}]}, {"method_name": "delete_company", "description": "Delete an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_contact", "description": "Delete an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_deal", "description": "Delete an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Delete an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_task", "description": "Delete an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to delete.", "required": true, "type": "string"}]}]}, {"description": "Search and manage all aspects of CRM objects, including companies, contacts, deals, and more.", "version": "1.1.4", "methods": [{"method_name": "create_company", "description": "Create a new company.", "parameters": [{"name": "company_data", "description": "JSON representation of the company to be created.", "required": true, "type": "object"}]}, {"method_name": "create_contact", "description": "Create a new contact.", "parameters": [{"name": "contact_data", "description": "JSON representation of the contact to be created.", "required": true, "type": "object"}]}, {"method_name": "create_deal", "description": "Create a new deal.\nThe CreateDeal object requires a `dealstage` attribute which should be the ID of the deal stage and this can be\nfound by listing all the deal pipelines beforehand.", "parameters": [{"name": "deal_data", "description": "JSON representation of the deal to be created.", "required": true, "type": "object"}]}, {"method_name": "create_ticket", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "ticket_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "create_tasks", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "task_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "delete_company", "description": "Delete an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_contact", "description": "Delete an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_deal", "description": "Delete an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Delete an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_task", "description": "Delete an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to delete.", "required": true, "type": "string"}]}, {"method_name": "search_companies", "description": "Search for HubSpot companies based on the provided string query.\nThis is a basic search returning a list of companies that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_contacts", "description": "Search for HubSpot contacts based on the provided string query.\nThis is a basic search returning a list of contacts that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_deals", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` string among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_tickets", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.\n\nTickets are best for managing customer interactions, track progress and reporting\nto them.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_objects", "description": "Search for HubSpot objects based on the provided string query.\nThis is a basic search returning a list of objects that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\nTasks are better for managing internal workflows, the stepping stones to get\ntickets done.", "parameters": [{"name": "object_type", "description": "The kind of object you are searching, currently supporting: tasks.", "required": true, "type": "string"}, {"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match\n- filter_groups: A list of filters to apply to the search\n- limit: The maximum number of results the search can return", "required": true, "type": "object"}]}, {"method_name": "list_pipelines", "description": "Get all deal pipelines and its stages.\nThis is necessary to pull the ID of the stage when you need to create a new Deal.\n\n Args:\n     object_type: The kind of object you are searching, currently supporting: deals and tickets.\n     token: An OAuth2 Public App (client) token structure used to make API calls.", "parameters": [{"name": "object_type", "description": "", "required": true, "type": "string"}]}, {"method_name": "list_owners", "description": "Get all owners.", "parameters": []}, {"method_name": "get_marketing_email_analytics", "description": "Retrieve marketing email analytics within a specified time interval.", "parameters": [{"name": "query", "description": "JSON containing the following search parameters:\n- startTimestamp: Start timestamp\n- endTimestamp: End timestamp", "required": true, "type": "object"}]}, {"method_name": "update_company", "description": "Update an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to update.", "required": true, "type": "string"}, {"name": "company_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_contact", "description": "Update an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to update.", "required": true, "type": "string"}, {"name": "contact_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_deal", "description": "Update an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to update.", "required": true, "type": "string"}, {"name": "deal_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to update.", "required": true, "type": "string"}, {"name": "ticket_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_task", "description": "Update an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to update.", "required": true, "type": "string"}, {"name": "task_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}]}, {"description": "Search and manage all aspects of CRM objects, including companies, contacts, deals, and more.", "version": "1.1.5", "methods": [{"method_name": "create_company", "description": "Create a new company.", "parameters": [{"name": "company_data", "description": "JSON representation of the company to be created.", "required": true, "type": "object"}]}, {"method_name": "create_contact", "description": "Create a new contact.", "parameters": [{"name": "contact_data", "description": "JSON representation of the contact to be created.", "required": true, "type": "object"}]}, {"method_name": "create_deal", "description": "Create a new deal.\nThe CreateDeal object requires a `dealstage` attribute which should be the ID of the deal stage and this can be\nfound by listing all the deal pipelines beforehand.", "parameters": [{"name": "deal_data", "description": "JSON representation of the deal to be created.", "required": true, "type": "object"}]}, {"method_name": "create_ticket", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "ticket_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "create_tasks", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "task_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "delete_company", "description": "Delete an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_contact", "description": "Delete an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_deal", "description": "Delete an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Delete an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_task", "description": "Delete an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to delete.", "required": true, "type": "string"}]}, {"method_name": "search_companies", "description": "Search for HubSpot companies based on the provided string query.\nThis is a basic search returning a list of companies that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_contacts", "description": "Search for HubSpot contacts based on the provided string query.\nThis is a basic search returning a list of contacts that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_deals", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` string among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_tickets", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.\n\nTickets are best for managing customer interactions, track progress and reporting\nto them.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_objects", "description": "Search for HubSpot objects based on the provided string query.\nThis is a basic search returning a list of objects that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\nTasks are better for managing internal workflows, the stepping stones to get\ntickets done.", "parameters": [{"name": "object_type", "description": "The kind of object you are searching, currently supporting: tasks.", "required": true, "type": "string"}, {"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match\n- filter_groups: A list of filters to apply to the search\n- limit: The maximum number of results the search can return", "required": true, "type": "object"}]}, {"method_name": "list_pipelines", "description": "Get all deal pipelines and its stages.\nThis is necessary to pull the ID of the stage when you need to create a new Deal.\n\n Args:\n     object_type: The kind of object you are searching, currently supporting: deals and tickets.\n     token: An OAuth2 Public App (client) token structure used to make API calls.", "parameters": [{"name": "object_type", "description": "", "required": true, "type": "string"}]}, {"method_name": "list_owners", "description": "Get all owners.", "parameters": []}, {"method_name": "get_marketing_email_analytics", "description": "Retrieve marketing email analytics within a specified time interval.", "parameters": [{"name": "query", "description": "JSON containing the following search parameters:\n- startTimestamp: Start timestamp\n- endTimestamp: End timestamp", "required": true, "type": "object"}]}, {"method_name": "update_company", "description": "Update an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to update.", "required": true, "type": "string"}, {"name": "company_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_contact", "description": "Update an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to update.", "required": true, "type": "string"}, {"name": "contact_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_deal", "description": "Update an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to update.", "required": true, "type": "string"}, {"name": "deal_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to update.", "required": true, "type": "string"}, {"name": "ticket_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_task", "description": "Update an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to update.", "required": true, "type": "string"}, {"name": "task_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}]}, {"description": "Search and manage all aspects of CRM objects, including companies, contacts, deals, and more.", "version": "1.2.0", "methods": [{"method_name": "create_company", "description": "Create a new company.", "parameters": [{"name": "company_data", "description": "JSON representation of the company to be created.", "required": true, "type": "object"}]}, {"method_name": "create_contact", "description": "Create a new contact.", "parameters": [{"name": "contact_data", "description": "JSON representation of the contact to be created.", "required": true, "type": "object"}]}, {"method_name": "create_deal", "description": "Create a new deal.\nThe CreateDeal object requires a `dealstage` attribute which should be the ID of the deal stage and this can be\nfound by listing all the deal pipelines beforehand.", "parameters": [{"name": "deal_data", "description": "JSON representation of the deal to be created.", "required": true, "type": "object"}]}, {"method_name": "create_ticket", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "ticket_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "create_tasks", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "task_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "delete_company", "description": "Delete an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_contact", "description": "Delete an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_deal", "description": "Delete an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Delete an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_task", "description": "Delete an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to delete.", "required": true, "type": "string"}]}, {"method_name": "search_companies", "description": "Search for HubSpot companies based on the provided string query.\nThis is a basic search returning a list of companies that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_contacts", "description": "Search for HubSpot contacts based on the provided string query.\nThis is a basic search returning a list of contacts that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_deals", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` string among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_tickets", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.\n\nTickets are best for managing customer interactions, track progress and reporting\nto them.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_objects", "description": "Search for HubSpot objects based on the provided string query.\nThis is a basic search returning a list of objects that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\nTasks are better for managing internal workflows, the stepping stones to get\ntickets done.", "parameters": [{"name": "object_type", "description": "The kind of object you are searching, currently supporting: tasks.", "required": true, "type": "string"}, {"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match\n- filter_groups: A list of filters to apply to the search\n- limit: The maximum number of results the search can return", "required": true, "type": "object"}]}, {"method_name": "list_pipelines", "description": "Get all deal pipelines and its stages.\nThis is necessary to pull the ID of the stage when you need to create a new Deal.\n\n Args:\n     object_type: The kind of object you are searching, currently supporting: deals and tickets.\n     token: An OAuth2 Public App (client) token structure used to make API calls.", "parameters": [{"name": "object_type", "description": "", "required": true, "type": "string"}]}, {"method_name": "list_owners", "description": "Get all owners.", "parameters": []}, {"method_name": "get_marketing_email_analytics", "description": "Retrieve marketing email analytics within a specified time interval.", "parameters": [{"name": "query", "description": "JSON containing the following search parameters:\n- startTimestamp: Start timestamp\n- endTimestamp: End timestamp", "required": true, "type": "object"}]}, {"method_name": "update_company", "description": "Update an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to update.", "required": true, "type": "string"}, {"name": "company_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_contact", "description": "Update an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to update.", "required": true, "type": "string"}, {"name": "contact_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_deal", "description": "Update an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to update.", "required": true, "type": "string"}, {"name": "deal_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to update.", "required": true, "type": "string"}, {"name": "ticket_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_task", "description": "Update an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to update.", "required": true, "type": "string"}, {"name": "task_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}]}, {"description": "Search and manage all aspects of CRM objects, including companies, contacts, deals, and more.", "version": "1.2.1", "methods": [{"method_name": "create_company", "description": "Create a new company.", "parameters": [{"name": "company_data", "description": "JSON representation of the company to be created.", "required": true, "type": "object"}]}, {"method_name": "create_contact", "description": "Create a new contact.", "parameters": [{"name": "contact_data", "description": "JSON representation of the contact to be created.", "required": true, "type": "object"}]}, {"method_name": "create_deal", "description": "Create a new deal.\nThe CreateDeal object requires a `dealstage` attribute which should be the ID of the deal stage and this can be\nfound by listing all the deal pipelines beforehand.", "parameters": [{"name": "deal_data", "description": "JSON representation of the deal to be created.", "required": true, "type": "object"}]}, {"method_name": "create_ticket", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "ticket_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "create_tasks", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "task_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "delete_company", "description": "Delete an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_contact", "description": "Delete an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_deal", "description": "Delete an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Delete an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_task", "description": "Delete an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to delete.", "required": true, "type": "string"}]}, {"method_name": "search_companies", "description": "Search for HubSpot companies based on the provided string query.\nThis is a basic search returning a list of companies that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_contacts", "description": "Search for HubSpot contacts based on the provided string query.\nThis is a basic search returning a list of contacts that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_deals", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` string among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_tickets", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.\n\nTickets are best for managing customer interactions, track progress and reporting\nto them.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_objects", "description": "Search for HubSpot objects based on the provided string query.\nThis is a basic search returning a list of objects that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\nTasks are better for managing internal workflows, the stepping stones to get\ntickets done.", "parameters": [{"name": "object_type", "description": "The kind of object you are searching, currently supporting: tasks.", "required": true, "type": "string"}, {"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match\n- filter_groups: A list of filters to apply to the search\n- limit: The maximum number of results the search can return", "required": true, "type": "object"}]}, {"method_name": "list_pipelines", "description": "Get all deal pipelines and its stages.\nThis is necessary to pull the ID of the stage when you need to create a new Deal.\n\n Args:\n     object_type: The kind of object you are searching, currently supporting: deals and tickets.\n     token: An OAuth2 Public App (client) token structure used to make API calls.", "parameters": [{"name": "object_type", "description": "", "required": true, "type": "string"}]}, {"method_name": "list_owners", "description": "Get all owners.", "parameters": []}, {"method_name": "get_marketing_email_analytics", "description": "Retrieve marketing email analytics within a specified time interval.", "parameters": [{"name": "query", "description": "JSON containing the following search parameters:\n- startTimestamp: Start timestamp\n- endTimestamp: End timestamp", "required": true, "type": "object"}]}, {"method_name": "update_company", "description": "Update an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to update.", "required": true, "type": "string"}, {"name": "company_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_contact", "description": "Update an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to update.", "required": true, "type": "string"}, {"name": "contact_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_deal", "description": "Update an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to update.", "required": true, "type": "string"}, {"name": "deal_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to update.", "required": true, "type": "string"}, {"name": "ticket_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_task", "description": "Update an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to update.", "required": true, "type": "string"}, {"name": "task_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}]}, {"description": "Search and manage all aspects of CRM objects, including companies, contacts, deals, and more.", "version": "1.2.3", "methods": [{"method_name": "create_company", "description": "Create a new company.", "parameters": [{"name": "company_data", "description": "JSON representation of the company to be created.", "required": true, "type": "object"}]}, {"method_name": "create_contact", "description": "Create a new contact.", "parameters": [{"name": "contact_data", "description": "JSON representation of the contact to be created.", "required": true, "type": "object"}]}, {"method_name": "create_deal", "description": "Create a new deal.\nThe CreateDeal object requires a `dealstage` attribute which should be the ID of the deal stage and this can be\nfound by listing all the deal pipelines beforehand.", "parameters": [{"name": "deal_data", "description": "JSON representation of the deal to be created.", "required": true, "type": "object"}]}, {"method_name": "create_ticket", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "ticket_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "create_tasks", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "task_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "delete_company", "description": "Delete an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_contact", "description": "Delete an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_deal", "description": "Delete an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Delete an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_task", "description": "Delete an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to delete.", "required": true, "type": "string"}]}, {"method_name": "search_companies", "description": "Search for HubSpot companies based on the provided string query.\nThis is a basic search returning a list of companies that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_contacts", "description": "Search for HubSpot contacts based on the provided string query.\nThis is a basic search returning a list of contacts that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_deals", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` string among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_tickets", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.\n\nTickets are best for managing customer interactions, track progress and reporting\nto them.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_objects", "description": "Search for HubSpot objects based on the provided string query.\nThis is a basic search returning a list of objects that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\nTasks are better for managing internal workflows, the stepping stones to get\ntickets done.", "parameters": [{"name": "object_type", "description": "The kind of object you are searching, currently supporting: tasks.", "required": true, "type": "string"}, {"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match\n- filter_groups: A list of filters to apply to the search\n- limit: The maximum number of results the search can return", "required": true, "type": "object"}]}, {"method_name": "list_pipelines", "description": "Get all deal pipelines and its stages.\nThis is necessary to pull the ID of the stage when you need to create a new Deal.\n\n Args:\n     object_type: The kind of object you are searching, currently supporting: deals and tickets.\n     token: An OAuth2 Public App (client) token structure used to make API calls.", "parameters": [{"name": "object_type", "description": "", "required": true, "type": "string"}]}, {"method_name": "list_owners", "description": "Get all owners.", "parameters": []}, {"method_name": "get_marketing_email_analytics", "description": "Retrieve marketing email analytics within a specified time interval.", "parameters": [{"name": "query", "description": "JSON containing the following search parameters:\n- startTimestamp: Start timestamp\n- endTimestamp: End timestamp", "required": true, "type": "object"}]}, {"method_name": "update_company", "description": "Update an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to update.", "required": true, "type": "string"}, {"name": "company_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_contact", "description": "Update an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to update.", "required": true, "type": "string"}, {"name": "contact_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_deal", "description": "Update an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to update.", "required": true, "type": "string"}, {"name": "deal_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to update.", "required": true, "type": "string"}, {"name": "ticket_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_task", "description": "Update an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to update.", "required": true, "type": "string"}, {"name": "task_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}]}, {"description": "Search and manage all aspects of CRM objects, including companies, contacts, deals, and more.", "version": "1.2.4", "methods": [{"method_name": "create_company", "description": "Create a new company.", "parameters": [{"name": "company_data", "description": "JSON representation of the company to be created.", "required": true, "type": "object"}]}, {"method_name": "create_contact", "description": "Create a new contact.", "parameters": [{"name": "contact_data", "description": "JSON representation of the contact to be created.", "required": true, "type": "object"}]}, {"method_name": "create_deal", "description": "Create a new deal.\nThe CreateDeal object requires a `dealstage` attribute which should be the ID of the deal stage and this can be\nfound by listing all the deal pipelines beforehand.", "parameters": [{"name": "deal_data", "description": "JSON representation of the deal to be created.", "required": true, "type": "object"}]}, {"method_name": "create_ticket", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "ticket_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "create_tasks", "description": "Create a new ticket.\nThe CreateTicket object requires a `hs_pipeline_stage` attribute which should be the ID of the ticket stage and this\ncan be found by listing all the ticket pipelines beforehand.", "parameters": [{"name": "task_data", "description": "JSON representation of the ticket to be created.", "required": true, "type": "object"}]}, {"method_name": "delete_company", "description": "Delete an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_contact", "description": "Delete an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_deal", "description": "Delete an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Delete an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to delete.", "required": true, "type": "string"}]}, {"method_name": "delete_task", "description": "Delete an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to delete.", "required": true, "type": "string"}]}, {"method_name": "search_companies", "description": "Search for HubSpot companies based on the provided string query.\nThis is a basic search returning a list of companies that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_contacts", "description": "Search for HubSpot contacts based on the provided string query.\nThis is a basic search returning a list of contacts that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_deals", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` string among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_tickets", "description": "Search for HubSpot deals based on the provided string query.\nThis is a basic search returning a list of deals that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\n\nIf you want to filter the results, you can provide a list of filters to apply.\nFilters correspond exactly to the Hubspot filter search results documentation which can be\nfound here: https://developers.hubspot.com/beta-docs/guides/api/crm/search#filter-search-results.\n\nTickets are best for managing customer interactions, track progress and reporting\nto them.", "parameters": [{"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match.\n- filter_groups: A list of filters to apply to the search.\n- limit: The maximum number of results the search can return.", "required": true, "type": "object"}]}, {"method_name": "search_objects", "description": "Search for HubSpot objects based on the provided string query.\nThis is a basic search returning a list of objects that are matching the\n`query` among any of their properties. The search will be limited to at most\n`limit` results, therefore you have to increase this parameter if you want to\nobtain more.\nTasks are better for managing internal workflows, the stepping stones to get\ntickets done.", "parameters": [{"name": "object_type", "description": "The kind of object you are searching, currently supporting: tasks.", "required": true, "type": "string"}, {"name": "search_params", "description": "JSON containing the following search parameters:\n- query: String that is searched for in all the contact properties for a match\n- filter_groups: A list of filters to apply to the search\n- limit: The maximum number of results the search can return", "required": true, "type": "object"}]}, {"method_name": "list_pipelines", "description": "Get all deal pipelines and its stages.\nThis is necessary to pull the ID of the stage when you need to create a new Deal.", "parameters": [{"name": "object_type", "description": "The kind of object you are searching, currently supporting: deals and tickets.", "required": true, "type": "string"}]}, {"method_name": "list_owners", "description": "Get all owners.", "parameters": []}, {"method_name": "get_marketing_email_analytics", "description": "Retrieve marketing email analytics within a specified time interval.", "parameters": [{"name": "query", "description": "JSON containing the following search parameters:\n- startTimestamp: Start timestamp\n- endTimestamp: End timestamp", "required": true, "type": "object"}]}, {"method_name": "update_company", "description": "Update an existing company.", "parameters": [{"name": "company_id", "description": "The id of the company to update.", "required": true, "type": "string"}, {"name": "company_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_contact", "description": "Update an existing contact.", "parameters": [{"name": "contact_id", "description": "The id of the contact to update.", "required": true, "type": "string"}, {"name": "contact_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_deal", "description": "Update an existing deal.", "parameters": [{"name": "deal_id", "description": "The id of the deal to update.", "required": true, "type": "string"}, {"name": "deal_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "The id of the ticket to update.", "required": true, "type": "string"}, {"name": "ticket_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}, {"method_name": "update_task", "description": "Update an existing ticket.", "parameters": [{"name": "task_id", "description": "The id of the task to update.", "required": true, "type": "string"}, {"name": "task_data", "description": "JSON including the properties to be updated.", "required": true, "type": "object"}]}]}]}, "Linear": {"name": "Linear", "versions": [{"description": "Linear actions for handling issues", "version": "1.0.0", "methods": [{"method_name": "search_issues", "description": "Search issues from Linear.\nThe values for \"ordering\" can be \"createdAt\" or \"updatedAt\".\nReturns by default 50 issues matching the filter options.", "parameters": [{"name": "filter_options", "description": "The filter options to use to search for issues.", "required": true, "type": "object"}]}, {"method_name": "create_issue", "description": "Create a new Linear issue", "parameters": [{"name": "issue_details", "description": "The details of the issue to create", "required": true, "type": "object"}]}, {"method_name": "add_comment", "description": "Add a comment to a Linear issue", "parameters": [{"name": "issue_id", "description": "ID of the issue to comment on", "required": true, "type": "string"}, {"name": "body", "description": "Text content of the comment", "required": true, "type": "string"}]}]}, {"description": "Linear actions for handling issues", "version": "1.0.1", "methods": [{"method_name": "search_issues", "description": "Search issues from Linear.\nThe values for \"ordering\" can be \"createdAt\" or \"updatedAt\".\nReturns by default 50 issues matching the filter options.", "parameters": [{"name": "filter_options", "description": "The filter options to use to search for issues.", "required": true, "type": "object"}]}, {"method_name": "create_issue", "description": "Create a new Linear issue", "parameters": [{"name": "issue_details", "description": "The details of the issue to create", "required": true, "type": "object"}]}, {"method_name": "add_comment", "description": "Add a comment to a Linear issue", "parameters": [{"name": "issue_id", "description": "ID of the issue to comment on", "required": true, "type": "string"}, {"name": "body", "description": "Text content of the comment", "required": true, "type": "string"}]}]}, {"description": "Linear actions for handling issues", "version": "1.0.2", "methods": [{"method_name": "search_issues", "description": "Search issues from Linear.\nThe values for \"ordering\" can be \"createdAt\" or \"updatedAt\".\nReturns by default 50 issues matching the filter options.", "parameters": [{"name": "filter_options", "description": "The filter options to use to search for issues.", "required": true, "type": "object"}]}, {"method_name": "create_issue", "description": "Create a new Linear issue", "parameters": [{"name": "issue_details", "description": "The details of the issue to create", "required": true, "type": "object"}]}, {"method_name": "add_comment", "description": "Add a comment to a Linear issue", "parameters": [{"name": "issue_id", "description": "ID of the issue to comment on", "required": true, "type": "string"}, {"name": "body", "description": "Text content of the comment", "required": true, "type": "string"}]}]}, {"description": "Linear actions for handling issues", "version": "1.1.0", "methods": [{"method_name": "search_issues", "description": "Search issues from Linear.\nThe values for \"ordering\" can be \"createdAt\" or \"updatedAt\".\nReturns by default 50 issues matching the filter options.", "parameters": [{"name": "filter_options", "description": "The filter options to use to search for issues.", "required": true, "type": "object"}]}, {"method_name": "create_issue", "description": "Create a new Linear issue", "parameters": [{"name": "issue_details", "description": "The details of the issue to create", "required": true, "type": "object"}]}, {"method_name": "add_comment", "description": "Add a comment to a Linear issue", "parameters": [{"name": "issue_id", "description": "ID of the issue to comment on", "required": true, "type": "string"}, {"name": "body", "description": "Text content of the comment", "required": true, "type": "string"}]}]}, {"description": "Linear actions for handling issues", "version": "1.1.1", "methods": [{"method_name": "search_issues", "description": "Search issues from Linear.\nThe values for \"ordering\" can be \"createdAt\" or \"updatedAt\".\nReturns by default 50 issues matching the filter options.", "parameters": [{"name": "filter_options", "description": "The filter options to use to search for issues.", "required": true, "type": "object"}]}, {"method_name": "create_issue", "description": "Create a new Linear issue", "parameters": [{"name": "issue_details", "description": "The details of the issue to create", "required": true, "type": "object"}]}, {"method_name": "add_comment", "description": "Add a comment to a Linear issue", "parameters": [{"name": "issue_id", "description": "ID of the issue to comment on", "required": true, "type": "string"}, {"name": "body", "description": "Text content of the comment", "required": true, "type": "string"}]}]}, {"description": "Linear actions for handling issues", "version": "1.2.0", "methods": [{"method_name": "search_issues", "description": "Search issues from Linear.\nThe values for \"ordering\" can be \"createdAt\" or \"updatedAt\".\nReturns by default 50 issues matching the filter options.", "parameters": [{"name": "filter_options", "description": "The filter options to use to search for issues.", "required": true, "type": "object"}]}, {"method_name": "create_issue", "description": "Create a new Linear issue", "parameters": [{"name": "issue_details", "description": "The details of the issue to create", "required": true, "type": "object"}]}, {"method_name": "add_comment", "description": "Add a comment to a Linear issue", "parameters": [{"name": "issue_id", "description": "ID of the issue to comment on", "required": true, "type": "string"}, {"name": "body", "description": "Text content of the comment", "required": true, "type": "string"}]}]}, {"description": "Linear actions for handling issues", "version": "1.2.1", "methods": [{"method_name": "search_issues", "description": "Search issues from Linear.\nThe values for \"ordering\" can be \"createdAt\" or \"updatedAt\".\nReturns by default 50 issues matching the filter options.", "parameters": [{"name": "filter_options", "description": "The filter options to use to search for issues.", "required": true, "type": "object"}]}, {"method_name": "create_issue", "description": "Create a new Linear issue", "parameters": [{"name": "issue_details", "description": "The details of the issue to create", "required": true, "type": "object"}]}, {"method_name": "add_comment", "description": "Add a comment to a Linear issue", "parameters": [{"name": "issue_id", "description": "ID of the issue to comment on", "required": true, "type": "string"}, {"name": "body", "description": "Text content of the comment", "required": true, "type": "string"}]}]}, {"description": "Linear actions for handling issues", "version": "1.2.2", "methods": [{"method_name": "search_issues", "description": "Search issues from Linear.\nThe values for \"ordering\" can be \"createdAt\" or \"updatedAt\".\nReturns by default 50 issues matching the filter options.", "parameters": [{"name": "filter_options", "description": "The filter options to use to search for issues.", "required": true, "type": "object"}]}, {"method_name": "create_issue", "description": "Create a new Linear issue", "parameters": [{"name": "issue_details", "description": "The details of the issue to create", "required": true, "type": "object"}]}, {"method_name": "add_comment", "description": "Add a comment to a Linear issue", "parameters": [{"name": "issue_id", "description": "ID of the issue to comment on", "required": true, "type": "string"}, {"name": "body", "description": "Text content of the comment", "required": true, "type": "string"}]}]}]}, "Microsoft Calendar": {"name": "Microsoft Calendar", "versions": [{"description": "Microsoft actions for Calendar", "version": "1.0.0", "methods": [{"method_name": "create_event", "description": "Creates a new event in the user's calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Microsoft Calendar event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier where to add the event which can be found by listing calendars action.\nDefault value is using the user's default calendar.", "required": false, "type": "string"}]}, {"method_name": "update_event", "description": "Update an existing Microsoft Calendar event.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.", "required": true, "type": "object"}]}, {"method_name": "list_events", "description": "List all events in the user's calendar.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "query_params", "description": "JSON containing the following query parameters:\n- filter -> used to filter results based on different properties\n    Details available at: https://learn.microsoft.com/en-us/graph/filter-query-parameter?tabs=http.\n    Usage example: \"start/dateTime ge '2024-08-07T00:00:00Z' and start/dateTime lt '2024-08-07T23:59:59Z'\".\n- search -> used to search after a particular string", "required": true, "type": "object"}, {"name": "timezone", "description": "By default, it should match the value returned by the get_mailbox_timezone action unless specified\notherwise by the user. Queries and event dates will use the timezone specified.", "required": true, "type": "string"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing calendars action.\nDefault value is using the user's default calendar.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "get_mailbox_timezone", "description": "Returns the user's mailbox timezone.\nThis timezone should be used in all subsequent actions where a timezone is required.", "parameters": []}]}, {"description": "Microsoft actions for Calendar", "version": "1.0.1", "methods": [{"method_name": "create_event", "description": "Creates a new event in the user's calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Microsoft Calendar event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier where to add the event which can be found by listing calendars action.\nDefault value is using the user's default calendar.", "required": false, "type": "string"}]}, {"method_name": "update_event", "description": "Update an existing Microsoft Calendar event.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.", "required": true, "type": "object"}]}, {"method_name": "list_events", "description": "List all events in the user's calendar.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "query_params", "description": "JSON containing the following query parameters:\n- filter -> used to filter results based on different properties\n    Details available at: https://learn.microsoft.com/en-us/graph/filter-query-parameter?tabs=http.\n    Usage example: \"start/dateTime ge '2024-08-07T00:00:00Z' and start/dateTime lt '2024-08-07T23:59:59Z'\".\n- search -> used to search after a particular string", "required": true, "type": "object"}, {"name": "timezone", "description": "By default, it should match the value returned by the get_mailbox_timezone action unless specified\notherwise by the user. Queries and event dates will use the timezone specified.", "required": true, "type": "string"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing calendars action.\nDefault value is using the user's default calendar.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "get_mailbox_timezone", "description": "Returns the user's mailbox timezone.\nThis timezone should be used in all subsequent actions where a timezone is required.", "parameters": []}]}, {"description": "Microsoft actions for Calendar", "version": "1.0.2", "methods": [{"method_name": "create_event", "description": "Creates a new event in the user's calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Microsoft Calendar event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier where to add the event which can be found by listing calendars action.\nDefault value is using the user's default calendar.", "required": false, "type": "string"}]}, {"method_name": "update_event", "description": "Update an existing Microsoft Calendar event.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.", "required": true, "type": "object"}]}, {"method_name": "list_events", "description": "List all events in the user's calendar.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "query_params", "description": "JSON containing the following query parameters:\n- filter -> used to filter results based on different properties\n    Details available at: https://learn.microsoft.com/en-us/graph/filter-query-parameter?tabs=http.\n    Usage example: \"start/dateTime ge '2024-08-07T00:00:00Z' and start/dateTime lt '2024-08-07T23:59:59Z'\".\n- search -> used to search after a particular string", "required": true, "type": "object"}, {"name": "timezone", "description": "By default, it should match the value returned by the get_mailbox_timezone action unless specified\notherwise by the user. Queries and event dates will use the timezone specified.", "required": true, "type": "string"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing calendars action.\nDefault value is using the user's default calendar.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "get_mailbox_timezone", "description": "Returns the user's mailbox timezone.\nThis timezone should be used in all subsequent actions where a timezone is required.", "parameters": []}]}, {"description": "Microsoft actions for Calendar", "version": "1.0.3", "methods": [{"method_name": "create_event", "description": "Creates a new event in the user's calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Microsoft Calendar event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier where to add the event which can be found by listing calendars action.\nDefault value is using the user's default calendar.", "required": false, "type": "string"}]}, {"method_name": "update_event", "description": "Update an existing Microsoft Calendar event.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.", "required": true, "type": "object"}]}, {"method_name": "list_events", "description": "List all events in the user's calendar.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "query_params", "description": "JSON containing the following query parameters:\n- filter -> used to filter results based on different properties\n    Details available at: https://learn.microsoft.com/en-us/graph/filter-query-parameter?tabs=http.\n    Usage example: \"start/dateTime ge '2024-08-07T00:00:00Z' and start/dateTime lt '2024-08-07T23:59:59Z'\".\n- search -> used to search after a particular string", "required": true, "type": "object"}, {"name": "timezone", "description": "By default, it should match the value returned by the get_mailbox_timezone action unless specified\notherwise by the user. Queries and event dates will use the timezone specified.", "required": true, "type": "string"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing calendars action.\nDefault value is using the user's default calendar.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "get_mailbox_timezone", "description": "Returns the user's mailbox timezone.\nThis timezone should be used in all subsequent actions where a timezone is required.", "parameters": []}]}, {"description": "Microsoft actions for Calendar", "version": "1.1.0", "methods": [{"method_name": "create_event", "description": "Creates a new event in the user's calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Microsoft Calendar event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier where to add the event which can be found by listing calendars action.\nDefault value is using the user's default calendar.", "required": false, "type": "string"}]}, {"method_name": "update_event", "description": "Update an existing Microsoft Calendar event.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.", "required": true, "type": "object"}]}, {"method_name": "list_events", "description": "List all events in the user's calendar.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "query_params", "description": "JSON containing the following query parameters:\n- filter -> used to filter results based on different properties\n    Details available at: https://learn.microsoft.com/en-us/graph/filter-query-parameter?tabs=http.\n    Usage example: \"start/dateTime ge '2024-08-07T00:00:00Z' and start/dateTime lt '2024-08-07T23:59:59Z'\".\n- search -> used to search after a particular string", "required": true, "type": "object"}, {"name": "timezone", "description": "By default, it should match the value returned by the get_mailbox_timezone action unless specified\notherwise by the user. Queries and event dates will use the timezone specified.", "required": true, "type": "string"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing calendars action.\nDefault value is using the user's default calendar.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "get_mailbox_timezone", "description": "Returns the user's mailbox timezone.\nThis timezone should be used in all subsequent actions where a timezone is required.", "parameters": []}]}, {"description": "Microsoft actions for Calendar", "version": "1.1.1", "methods": [{"method_name": "create_event", "description": "Creates a new event in the user's calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Microsoft Calendar event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier where to add the event which can be found by listing calendars action.\nDefault value is using the user's default calendar.", "required": false, "type": "string"}]}, {"method_name": "update_event", "description": "Update an existing Microsoft Calendar event.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.", "required": true, "type": "object"}]}, {"method_name": "list_events", "description": "List all events in the user's calendar.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "query_params", "description": "JSON containing the following query parameters:\n- filter -> used to filter results based on different properties\n    Details available at: https://learn.microsoft.com/en-us/graph/filter-query-parameter?tabs=http.\n    Usage example: \"start/dateTime ge '2024-08-07T00:00:00Z' and start/dateTime lt '2024-08-07T23:59:59Z'\".\n- search -> used to search after a particular string", "required": true, "type": "object"}, {"name": "timezone", "description": "By default, it should match the value returned by the get_mailbox_timezone action unless specified\notherwise by the user. Queries and event dates will use the timezone specified.", "required": true, "type": "string"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing calendars action.\nDefault value is using the user's default calendar.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "get_mailbox_timezone", "description": "Returns the user's mailbox timezone.\nThis timezone should be used in all subsequent actions where a timezone is required.", "parameters": []}]}, {"description": "Microsoft actions for Calendar", "version": "1.2.0", "methods": [{"method_name": "create_event", "description": "Creates a new event in the user's calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Microsoft Calendar event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier where to add the event which can be found by listing calendars action.\nDefault value is using the user's default calendar.", "required": false, "type": "string"}]}, {"method_name": "update_event", "description": "Update an existing Microsoft Calendar event.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.", "required": true, "type": "object"}]}, {"method_name": "list_events", "description": "List all events in the user's calendar.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "query_params", "description": "JSON containing the following query parameters:\n- filter -> used to filter results based on different properties\n    Details available at: https://learn.microsoft.com/en-us/graph/filter-query-parameter?tabs=http.\n    Usage example: \"start/dateTime ge '2024-08-07T00:00:00Z' and start/dateTime lt '2024-08-07T23:59:59Z'\".\n- search -> used to search after a particular string", "required": true, "type": "object"}, {"name": "timezone", "description": "By default, it should match the value returned by the get_mailbox_timezone action unless specified\notherwise by the user. Queries and event dates will use the timezone specified.", "required": true, "type": "string"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing calendars action.\nDefault value is using the user's default calendar.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "get_mailbox_timezone", "description": "Returns the user's mailbox timezone.\nThis timezone should be used in all subsequent actions where a timezone is required.", "parameters": []}]}, {"description": "Microsoft actions for Calendar", "version": "1.2.1", "methods": [{"method_name": "create_event", "description": "Creates a new event in the user's calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Microsoft Calendar event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier where to add the event which can be found by listing calendars action.\nDefault value is using the user's default calendar.", "required": false, "type": "string"}]}, {"method_name": "update_event", "description": "Update an existing Microsoft Calendar event.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.", "required": true, "type": "object"}]}, {"method_name": "list_events", "description": "List all events in the user's calendar.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "query_params", "description": "JSON containing the following query parameters:\n- filter -> used to filter results based on different properties\n    Details available at: https://learn.microsoft.com/en-us/graph/filter-query-parameter?tabs=http.\n    Usage example: \"start/dateTime ge '2024-08-07T00:00:00Z' and start/dateTime lt '2024-08-07T23:59:59Z'\".\n- search -> used to search after a particular string", "required": true, "type": "object"}, {"name": "timezone", "description": "By default, it should match the value returned by the get_mailbox_timezone action unless specified\notherwise by the user. Queries and event dates will use the timezone specified.", "required": true, "type": "string"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing calendars action.\nDefault value is using the user's default calendar.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "get_mailbox_timezone", "description": "Returns the user's mailbox timezone.\nThis timezone should be used in all subsequent actions where a timezone is required.", "parameters": []}]}, {"description": "Microsoft actions for Calendar", "version": "1.2.2", "methods": [{"method_name": "create_event", "description": "Creates a new event in the user's calendar.", "parameters": [{"name": "event", "description": "JSON representation of the Microsoft Calendar event.", "required": true, "type": "object"}, {"name": "calendar_id", "description": "Calendar identifier where to add the event which can be found by listing calendars action.\nDefault value is using the user's default calendar.", "required": false, "type": "string"}]}, {"method_name": "update_event", "description": "Update an existing Microsoft Calendar event.", "parameters": [{"name": "event_id", "description": "Identifier of the event to update. Can be found by listing events in all calendars.", "required": true, "type": "string"}, {"name": "updates", "description": "A dictionary containing the event attributes to update.", "required": true, "type": "object"}]}, {"method_name": "list_events", "description": "List all events in the user's calendar.\nTo aggregate all events across calendars, call this method for each calendar returned by list_calendars endpoint.\nIdeally a start and end date should always be provided, otherwise we will look in the whole future or past.", "parameters": [{"name": "query_params", "description": "JSON containing the following query parameters:\n- filter -> used to filter results based on different properties\n    Details available at: https://learn.microsoft.com/en-us/graph/filter-query-parameter?tabs=http.\n    Usage example: \"start/dateTime ge '2024-08-07T00:00:00Z' and start/dateTime lt '2024-08-07T23:59:59Z'\".\n- search -> used to search after a particular string", "required": true, "type": "object"}, {"name": "timezone", "description": "By default, it should match the value returned by the get_mailbox_timezone action unless specified\notherwise by the user. Queries and event dates will use the timezone specified.", "required": true, "type": "string"}, {"name": "calendar_id", "description": "Calendar identifier which can be found by listing calendars action.\nDefault value is using the user's default calendar.", "required": false, "type": "string"}]}, {"method_name": "list_calendars", "description": "List all calendars that the user is subscribed to.", "parameters": []}, {"method_name": "get_mailbox_timezone", "description": "Returns the user's mailbox timezone.\nThis timezone should be used in all subsequent actions where a timezone is required.", "parameters": []}]}]}, "Microsoft Mail": {"name": "Microsoft Mail", "versions": [{"description": "Actions for Microsoft 365 Outlook emails.", "version": "1.0.0", "methods": [{"method_name": "list_emails", "description": "List emails in the user's mailbox matching search query.\nWhen searching emails in a specific folder, the folder name should be provided in the 'folder_to_search' parameter and NOT in the 'search_query'.\n\nDo NOT add to 'search_query' any conditions related to recipients ('to', 'cc', 'bcc' or 'from'). In that case use 'filter_by_recipients' action after this action.\n\nFor any date comparison use:\n    - consider Monday as beginning of the week\n    - date in ISO 8601 format (e.g., '2024-08-24')\n    - use boolean operators (e.g., 'AND', 'OR', 'NOT'). These operators must be in uppercase.\n    - comparison operators 'ge', 'le', 'eq', 'ne' (e.g., 'receivedDateTime ge 2024-08-24')", "parameters": [{"name": "search_query", "description": "query to search for emails. Keep spaces in folder names if user gives spaces.", "required": true, "type": "string"}, {"name": "folder_to_search", "description": "The folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "properties_to_return", "description": "The properties to return in the response. Default is all properties. Comma separated list of properties, like 'subject,body,toRecipients'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "filter_by_recipients", "description": "Filter list of emails objects by recipients.", "parameters": [{"name": "search_query", "description": "Query to search for emails. Default is '*'.", "required": false, "type": "string"}, {"name": "from_", "description": "Email address of the sender to filter by.", "required": false, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to filter by.", "required": false, "type": "string"}, {"name": "cc_recipients", "description": "Comma separated list of email addresses of the cc recipients to filter by.", "required": false, "type": "string"}, {"name": "bcc_recipients", "description": "Comma separated list of email addresses of the bcc recipients to filter by.", "required": false, "type": "string"}, {"name": "folder_to_search", "description": "Folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "create_draft", "description": "Create a draft email in the user's mailbox.", "parameters": [{"name": "email", "description": "The email content to create a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "update_draft", "description": "Update a draft email in the user's mailbox.", "parameters": [{"name": "email_id", "description": "The ID of the draft email to update.", "required": true, "type": "string"}, {"name": "email", "description": "The email content to update a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "add_attachment", "description": "Add an attachment to an email.\nIf possible pass attachment as local file absolute filepath, or\npass the content_bytes directly.\n\nThe attachment", "parameters": [{"name": "email_id", "description": "The ID of the email to add the attachment to.", "required": true, "type": "string"}, {"name": "attachment", "description": "The attachment to add.", "required": true, "type": "object"}]}, {"method_name": "send_email", "description": "Send a new email.", "parameters": [{"name": "email", "description": "The email content to send.", "required": true, "type": "object"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send a draft message.", "parameters": [{"name": "email_id", "description": "The ID of the draft email to send.", "required": true, "type": "string"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}]}, {"method_name": "reply_to_email", "description": "Reply to an existing message.", "parameters": [{"name": "email_id", "description": "The ID of the email to reply to.", "required": true, "type": "string"}, {"name": "reply", "description": "The reply email properties that needs to be appended, set or deleted. Do not modify the body of the email.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}, {"name": "reply_to_all", "description": "Whether to reply to all recipients.", "required": false, "type": "boolean"}]}, {"method_name": "forward_email", "description": "Forward an existing message.", "parameters": [{"name": "email_id", "description": "The ID of the email to forward.", "required": true, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to forward the message to.", "required": true, "type": "string"}, {"name": "comment", "description": "A comment to include.", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Move a message to a different folder.", "parameters": [{"name": "email_id", "description": "The ID of the email to move.", "required": true, "type": "string"}, {"name": "destination_folder_id", "description": "The ID of the destination folder.", "required": true, "type": "string"}]}, {"method_name": "get_email_by_id", "description": "Get the details of a specific email.", "parameters": [{"name": "email_id", "description": "The ID of the email to retrieve.", "required": true, "type": "string"}]}, {"method_name": "list_folders", "description": "List folders in the user's mailbox.", "parameters": [{"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "subscribe_notifications", "description": "Subscribe to notifications for new messages in a specific folder.", "parameters": [{"name": "email_folder", "description": "The folder to subscribe to - this should be the real name, not ID.", "required": true, "type": "string"}, {"name": "webhook_url", "description": "The URL to receive notifications.", "required": true, "type": "string"}, {"name": "expiration_date", "description": "The expiration date of the subscription. Format 'YYYY-MM-DDTHH:MM'. Timezone is UTC.", "required": true, "type": "string"}, {"name": "account", "description": "The user account (a email address)", "required": true, "type": "string"}]}, {"method_name": "delete_all_subscriptions", "description": "Delete all existing subscriptions.", "parameters": []}, {"method_name": "delete_subscription", "description": "Delete one subscription", "parameters": [{"name": "subscription_id", "description": "The ID of the subscription to delete.", "required": true, "type": "string"}]}, {"method_name": "get_subscriptions", "description": "Get a list of all active subscriptions.", "parameters": []}, {"method_name": "get_folder", "description": "Get the folder details by name.", "parameters": [{"name": "folder_to_search", "description": "The name or ID of the folder to retrieve.", "required": true, "type": "string"}, {"name": "account", "description": "The email account. By default \"me\"", "required": true, "type": "string"}]}]}, {"description": "Actions for Microsoft 365 Outlook emails.", "version": "1.0.1", "methods": [{"method_name": "list_emails", "description": "List emails in the user's mailbox matching search query.\nWhen searching emails in a specific folder, the folder name should be provided in the 'folder_to_search' parameter and NOT in the 'search_query'.\n\nDo NOT add to 'search_query' any conditions related to recipients ('to', 'cc', 'bcc' or 'from'). In that case use 'filter_by_recipients' action after this action.\n\nFor any date comparison use:\n    - consider Monday as beginning of the week\n    - date in ISO 8601 format (e.g., '2024-08-24')\n    - use boolean operators (e.g., 'AND', 'OR', 'NOT'). These operators must be in uppercase.\n    - comparison operators 'ge', 'le', 'eq', 'ne' (e.g., 'receivedDateTime ge 2024-08-24')", "parameters": [{"name": "search_query", "description": "query to search for emails. Keep spaces in folder names if user gives spaces.", "required": true, "type": "string"}, {"name": "folder_to_search", "description": "The folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "properties_to_return", "description": "The properties to return in the response. Default is all properties. Comma separated list of properties, like 'subject,body,toRecipients'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "filter_by_recipients", "description": "Filter list of emails objects by recipients.", "parameters": [{"name": "search_query", "description": "Query to search for emails. Default is '*'.", "required": false, "type": "string"}, {"name": "from_", "description": "Email address of the sender to filter by.", "required": false, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to filter by.", "required": false, "type": "string"}, {"name": "cc_recipients", "description": "Comma separated list of email addresses of the cc recipients to filter by.", "required": false, "type": "string"}, {"name": "bcc_recipients", "description": "Comma separated list of email addresses of the bcc recipients to filter by.", "required": false, "type": "string"}, {"name": "folder_to_search", "description": "Folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "create_draft", "description": "Create a draft email in the user's mailbox.", "parameters": [{"name": "email", "description": "The email content to create a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "update_draft", "description": "Update a draft email in the user's mailbox.", "parameters": [{"name": "email_id", "description": "The ID of the draft email to update.", "required": true, "type": "string"}, {"name": "email", "description": "The email content to update a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "add_attachment", "description": "Add an attachment to an email.\nIf possible pass attachment as local file absolute filepath, or\npass the content_bytes directly.\n\nThe attachment", "parameters": [{"name": "email_id", "description": "The ID of the email to add the attachment to.", "required": true, "type": "string"}, {"name": "attachment", "description": "The attachment to add.", "required": true, "type": "object"}]}, {"method_name": "send_email", "description": "Send a new email.", "parameters": [{"name": "email", "description": "The email content to send.", "required": true, "type": "object"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send a draft message.", "parameters": [{"name": "email_id", "description": "The ID of the draft email to send.", "required": true, "type": "string"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}]}, {"method_name": "reply_to_email", "description": "Reply to an existing message.", "parameters": [{"name": "email_id", "description": "The ID of the email to reply to.", "required": true, "type": "string"}, {"name": "reply", "description": "The reply email properties that needs to be appended, set or deleted. Do not modify the body of the email.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}, {"name": "reply_to_all", "description": "Whether to reply to all recipients.", "required": false, "type": "boolean"}]}, {"method_name": "forward_email", "description": "Forward an existing message.", "parameters": [{"name": "email_id", "description": "The ID of the email to forward.", "required": true, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to forward the message to.", "required": true, "type": "string"}, {"name": "comment", "description": "A comment to include.", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Move a message to a different folder.", "parameters": [{"name": "email_id", "description": "The ID of the email to move.", "required": true, "type": "string"}, {"name": "destination_folder_id", "description": "The ID of the destination folder.", "required": true, "type": "string"}]}, {"method_name": "get_email_by_id", "description": "Get the details of a specific email.", "parameters": [{"name": "email_id", "description": "The ID of the email to retrieve.", "required": true, "type": "string"}]}, {"method_name": "list_folders", "description": "List folders in the user's mailbox.", "parameters": [{"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "subscribe_notifications", "description": "Subscribe to notifications for new messages in a specific folder.", "parameters": [{"name": "email_folder", "description": "The folder to subscribe to - this should be the real name, not ID.", "required": true, "type": "string"}, {"name": "webhook_url", "description": "The URL to receive notifications.", "required": true, "type": "string"}, {"name": "expiration_date", "description": "The expiration date of the subscription. Format 'YYYY-MM-DDTHH:MM'. Timezone is UTC.", "required": true, "type": "string"}, {"name": "account", "description": "The user account (a email address)", "required": true, "type": "string"}]}, {"method_name": "delete_all_subscriptions", "description": "Delete all existing subscriptions.", "parameters": []}, {"method_name": "delete_subscription", "description": "Delete one subscription", "parameters": [{"name": "subscription_id", "description": "The ID of the subscription to delete.", "required": true, "type": "string"}]}, {"method_name": "get_subscriptions", "description": "Get a list of all active subscriptions.", "parameters": []}, {"method_name": "get_folder", "description": "Get the folder details by name.", "parameters": [{"name": "folder_to_search", "description": "The name or ID of the folder to retrieve.", "required": true, "type": "string"}, {"name": "account", "description": "The email account. By default \"me\"", "required": true, "type": "string"}]}]}, {"description": "Actions for Microsoft 365 Outlook emails.", "version": "1.0.2", "methods": [{"method_name": "list_emails", "description": "List emails in the user's mailbox matching search query.\nWhen searching emails in a specific folder, the folder name should be provided in the 'folder_to_search' parameter and NOT in the 'search_query'.\n\nUse action 'filter_by_recipients' if there are any conditions related to recipients ('to', 'cc', 'bcc' or 'from').\n\nFor any date comparison use:\n    - consider Monday as beginning of the week\n    - date in ISO 8601 format (e.g., '2024-08-24')\n    - use boolean operators (e.g., 'AND', 'OR', 'NOT'). These operators must be in uppercase.\n    - comparison operators 'ge', 'le', 'eq', 'ne' (e.g., 'receivedDateTime ge 2024-08-24')", "parameters": [{"name": "search_query", "description": "query to search for emails. Keep spaces in folder names if user gives spaces.", "required": true, "type": "string"}, {"name": "folder_to_search", "description": "The folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "properties_to_return", "description": "The properties to return in the response. Default is all properties. Comma separated list of properties, like 'subject,body,toRecipients'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "filter_by_recipients", "description": "Filter list of emails objects by recipients.", "parameters": [{"name": "search_query", "description": "Query to search for emails. Default is '*'.", "required": false, "type": "string"}, {"name": "from_", "description": "Email address of the sender to filter by.", "required": false, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to filter by.", "required": false, "type": "string"}, {"name": "cc_recipients", "description": "Comma separated list of email addresses of the cc recipients to filter by.", "required": false, "type": "string"}, {"name": "bcc_recipients", "description": "Comma separated list of email addresses of the bcc recipients to filter by.", "required": false, "type": "string"}, {"name": "folder_to_search", "description": "Folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "create_draft", "description": "Create a draft email in the user's mailbox.", "parameters": [{"name": "email", "description": "The email content to create a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "update_draft", "description": "Update a draft email in the user's mailbox.", "parameters": [{"name": "email_id", "description": "The ID of the draft email to update.", "required": true, "type": "string"}, {"name": "email", "description": "The email content to update a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "add_attachment", "description": "Add an attachment to an email.\nIf possible pass attachment as local file absolute filepath, or\npass the content_bytes directly.\n\nThe attachment", "parameters": [{"name": "email_id", "description": "The ID of the email to add the attachment to.", "required": true, "type": "string"}, {"name": "attachment", "description": "The attachment to add.", "required": true, "type": "object"}]}, {"method_name": "send_email", "description": "Send a new email.", "parameters": [{"name": "email", "description": "The email content to send.", "required": true, "type": "object"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send a draft message.", "parameters": [{"name": "email_id", "description": "The ID of the draft email to send.", "required": true, "type": "string"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}]}, {"method_name": "reply_to_email", "description": "Reply to an existing message.", "parameters": [{"name": "email_id", "description": "The ID of the email to reply to.", "required": true, "type": "string"}, {"name": "reply", "description": "The reply email properties that needs to be appended, set or deleted. Do not modify the body of the email.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}, {"name": "reply_to_all", "description": "Whether to reply to all recipients.", "required": false, "type": "boolean"}]}, {"method_name": "forward_email", "description": "Forward an existing message.", "parameters": [{"name": "email_id", "description": "The ID of the email to forward.", "required": true, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to forward the message to.", "required": true, "type": "string"}, {"name": "comment", "description": "A comment to include.", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Move a message to a different folder.", "parameters": [{"name": "email_id", "description": "The ID of the email to move.", "required": true, "type": "string"}, {"name": "destination_folder_id", "description": "The ID of the destination folder.", "required": true, "type": "string"}]}, {"method_name": "get_email_by_id", "description": "Get the details of a specific email.", "parameters": [{"name": "email_id", "description": "The ID of the email to retrieve.", "required": true, "type": "string"}]}, {"method_name": "list_folders", "description": "List folders in the user's mailbox.", "parameters": [{"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "subscribe_notifications", "description": "Subscribe to notifications for new messages in a specific folder.\nExpiration date can be at maximum 72 hours to the future. Set that if user does not give specific date.", "parameters": [{"name": "email_folder", "description": "The folder to subscribe to - this should be the real name, not ID.", "required": true, "type": "string"}, {"name": "webhook_url", "description": "The URL to receive notifications.", "required": true, "type": "string"}, {"name": "expiration_date", "description": "The expiration date of the subscription. Format 'YYYY-MM-DDTHH:MM'. Timezone is UTC.", "required": true, "type": "string"}, {"name": "account", "description": "The user account (a email address)", "required": true, "type": "string"}]}, {"method_name": "delete_all_subscriptions", "description": "Delete all existing subscriptions.", "parameters": []}, {"method_name": "delete_subscription", "description": "Delete one subscription", "parameters": [{"name": "subscription_id", "description": "The ID of the subscription to delete.", "required": true, "type": "string"}]}, {"method_name": "get_subscriptions", "description": "Get a list of all active subscriptions.", "parameters": []}, {"method_name": "get_folder", "description": "Get the folder details by name.", "parameters": [{"name": "folder_to_search", "description": "The name or ID of the folder to retrieve.", "required": true, "type": "string"}, {"name": "account", "description": "The email account. By default \"me\"", "required": true, "type": "string"}]}]}, {"description": "Actions for Microsoft 365 Outlook emails.", "version": "1.0.3", "methods": [{"method_name": "list_emails", "description": "List emails in the user's mailbox matching search query.\nWhen searching emails in a specific folder, the folder name should be provided in the 'folder_to_search' parameter and NOT in the 'search_query'.\n\nUse action 'filter_by_recipients' if there are any conditions related to recipients ('to', 'cc', 'bcc' or 'from').\n\nFor any date comparison use:\n    - consider Monday as beginning of the week\n    - date in ISO 8601 format (e.g., '2024-08-24')\n    - use boolean operators (e.g., 'AND', 'OR', 'NOT'). These operators must be in uppercase.\n    - comparison operators 'ge', 'le', 'eq', 'ne' (e.g., 'receivedDateTime ge 2024-08-24')", "parameters": [{"name": "search_query", "description": "query to search for emails. Keep spaces in folder names if user gives spaces.", "required": true, "type": "string"}, {"name": "folder_to_search", "description": "The folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "properties_to_return", "description": "The properties to return in the response. Default is all properties. Comma separated list of properties, like 'subject,body,toRecipients'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "filter_by_recipients", "description": "Filter list of emails objects by recipients.", "parameters": [{"name": "search_query", "description": "Query to search for emails. Default is '*'.", "required": false, "type": "string"}, {"name": "from_", "description": "Email address of the sender to filter by.", "required": false, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to filter by.", "required": false, "type": "string"}, {"name": "cc_recipients", "description": "Comma separated list of email addresses of the cc recipients to filter by.", "required": false, "type": "string"}, {"name": "bcc_recipients", "description": "Comma separated list of email addresses of the bcc recipients to filter by.", "required": false, "type": "string"}, {"name": "folder_to_search", "description": "Folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "create_draft", "description": "Create a draft email in the user's mailbox.", "parameters": [{"name": "email", "description": "The email content to create a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "update_draft", "description": "Update a draft email in the user's mailbox.", "parameters": [{"name": "email_id", "description": "The ID of the draft email to update.", "required": true, "type": "string"}, {"name": "email", "description": "The email content to update a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "add_attachment", "description": "Add an attachment to an email.\nIf possible pass attachment as local file absolute filepath, or\npass the content_bytes directly.\n\nThe attachment", "parameters": [{"name": "email_id", "description": "The ID of the email to add the attachment to.", "required": true, "type": "string"}, {"name": "attachment", "description": "The attachment to add.", "required": true, "type": "object"}]}, {"method_name": "send_email", "description": "Send a new email.", "parameters": [{"name": "email", "description": "The email content to send.", "required": true, "type": "object"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send a draft message.", "parameters": [{"name": "email_id", "description": "The ID of the draft email to send.", "required": true, "type": "string"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}]}, {"method_name": "reply_to_email", "description": "Reply to an existing message.", "parameters": [{"name": "email_id", "description": "The ID of the email to reply to.", "required": true, "type": "string"}, {"name": "reply", "description": "The reply email properties that needs to be appended, set or deleted. Do not modify the body of the email.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}, {"name": "reply_to_all", "description": "Whether to reply to all recipients.", "required": false, "type": "boolean"}]}, {"method_name": "forward_email", "description": "Forward an existing message.", "parameters": [{"name": "email_id", "description": "The ID of the email to forward.", "required": true, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to forward the message to.", "required": true, "type": "string"}, {"name": "comment", "description": "A comment to include.", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Move a message to a different folder.", "parameters": [{"name": "email_id", "description": "The ID of the email to move.", "required": true, "type": "string"}, {"name": "destination_folder_id", "description": "The ID of the destination folder.", "required": true, "type": "string"}]}, {"method_name": "get_email_by_id", "description": "Get the details of a specific email.\nBy default shows email's body preview. If you want to see the full body,\nset 'show_full_body' to True.\n\nThe full 'body' of the email might return too much information for the chat to handle.", "parameters": [{"name": "email_id", "description": "The ID of the email to retrieve.", "required": true, "type": "string"}, {"name": "show_full_body", "description": "Whether to show the full body content.", "required": false, "type": "boolean"}]}, {"method_name": "list_folders", "description": "List folders in the user's mailbox.", "parameters": [{"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "subscribe_notifications", "description": "Subscribe to notifications for new messages in a specific folder.\nExpiration date can be at maximum 72 hours to the future. Set that if user does not give specific date.", "parameters": [{"name": "email_folder", "description": "The folder to subscribe to - this should be the real name, not ID.", "required": true, "type": "string"}, {"name": "webhook_url", "description": "The URL to receive notifications.", "required": true, "type": "string"}, {"name": "expiration_date", "description": "The expiration date of the subscription. Format 'YYYY-MM-DDTHH:MM'. Timezone is UTC.", "required": true, "type": "string"}, {"name": "account", "description": "The user account (a email address)", "required": true, "type": "string"}]}, {"method_name": "delete_all_subscriptions", "description": "Delete all existing subscriptions.", "parameters": []}, {"method_name": "delete_subscription", "description": "Delete one subscription", "parameters": [{"name": "subscription_id", "description": "The ID of the subscription to delete.", "required": true, "type": "string"}]}, {"method_name": "get_subscriptions", "description": "Get a list of all active subscriptions.", "parameters": []}, {"method_name": "get_folder", "description": "Get the folder details by name.", "parameters": [{"name": "folder_to_search", "description": "The name or ID of the folder to retrieve.", "required": true, "type": "string"}, {"name": "account", "description": "The email account. By default \"me\"", "required": true, "type": "string"}]}]}, {"description": "Actions for Microsoft 365 Outlook emails.", "version": "1.0.4", "methods": [{"method_name": "list_emails", "description": "List emails in the user's mailbox matching search query.\nWhen searching emails in a specific folder, the folder name should be provided in the 'folder_to_search' parameter and NOT in the 'search_query'.\n\nUse action 'filter_by_recipients' if there are any conditions related to recipients ('to', 'cc', 'bcc' or 'from').\n\nFor any date comparison use:\n    - consider Monday as beginning of the week\n    - date in ISO 8601 format (e.g., '2024-08-24')\n    - use boolean operators (e.g., 'AND', 'OR', 'NOT'). These operators must be in uppercase.\n    - comparison operators 'ge', 'le', 'eq', 'ne' (e.g., 'receivedDateTime ge 2024-08-24')", "parameters": [{"name": "search_query", "description": "query to search for emails. Keep spaces in folder names if user gives spaces.", "required": true, "type": "string"}, {"name": "folder_to_search", "description": "The folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "properties_to_return", "description": "The properties to return in the response. Default is all properties. Comma separated list of properties, like 'subject,body,toRecipients'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "filter_by_recipients", "description": "Filter list of emails objects by recipients.", "parameters": [{"name": "search_query", "description": "Query to search for emails. Default is '*'.", "required": false, "type": "string"}, {"name": "from_", "description": "Email address of the sender to filter by.", "required": false, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to filter by.", "required": false, "type": "string"}, {"name": "cc_recipients", "description": "Comma separated list of email addresses of the cc recipients to filter by.", "required": false, "type": "string"}, {"name": "bcc_recipients", "description": "Comma separated list of email addresses of the bcc recipients to filter by.", "required": false, "type": "string"}, {"name": "folder_to_search", "description": "Folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "create_draft", "description": "Create a draft email in the user's mailbox.", "parameters": [{"name": "email", "description": "The email content to create a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "update_draft", "description": "Update a draft email in the user's mailbox.", "parameters": [{"name": "email_id", "description": "The ID of the draft email to update.", "required": true, "type": "string"}, {"name": "email", "description": "The email content to update a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "add_attachment", "description": "Add an attachment to an email.\nIf possible pass attachment as local file absolute filepath, or\npass the content_bytes directly.\n\nThe attachment", "parameters": [{"name": "email_id", "description": "The ID of the email to add the attachment to.", "required": true, "type": "string"}, {"name": "attachment", "description": "The attachment to add.", "required": true, "type": "object"}]}, {"method_name": "send_email", "description": "Send a new email.", "parameters": [{"name": "email", "description": "The email content to send.", "required": true, "type": "object"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send a draft message.", "parameters": [{"name": "email_id", "description": "The ID of the draft email to send.", "required": true, "type": "string"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}]}, {"method_name": "reply_to_email", "description": "Reply to an existing message.", "parameters": [{"name": "email_id", "description": "The ID of the email to reply to.", "required": true, "type": "string"}, {"name": "reply", "description": "The reply email properties that needs to be appended, set or deleted. Do not modify the body of the email.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}, {"name": "reply_to_all", "description": "Whether to reply to all recipients.", "required": false, "type": "boolean"}]}, {"method_name": "forward_email", "description": "Forward an existing message.", "parameters": [{"name": "email_id", "description": "The ID of the email to forward.", "required": true, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to forward the message to.", "required": true, "type": "string"}, {"name": "comment", "description": "A comment to include.", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Move a message to a different folder.", "parameters": [{"name": "email_id", "description": "The ID of the email to move.", "required": true, "type": "string"}, {"name": "destination_folder_id", "description": "The ID of the destination folder.", "required": true, "type": "string"}]}, {"method_name": "get_email_by_id", "description": "Get the details of a specific email.\nBy default shows email's body preview. If you want to see the full body,\nset 'show_full_body' to True.\n\nThe full 'body' of the email might return too much information for the chat to handle.", "parameters": [{"name": "email_id", "description": "The ID of the email to retrieve.", "required": true, "type": "string"}, {"name": "show_full_body", "description": "Whether to show the full body content.", "required": false, "type": "boolean"}]}, {"method_name": "list_folders", "description": "List folders in the user's mailbox.", "parameters": [{"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "subscribe_notifications", "description": "Subscribe to notifications for new messages in a specific folder.\nExpiration date can be at maximum 72 hours to the future. Set that if user does not give specific date.", "parameters": [{"name": "email_folder", "description": "The folder to subscribe to - this should be the real name, not ID.", "required": true, "type": "string"}, {"name": "webhook_url", "description": "The URL to receive notifications.", "required": true, "type": "string"}, {"name": "expiration_date", "description": "The expiration date of the subscription. Format 'YYYY-MM-DDTHH:MM'. Timezone is UTC.", "required": true, "type": "string"}, {"name": "account", "description": "The user account (a email address)", "required": false, "type": "string"}]}, {"method_name": "delete_all_subscriptions", "description": "Delete all existing subscriptions.", "parameters": []}, {"method_name": "delete_subscription", "description": "Delete one subscription", "parameters": [{"name": "subscription_id", "description": "The ID of the subscription to delete.", "required": true, "type": "string"}]}, {"method_name": "get_subscriptions", "description": "Get a list of all active subscriptions.", "parameters": []}, {"method_name": "get_folder", "description": "Get the folder details by name.", "parameters": [{"name": "folder_to_search", "description": "The name or ID of the folder to retrieve.", "required": true, "type": "string"}, {"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}]}, {"description": "Actions for Microsoft 365 Outlook emails.", "version": "1.1.0", "methods": [{"method_name": "list_emails", "description": "List emails in the user's mailbox matching search query.\nWhen searching emails in a specific folder, the folder name should be provided in the 'folder_to_search' parameter and NOT in the 'search_query'.\n\nUse action 'filter_by_recipients' if there are any conditions related to recipients ('to', 'cc', 'bcc' or 'from').\n\nFor any date comparison use:\n    - consider Monday as beginning of the week\n    - date in ISO 8601 format (e.g., '2024-08-24')\n    - use boolean operators (e.g., 'AND', 'OR', 'NOT'). These operators must be in uppercase.\n    - comparison operators 'ge', 'le', 'eq', 'ne' (e.g., 'receivedDateTime ge 2024-08-24')", "parameters": [{"name": "search_query", "description": "query to search for emails. Keep spaces in folder names if user gives spaces.", "required": true, "type": "string"}, {"name": "folder_to_search", "description": "The folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "properties_to_return", "description": "The properties to return in the response. Default is all properties. Comma separated list of properties, like 'idsubject,body,toRecipients'.", "required": false, "type": "string"}, {"name": "max_emails_to_return", "description": "Maximum number of emails to return. Default is -1 (return all emails).", "required": false, "type": "integer"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "filter_by_recipients", "description": "Filter list of emails objects by recipients.", "parameters": [{"name": "search_query", "description": "Query to search for emails. Default is '*'.", "required": false, "type": "string"}, {"name": "from_", "description": "Email address of the sender to filter by.", "required": false, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to filter by.", "required": false, "type": "string"}, {"name": "cc_recipients", "description": "Comma separated list of email addresses of the cc recipients to filter by.", "required": false, "type": "string"}, {"name": "bcc_recipients", "description": "Comma separated list of email addresses of the bcc recipients to filter by.", "required": false, "type": "string"}, {"name": "folder_to_search", "description": "Folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "create_draft", "description": "Create a draft email in the user's mailbox.", "parameters": [{"name": "email", "description": "The email content to create a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "update_draft", "description": "Update a draft email in the user's mailbox.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to update.", "required": true, "type": "string"}, {"name": "email", "description": "The email content to update a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "add_attachment", "description": "Add an attachment to an email.\nIf possible pass attachment as local file absolute filepath, or\npass the content_bytes directly.\n\nThe attachment", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to add the attachment to.", "required": true, "type": "string"}, {"name": "attachment", "description": "The attachment to add.", "required": true, "type": "object"}]}, {"method_name": "send_email", "description": "Send a new email.", "parameters": [{"name": "email", "description": "The email content to send.", "required": true, "type": "object"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send a draft message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to send.", "required": true, "type": "string"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}]}, {"method_name": "reply_to_email", "description": "Reply to an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to reply to.", "required": true, "type": "string"}, {"name": "reply", "description": "The reply email properties that needs to be appended, set or deleted. Do not modify the body of the email.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}, {"name": "reply_to_all", "description": "Whether to reply to all recipients.", "required": false, "type": "boolean"}]}, {"method_name": "forward_email", "description": "Forward an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to forward.", "required": true, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to forward the message to.", "required": true, "type": "string"}, {"name": "comment", "description": "A comment to include.", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Move a message to a different folder.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to move.", "required": true, "type": "string"}, {"name": "destination_folder_id", "description": "The ID of the destination folder.", "required": true, "type": "string"}]}, {"method_name": "get_email_by_id", "description": "Get the details of a specific email.\nBy default shows email's body preview. If you want to see the full body,\nset 'show_full_body' to True.\n\nThe full 'body' of the email might return too much information for the chat to handle.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to retrieve.", "required": true, "type": "string"}, {"name": "show_full_body", "description": "Whether to show the full body content.", "required": false, "type": "boolean"}]}, {"method_name": "list_folders", "description": "List folders in the user's mailbox.", "parameters": [{"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "subscribe_notifications", "description": "Subscribe to notifications for new messages in a specific folder.\nExpiration date can be at maximum 72 hours to the future. Set that if user does not give specific date.", "parameters": [{"name": "email_folder", "description": "The folder to subscribe to - this should be the real name, not ID.", "required": true, "type": "string"}, {"name": "webhook_url", "description": "The URL to receive notifications.", "required": true, "type": "string"}, {"name": "expiration_date", "description": "The expiration date of the subscription. Format 'YYYY-MM-DDTHH:MM'. Timezone is UTC.", "required": true, "type": "string"}, {"name": "account", "description": "The user account (a email address)", "required": false, "type": "string"}]}, {"method_name": "delete_all_subscriptions", "description": "Delete all existing subscriptions.", "parameters": []}, {"method_name": "delete_subscription", "description": "Delete one subscription", "parameters": [{"name": "subscription_id", "description": "The ID of the subscription to delete.", "required": true, "type": "string"}]}, {"method_name": "get_subscriptions", "description": "Get a list of all active subscriptions.", "parameters": []}, {"method_name": "get_folder", "description": "Get the folder details by name.", "parameters": [{"name": "folder_to_search", "description": "The name or ID of the folder to retrieve.", "required": true, "type": "string"}, {"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "flag_email", "description": "Flag email by setting the flag status.\nPossible flag statuses are:\n- 'notFlagged'\n- 'flagged'\n- 'complete'", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to flag.", "required": true, "type": "string"}, {"name": "flag", "description": "The flag status to set.", "required": true, "type": "object"}]}]}, {"description": "Actions for Microsoft 365 Outlook emails.", "version": "1.1.1", "methods": [{"method_name": "list_emails", "description": "List emails in the user's mailbox matching search query.\nWhen searching emails in a specific folder, the folder name should be provided in the 'folder_to_search' parameter and NOT in the 'search_query'.\n\nUse action 'filter_by_recipients' if there are any conditions related to recipients ('to', 'cc', 'bcc' or 'from').\n\nFor any date comparison use:\n    - consider Monday as beginning of the week\n    - date in ISO 8601 format (e.g., '2024-08-24')\n    - use boolean operators (e.g., 'AND', 'OR', 'NOT'). These operators must be in uppercase.\n    - comparison operators 'ge', 'le', 'eq', 'ne' (e.g., 'receivedDateTime ge 2024-08-24')", "parameters": [{"name": "search_query", "description": "query to search for emails. Keep spaces in folder names if user gives spaces.", "required": true, "type": "string"}, {"name": "folder_to_search", "description": "The folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "properties_to_return", "description": "The properties to return in the response. Default is all properties. Comma separated list of properties, like 'idsubject,body,toRecipients'.", "required": false, "type": "string"}, {"name": "max_emails_to_return", "description": "Maximum number of emails to return. Default is -1 (return all emails).", "required": false, "type": "integer"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "filter_by_recipients", "description": "Filter list of emails objects by recipients.", "parameters": [{"name": "search_query", "description": "Query to search for emails. Default is '*'.", "required": false, "type": "string"}, {"name": "from_", "description": "Email address of the sender to filter by.", "required": false, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to filter by.", "required": false, "type": "string"}, {"name": "cc_recipients", "description": "Comma separated list of email addresses of the cc recipients to filter by.", "required": false, "type": "string"}, {"name": "bcc_recipients", "description": "Comma separated list of email addresses of the bcc recipients to filter by.", "required": false, "type": "string"}, {"name": "folder_to_search", "description": "Folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "create_draft", "description": "Create a draft email in the user's mailbox.", "parameters": [{"name": "email", "description": "The email content to create a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "update_draft", "description": "Update a draft email in the user's mailbox.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to update.", "required": true, "type": "string"}, {"name": "email", "description": "The email content to update a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "add_attachment", "description": "Add an attachment to an email.\nIf possible pass attachment as local file absolute filepath, or\npass the content_bytes directly.\n\nThe attachment", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to add the attachment to.", "required": true, "type": "string"}, {"name": "attachment", "description": "The attachment to add.", "required": true, "type": "object"}]}, {"method_name": "send_email", "description": "Send a new email.", "parameters": [{"name": "email", "description": "The email content to send.", "required": true, "type": "object"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send a draft message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to send.", "required": true, "type": "string"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}]}, {"method_name": "reply_to_email", "description": "Reply to an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to reply to.", "required": true, "type": "string"}, {"name": "reply", "description": "The reply email properties that needs to be appended, set or deleted. Do not modify the body of the email.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}, {"name": "reply_to_all", "description": "Whether to reply to all recipients.", "required": false, "type": "boolean"}]}, {"method_name": "forward_email", "description": "Forward an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to forward.", "required": true, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to forward the message to.", "required": true, "type": "string"}, {"name": "comment", "description": "A comment to include.", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Move a message to a different folder.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to move.", "required": true, "type": "string"}, {"name": "destination_folder_id", "description": "The ID of the destination folder.", "required": true, "type": "string"}]}, {"method_name": "get_email_by_id", "description": "Get the details of a specific email.\nBy default shows email's body preview. If you want to see the full body,\nset 'show_full_body' to True.\n\nThe full 'body' of the email might return too much information for the chat to handle.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to retrieve.", "required": true, "type": "string"}, {"name": "show_full_body", "description": "Whether to show the full body content.", "required": false, "type": "boolean"}]}, {"method_name": "list_folders", "description": "List folders in the user's mailbox.", "parameters": [{"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "subscribe_notifications", "description": "Subscribe to notifications for new messages in a specific folder.\nExpiration date can be at maximum 72 hours to the future. Set that if user does not give specific date.", "parameters": [{"name": "email_folder", "description": "The folder to subscribe to - this should be the real name, not ID.", "required": true, "type": "string"}, {"name": "webhook_url", "description": "The URL to receive notifications.", "required": true, "type": "string"}, {"name": "expiration_date", "description": "The expiration date of the subscription. Format 'YYYY-MM-DDTHH:MM'. Timezone is UTC.", "required": true, "type": "string"}, {"name": "account", "description": "The user account (a email address)", "required": false, "type": "string"}]}, {"method_name": "delete_all_subscriptions", "description": "Delete all existing subscriptions.", "parameters": []}, {"method_name": "delete_subscription", "description": "Delete one subscription", "parameters": [{"name": "subscription_id", "description": "The ID of the subscription to delete.", "required": true, "type": "string"}]}, {"method_name": "get_subscriptions", "description": "Get a list of all active subscriptions.", "parameters": []}, {"method_name": "get_folder", "description": "Get the folder details by name.", "parameters": [{"name": "folder_to_search", "description": "The name or ID of the folder to retrieve.", "required": true, "type": "string"}, {"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "flag_email", "description": "Flag email by setting the flag status.\nPossible flag statuses are:\n- 'notFlagged'\n- 'flagged'\n- 'complete'", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to flag.", "required": true, "type": "string"}, {"name": "flag", "description": "The flag status to set.", "required": true, "type": "object"}]}]}, {"description": "Actions for Microsoft 365 Outlook emails.", "version": "1.2.0", "methods": [{"method_name": "list_emails", "description": "List emails in the user's mailbox matching search query.\nWhen searching emails in a specific folder, the folder name should be provided in the 'folder_to_search' parameter and NOT in the 'search_query'.\n\nUse action 'filter_by_recipients' if there are any conditions related to recipients ('to', 'cc', 'bcc' or 'from').\n\nFor any date comparison use:\n    - consider Monday as beginning of the week\n    - date in ISO 8601 format (e.g., '2024-08-24')\n    - use boolean operators (e.g., 'AND', 'OR', 'NOT'). These operators must be in uppercase.\n    - comparison operators 'ge', 'le', 'eq', 'ne' (e.g., 'receivedDateTime ge 2024-08-24')", "parameters": [{"name": "search_query", "description": "query to search for emails. Keep spaces in folder names if user gives spaces.", "required": true, "type": "string"}, {"name": "folder_to_search", "description": "The folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "properties_to_return", "description": "The properties to return in the response. Default is all properties. Comma separated list of properties, like 'idsubject,body,toRecipients'.", "required": false, "type": "string"}, {"name": "max_emails_to_return", "description": "Maximum number of emails to return. Default is -1 (return all emails).", "required": false, "type": "integer"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "filter_by_recipients", "description": "Filter list of emails objects by recipients.", "parameters": [{"name": "search_query", "description": "Query to search for emails. Default is '*'.", "required": false, "type": "string"}, {"name": "from_", "description": "Email address of the sender to filter by.", "required": false, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to filter by.", "required": false, "type": "string"}, {"name": "cc_recipients", "description": "Comma separated list of email addresses of the cc recipients to filter by.", "required": false, "type": "string"}, {"name": "bcc_recipients", "description": "Comma separated list of email addresses of the bcc recipients to filter by.", "required": false, "type": "string"}, {"name": "folder_to_search", "description": "Folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "create_draft", "description": "Create a draft email in the user's mailbox.", "parameters": [{"name": "email", "description": "The email content to create a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "update_draft", "description": "Update a draft email in the user's mailbox.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to update.", "required": true, "type": "string"}, {"name": "email", "description": "The email content to update a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "add_attachment", "description": "Add an attachment to an email.\nIf possible pass attachment as local file absolute filepath, or\npass the content_bytes directly.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to add the attachment to.", "required": true, "type": "string"}, {"name": "attachment", "description": "The attachment to add.", "required": true, "type": "object"}]}, {"method_name": "send_email", "description": "Send a new email.", "parameters": [{"name": "email", "description": "The email content to send.", "required": true, "type": "object"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send a draft message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to send.", "required": true, "type": "string"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}]}, {"method_name": "reply_to_email", "description": "Reply to an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to reply to.", "required": true, "type": "string"}, {"name": "reply", "description": "The reply email properties that needs to be appended, set or deleted. Do not modify the body of the email.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}, {"name": "reply_to_all", "description": "Whether to reply to all recipients.", "required": false, "type": "boolean"}]}, {"method_name": "forward_email", "description": "Forward an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to forward.", "required": true, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to forward the message to.", "required": true, "type": "string"}, {"name": "comment", "description": "A comment to include.", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Move a message to a different folder.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to move.", "required": true, "type": "string"}, {"name": "destination_folder_id", "description": "The ID of the destination folder.", "required": true, "type": "string"}]}, {"method_name": "get_email_by_id", "description": "Get the details of a specific email and save attachments to the local file system.\nBy default shows email's body preview. If you want to see the full body,\nset 'show_full_body' to True.\n\nThe full 'body' of the email might return too much information for the chat to handle.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to retrieve.", "required": true, "type": "string"}, {"name": "show_full_body", "description": "Whether to show the full body content.", "required": false, "type": "boolean"}, {"name": "save_attachments", "description": "Whether to save the attachments to the local file system.", "required": false, "type": "string"}, {"name": "make_dirs", "description": "Whether to create the directory for saving attachments if it doesn't exist.", "required": false, "type": "boolean"}]}, {"method_name": "list_folders", "description": "List folders in the user's mailbox.", "parameters": [{"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "subscribe_notifications", "description": "Subscribe to notifications for new messages in a specific folder.\nExpiration date can be at maximum 72 hours to the future. Set that if user does not give specific date.", "parameters": [{"name": "email_folder", "description": "The folder to subscribe to - this should be the real name, not ID.", "required": true, "type": "string"}, {"name": "webhook_url", "description": "The URL to receive notifications.", "required": true, "type": "string"}, {"name": "expiration_date", "description": "The expiration date of the subscription. Format 'YYYY-MM-DDTHH:MM'. Timezone is UTC.", "required": true, "type": "string"}, {"name": "account", "description": "The user account (a email address)", "required": false, "type": "string"}]}, {"method_name": "delete_all_subscriptions", "description": "Delete all existing subscriptions.", "parameters": []}, {"method_name": "delete_subscription", "description": "Delete one subscription", "parameters": [{"name": "subscription_id", "description": "The ID of the subscription to delete.", "required": true, "type": "string"}]}, {"method_name": "get_subscriptions", "description": "Get a list of all active subscriptions.", "parameters": []}, {"method_name": "get_folder", "description": "Get the folder details by name.", "parameters": [{"name": "folder_to_search", "description": "The name or ID of the folder to retrieve.", "required": true, "type": "string"}, {"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "flag_email", "description": "Flag email by setting the flag status.\nPossible flag statuses are:\n- 'notFlagged'\n- 'flagged'\n- 'complete'", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to flag.", "required": true, "type": "string"}, {"name": "flag", "description": "The flag status to set.", "required": true, "type": "object"}]}]}, {"description": "Actions for Microsoft 365 Outlook emails.", "version": "1.2.1", "methods": [{"method_name": "list_emails", "description": "List emails in the user's mailbox matching search query.\nWhen searching emails in a specific folder, the folder name should be provided in the 'folder_to_search' parameter and NOT in the 'search_query'.\n\nUse action 'filter_by_recipients' if there are any conditions related to recipients ('to', 'cc', 'bcc' or 'from').\n\nFor any date comparison use:\n    - consider Monday as beginning of the week\n    - date in ISO 8601 format (e.g., '2024-08-24')\n    - use boolean operators (e.g., 'AND', 'OR', 'NOT'). These operators must be in uppercase.\n    - comparison operators 'ge', 'le', 'eq', 'ne' (e.g., 'receivedDateTime ge 2024-08-24')", "parameters": [{"name": "search_query", "description": "query to search for emails. Keep spaces in folder names if user gives spaces.", "required": true, "type": "string"}, {"name": "folder_to_search", "description": "The folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "properties_to_return", "description": "The properties to return in the response. Default is all properties. Comma separated list of properties, like 'idsubject,body,toRecipients'.", "required": false, "type": "string"}, {"name": "max_emails_to_return", "description": "Maximum number of emails to return. Default is -1 (return all emails).", "required": false, "type": "integer"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "filter_by_recipients", "description": "Filter list of emails objects by recipients.", "parameters": [{"name": "search_query", "description": "Query to search for emails. Default is '*'.", "required": false, "type": "string"}, {"name": "from_", "description": "Email address of the sender to filter by.", "required": false, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to filter by.", "required": false, "type": "string"}, {"name": "cc_recipients", "description": "Comma separated list of email addresses of the cc recipients to filter by.", "required": false, "type": "string"}, {"name": "bcc_recipients", "description": "Comma separated list of email addresses of the bcc recipients to filter by.", "required": false, "type": "string"}, {"name": "folder_to_search", "description": "Folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "create_draft", "description": "Create a draft email in the user's mailbox.", "parameters": [{"name": "email", "description": "The email content to create a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "update_draft", "description": "Update a draft email in the user's mailbox.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to update.", "required": true, "type": "string"}, {"name": "email", "description": "The email content to update a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "add_attachment", "description": "Add an attachment to an email.\nIf possible pass attachment as local file absolute filepath, or\npass the content_bytes directly.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to add the attachment to.", "required": true, "type": "string"}, {"name": "attachment", "description": "The attachment to add.", "required": true, "type": "object"}]}, {"method_name": "send_email", "description": "Send a new email.", "parameters": [{"name": "email", "description": "The email content to send.", "required": true, "type": "object"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send a draft message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to send.", "required": true, "type": "string"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}]}, {"method_name": "reply_to_email", "description": "Reply to an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to reply to.", "required": true, "type": "string"}, {"name": "reply", "description": "The reply email properties that needs to be appended, set or deleted. Do not modify the body of the email.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}, {"name": "reply_to_all", "description": "Whether to reply to all recipients.", "required": false, "type": "boolean"}]}, {"method_name": "forward_email", "description": "Forward an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to forward.", "required": true, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to forward the message to.", "required": true, "type": "string"}, {"name": "comment", "description": "A comment to include.", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Move a message to a different folder.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to move.", "required": true, "type": "string"}, {"name": "destination_folder_id", "description": "The ID of the destination folder.", "required": true, "type": "string"}]}, {"method_name": "get_email_by_id", "description": "Get the details of a specific email and save attachments to the local file system.\nBy default shows email's body preview. If you want to see the full body,\nset 'show_full_body' to True.\n\nThe full 'body' of the email might return too much information for the chat to handle.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to retrieve.", "required": true, "type": "string"}, {"name": "show_full_body", "description": "Whether to show the full body content.", "required": false, "type": "boolean"}, {"name": "save_attachments", "description": "Whether to save the attachments to the local file system.", "required": false, "type": "string"}, {"name": "make_dirs", "description": "Whether to create the directory for saving attachments if it doesn't exist.", "required": false, "type": "boolean"}]}, {"method_name": "list_folders", "description": "List folders in the user's mailbox.", "parameters": [{"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "subscribe_notifications", "description": "Subscribe to notifications for new messages in a specific folder.\nExpiration date can be at maximum 72 hours to the future. Set that if user does not give specific date.", "parameters": [{"name": "email_folder", "description": "The folder to subscribe to - this should be the real name, not ID.", "required": true, "type": "string"}, {"name": "webhook_url", "description": "The URL to receive notifications.", "required": true, "type": "string"}, {"name": "expiration_date", "description": "The expiration date of the subscription. Format 'YYYY-MM-DDTHH:MM'. Timezone is UTC.", "required": true, "type": "string"}, {"name": "account", "description": "The user account (a email address)", "required": false, "type": "string"}]}, {"method_name": "delete_all_subscriptions", "description": "Delete all existing subscriptions.", "parameters": []}, {"method_name": "delete_subscription", "description": "Delete one subscription", "parameters": [{"name": "subscription_id", "description": "The ID of the subscription to delete.", "required": true, "type": "string"}]}, {"method_name": "get_subscriptions", "description": "Get a list of all active subscriptions.", "parameters": []}, {"method_name": "get_folder", "description": "Get the folder details by name.", "parameters": [{"name": "folder_to_search", "description": "The name or ID of the folder to retrieve.", "required": true, "type": "string"}, {"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "flag_email", "description": "Flag email by setting the flag status.\nPossible flag statuses are:\n- 'notFlagged'\n- 'flagged'\n- 'complete'", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to flag.", "required": true, "type": "string"}, {"name": "flag", "description": "The flag status to set.", "required": true, "type": "object"}]}]}, {"description": "Actions for Microsoft 365 Outlook emails.", "version": "1.3.0", "methods": [{"method_name": "list_emails", "description": "List emails in the user's mailbox matching search query.\nWhen searching emails in a specific folder, the folder name should be provided in the 'folder_to_search' parameter and NOT in the 'search_query'.\n\nUse action 'filter_by_recipients' if there are any conditions related to recipients ('to', 'cc', 'bcc' or 'from').\n\nFor any date comparison use:\n    - consider Monday as beginning of the week\n    - date in ISO 8601 format (e.g., '2024-08-24')\n    - use boolean operators (e.g., 'AND', 'OR', 'NOT'). These operators must be in uppercase.\n    - comparison operators 'ge', 'le', 'eq', 'ne' (e.g., 'receivedDateTime ge 2024-08-24')", "parameters": [{"name": "search_query", "description": "query to search for emails. Keep spaces in folder names if user gives spaces.", "required": true, "type": "string"}, {"name": "folder_to_search", "description": "The folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "properties_to_return", "description": "The properties to return in the response. Default is all properties. Comma separated list of properties, like 'idsubject,body,toRecipients'.", "required": false, "type": "string"}, {"name": "max_emails_to_return", "description": "Maximum number of emails to return. Default is -1 (return all emails).", "required": false, "type": "integer"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "filter_by_recipients", "description": "Filter list of emails objects by recipients.", "parameters": [{"name": "search_query", "description": "Query to search for emails. Default is '*'.", "required": false, "type": "string"}, {"name": "from_", "description": "Email address of the sender to filter by.", "required": false, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to filter by.", "required": false, "type": "string"}, {"name": "cc_recipients", "description": "Comma separated list of email addresses of the cc recipients to filter by.", "required": false, "type": "string"}, {"name": "bcc_recipients", "description": "Comma separated list of email addresses of the bcc recipients to filter by.", "required": false, "type": "string"}, {"name": "folder_to_search", "description": "Folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "create_draft", "description": "Create a draft email in the user's mailbox.", "parameters": [{"name": "email", "description": "The email content to create a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "update_draft", "description": "Update a draft email in the user's mailbox.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to update.", "required": true, "type": "string"}, {"name": "email", "description": "The email content to update a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "add_attachment", "description": "Add an attachment to an email.\nIf possible pass attachment as local file absolute filepath, or\npass the content_bytes directly.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to add the attachment to.", "required": true, "type": "string"}, {"name": "attachment", "description": "The attachment to add.", "required": true, "type": "object"}]}, {"method_name": "send_email", "description": "Send a new email.", "parameters": [{"name": "email", "description": "The email content to send.", "required": true, "type": "object"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send a draft message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to send.", "required": true, "type": "string"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}]}, {"method_name": "reply_to_email", "description": "Reply to an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to reply to.", "required": true, "type": "string"}, {"name": "reply", "description": "The reply email properties that needs to be appended, set or deleted. Do not modify the body of the email.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}, {"name": "reply_to_all", "description": "Whether to reply to all recipients.", "required": false, "type": "boolean"}]}, {"method_name": "forward_email", "description": "Forward an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to forward.", "required": true, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to forward the message to.", "required": true, "type": "string"}, {"name": "comment", "description": "A comment to include.", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Move a message to a different folder.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to move.", "required": true, "type": "string"}, {"name": "destination_folder_id", "description": "The ID of the destination folder.", "required": true, "type": "string"}]}, {"method_name": "get_email_by_id", "description": "Get the details of a specific email and save attachments to the local file system.\nBy default shows email's body preview. If you want to see the full body,\nset 'show_full_body' to True.\n\nThe full 'body' of the email might return too much information for the chat to handle.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to retrieve.", "required": true, "type": "string"}, {"name": "show_full_body", "description": "Whether to show the full body content.", "required": false, "type": "boolean"}, {"name": "save_attachments", "description": "Whether to save the attachments to the local file system.", "required": false, "type": "string"}, {"name": "make_dirs", "description": "Whether to create the directory for saving attachments if it doesn't exist.", "required": false, "type": "boolean"}]}, {"method_name": "list_folders", "description": "List folders in the user's mailbox.", "parameters": [{"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "subscribe_notifications", "description": "Subscribe to notifications for new messages in a specific folder.\nExpiration date can be at maximum 72 hours to the future. Set that if user does not give specific date.", "parameters": [{"name": "email_folder", "description": "The folder to subscribe to - this should be the real name, not ID.", "required": true, "type": "string"}, {"name": "webhook_url", "description": "The URL to receive notifications.", "required": true, "type": "string"}, {"name": "expiration_date", "description": "The expiration date of the subscription. Format 'YYYY-MM-DDTHH:MM'. Timezone is UTC.", "required": true, "type": "string"}, {"name": "account", "description": "The user account (a email address)", "required": false, "type": "string"}]}, {"method_name": "delete_all_subscriptions", "description": "Delete all existing subscriptions.", "parameters": []}, {"method_name": "delete_subscription", "description": "Delete one subscription", "parameters": [{"name": "subscription_id", "description": "The ID of the subscription to delete.", "required": true, "type": "string"}]}, {"method_name": "get_subscriptions", "description": "Get a list of all active subscriptions.", "parameters": []}, {"method_name": "get_folder", "description": "Get the folder details by name.", "parameters": [{"name": "folder_to_search", "description": "The name or ID of the folder to retrieve.", "required": true, "type": "string"}, {"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "flag_email", "description": "Flag email by setting the flag status.\nPossible flag statuses are:\n- 'notFlagged'\n- 'flagged'\n- 'complete'", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to flag.", "required": true, "type": "string"}, {"name": "flag", "description": "The flag status to set.", "required": true, "type": "object"}]}]}, {"description": "Actions for Microsoft 365 Outlook emails.", "version": "1.3.1", "methods": [{"method_name": "list_emails", "description": "List emails in the user's mailbox matching search query.\nWhen searching emails in a specific folder, the folder name should be provided in the 'folder_to_search' parameter and NOT in the 'search_query'.\n\nUse action 'filter_by_recipients' if there are any conditions related to recipients ('to', 'cc', 'bcc' or 'from').\n\nFor any date comparison use:\n    - consider Monday as beginning of the week\n    - date in ISO 8601 format (e.g., '2024-08-24')\n    - use boolean operators (e.g., 'AND', 'OR', 'NOT'). These operators must be in uppercase.\n    - comparison operators 'ge', 'le', 'eq', 'ne' (e.g., 'receivedDateTime ge 2024-08-24')", "parameters": [{"name": "search_query", "description": "query to search for emails. Keep spaces in folder names if user gives spaces.", "required": true, "type": "string"}, {"name": "folder_to_search", "description": "The folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "properties_to_return", "description": "The properties to return in the response. Default is all properties. Comma separated list of properties, like 'idsubject,body,toRecipients'.", "required": false, "type": "string"}, {"name": "max_emails_to_return", "description": "Maximum number of emails to return. Default is -1 (return all emails).", "required": false, "type": "integer"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "filter_by_recipients", "description": "Filter list of emails objects by recipients.", "parameters": [{"name": "search_query", "description": "Query to search for emails. Default is '*'.", "required": false, "type": "string"}, {"name": "from_", "description": "Email address of the sender to filter by.", "required": false, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to filter by.", "required": false, "type": "string"}, {"name": "cc_recipients", "description": "Comma separated list of email addresses of the cc recipients to filter by.", "required": false, "type": "string"}, {"name": "bcc_recipients", "description": "Comma separated list of email addresses of the bcc recipients to filter by.", "required": false, "type": "string"}, {"name": "folder_to_search", "description": "Folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "create_draft", "description": "Create a draft email in the user's mailbox.", "parameters": [{"name": "email", "description": "The email content to create a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "update_draft", "description": "Update a draft email in the user's mailbox.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to update.", "required": true, "type": "string"}, {"name": "email", "description": "The email content to update a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "add_attachment", "description": "Add an attachment to an email.\nIf possible pass attachment as local file absolute filepath, or\npass the content_bytes directly.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to add the attachment to.", "required": true, "type": "string"}, {"name": "attachment", "description": "The attachment to add.", "required": true, "type": "object"}]}, {"method_name": "send_email", "description": "Send a new email.", "parameters": [{"name": "email", "description": "The email content to send.", "required": true, "type": "object"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send a draft message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to send.", "required": true, "type": "string"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}]}, {"method_name": "reply_to_email", "description": "Reply to an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to reply to.", "required": true, "type": "string"}, {"name": "reply", "description": "The reply email properties that needs to be appended, set or deleted. Do not modify the body of the email.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}, {"name": "reply_to_all", "description": "Whether to reply to all recipients.", "required": false, "type": "boolean"}]}, {"method_name": "forward_email", "description": "Forward an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to forward.", "required": true, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to forward the message to.", "required": true, "type": "string"}, {"name": "comment", "description": "A comment to include.", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Move a message to a different folder.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to move.", "required": true, "type": "string"}, {"name": "destination_folder_id", "description": "The ID of the destination folder.", "required": true, "type": "string"}]}, {"method_name": "get_email_by_id", "description": "Get the details of a specific email and save attachments to the local file system.\nBy default shows email's body preview. If you want to see the full body,\nset 'show_full_body' to True.\n\nThe full 'body' of the email might return too much information for the chat to handle.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to retrieve.", "required": true, "type": "string"}, {"name": "show_full_body", "description": "Whether to show the full body content.", "required": false, "type": "boolean"}, {"name": "save_attachments", "description": "Whether to save the attachments to the local file system.", "required": false, "type": "string"}, {"name": "make_dirs", "description": "Whether to create the directory for saving attachments if it doesn't exist.", "required": false, "type": "boolean"}]}, {"method_name": "list_folders", "description": "List folders in the user's mailbox.", "parameters": [{"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "subscribe_notifications", "description": "Subscribe to notifications for new messages in a specific folder.\nExpiration date can be at maximum 72 hours to the future. Set that if user does not give specific date.", "parameters": [{"name": "email_folder", "description": "The folder to subscribe to - this should be the real name, not ID.", "required": true, "type": "string"}, {"name": "webhook_url", "description": "The URL to receive notifications.", "required": true, "type": "string"}, {"name": "expiration_date", "description": "The expiration date of the subscription. Format 'YYYY-MM-DDTHH:MM'. Timezone is UTC.", "required": true, "type": "string"}, {"name": "account", "description": "The user account (a email address)", "required": false, "type": "string"}]}, {"method_name": "delete_all_subscriptions", "description": "Delete all existing subscriptions.", "parameters": []}, {"method_name": "delete_subscription", "description": "Delete one subscription", "parameters": [{"name": "subscription_id", "description": "The ID of the subscription to delete.", "required": true, "type": "string"}]}, {"method_name": "get_subscriptions", "description": "Get a list of all active subscriptions.", "parameters": []}, {"method_name": "get_folder", "description": "Get the folder details by name.", "parameters": [{"name": "folder_to_search", "description": "The name or ID of the folder to retrieve.", "required": true, "type": "string"}, {"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "flag_email", "description": "Flag email by setting the flag status.\nPossible flag statuses are:\n- 'notFlagged'\n- 'flagged'\n- 'complete'", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to flag.", "required": true, "type": "string"}, {"name": "flag", "description": "The flag status to set.", "required": true, "type": "object"}]}]}, {"description": "Actions for Microsoft 365 Outlook emails.", "version": "1.4.0", "methods": [{"method_name": "list_emails", "description": "List emails in the user's mailbox matching search query.\nWhen searching emails in a specific folder, the folder name should be provided in the 'folder_to_search' parameter and NOT in the 'search_query'.\n\nUse action 'filter_by_recipients' if there are any conditions related to recipients ('to', 'cc', 'bcc' or 'from').\n\nFor any date comparison use:\n    - consider Monday as beginning of the week\n    - date in ISO 8601 format (e.g., '2024-08-24')\n    - use boolean operators (e.g., 'AND', 'OR', 'NOT'). These operators must be in uppercase.\n    - comparison operators 'ge', 'le', 'eq', 'ne' (e.g., 'receivedDateTime ge 2024-08-24')", "parameters": [{"name": "search_query", "description": "query to search for emails. Keep spaces in folder names if user gives spaces.", "required": true, "type": "string"}, {"name": "folder_to_search", "description": "The folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "properties_to_return", "description": "The properties to return in the response. Default is all properties. Comma separated list of properties, like 'idsubject,body,toRecipients'.", "required": false, "type": "string"}, {"name": "max_emails_to_return", "description": "Maximum number of emails to return. Default is -1 (return all emails).", "required": false, "type": "integer"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "filter_by_recipients", "description": "Filter list of emails objects by recipients.", "parameters": [{"name": "search_query", "description": "Query to search for emails. Default is '*'.", "required": false, "type": "string"}, {"name": "from_", "description": "Email address of the sender to filter by.", "required": false, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to filter by.", "required": false, "type": "string"}, {"name": "cc_recipients", "description": "Comma separated list of email addresses of the cc recipients to filter by.", "required": false, "type": "string"}, {"name": "bcc_recipients", "description": "Comma separated list of email addresses of the bcc recipients to filter by.", "required": false, "type": "string"}, {"name": "folder_to_search", "description": "Folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "create_draft", "description": "Create a draft email in the user's mailbox.", "parameters": [{"name": "email", "description": "The email content to create a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "update_draft", "description": "Update a draft email in the user's mailbox.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to update.", "required": true, "type": "string"}, {"name": "email", "description": "The email content to update a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "add_attachment", "description": "Add an attachment to an email.\nIf possible pass attachment as local file absolute filepath, or\npass the content_bytes directly.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to add the attachment to.", "required": true, "type": "string"}, {"name": "attachment", "description": "The attachment to add.", "required": true, "type": "object"}]}, {"method_name": "send_email", "description": "Send a new email.", "parameters": [{"name": "email", "description": "The email content to send.", "required": true, "type": "object"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send a draft message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to send.", "required": true, "type": "string"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}]}, {"method_name": "reply_to_email", "description": "Reply to an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to reply to.", "required": true, "type": "string"}, {"name": "reply", "description": "The reply email properties that needs to be appended, set or deleted. Do not modify the body of the email.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}, {"name": "reply_to_all", "description": "Whether to reply to all recipients.", "required": false, "type": "boolean"}]}, {"method_name": "forward_email", "description": "Forward an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to forward.", "required": true, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to forward the message to.", "required": true, "type": "string"}, {"name": "comment", "description": "A comment to include.", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Move a message to a different folder.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to move.", "required": true, "type": "string"}, {"name": "destination_folder_id", "description": "The ID of the destination folder.", "required": true, "type": "string"}]}, {"method_name": "get_email_by_id", "description": "Get the details of a specific email and save attachments to the local file system.\nBy default shows email's body preview. If you want to see the full body,\nset 'show_full_body' to True.\n\nThe full 'body' of the email might return too much information for the chat to handle.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to retrieve.", "required": true, "type": "string"}, {"name": "show_full_body", "description": "Whether to show the full body content.", "required": false, "type": "boolean"}, {"name": "save_attachments", "description": "Whether to save the attachments to the local file system.", "required": false, "type": "string"}, {"name": "make_dirs", "description": "Whether to create the directory for saving attachments if it doesn't exist.", "required": false, "type": "boolean"}]}, {"method_name": "list_folders", "description": "List folders in the user's mailbox.", "parameters": [{"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "subscribe_notifications", "description": "Subscribe to notifications for new messages in a specific folder.\nExpiration date can be at maximum 72 hours to the future. Set that if user does not give specific date.", "parameters": [{"name": "email_folder", "description": "The folder to subscribe to - this should be the real name, not ID.", "required": true, "type": "string"}, {"name": "webhook_url", "description": "The URL to receive notifications.", "required": true, "type": "string"}, {"name": "expiration_date", "description": "The expiration date of the subscription. Format 'YYYY-MM-DDTHH:MM'. Timezone is UTC.", "required": true, "type": "string"}, {"name": "account", "description": "The user account (a email address)", "required": false, "type": "string"}]}, {"method_name": "delete_all_subscriptions", "description": "Delete all existing subscriptions.", "parameters": []}, {"method_name": "delete_subscription", "description": "Delete one subscription", "parameters": [{"name": "subscription_id", "description": "The ID of the subscription to delete.", "required": true, "type": "string"}]}, {"method_name": "get_subscriptions", "description": "Get a list of all active subscriptions.", "parameters": []}, {"method_name": "get_folder", "description": "Get the folder details by name.", "parameters": [{"name": "folder_to_search", "description": "The name or ID of the folder to retrieve.", "required": true, "type": "string"}, {"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "flag_email", "description": "Flag email by setting the flag status.\nPossible flag statuses are:\n- 'notFlagged'\n- 'flagged'\n- 'complete'", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to flag.", "required": true, "type": "string"}, {"name": "flag", "description": "The flag status to set.", "required": true, "type": "object"}]}]}, {"description": "Actions for Microsoft 365 Outlook emails.", "version": "1.4.1", "methods": [{"method_name": "list_emails", "description": "List emails in the user's mailbox matching search query.\nWhen searching emails in a specific folder, the folder name should be provided in the 'folder_to_search' parameter and NOT in the 'search_query'.\n\nUse action 'filter_by_recipients' if there are any conditions related to recipients ('to', 'cc', 'bcc' or 'from').\n\nFor any date comparison use:\n    - consider Monday as beginning of the week\n    - date in ISO 8601 format (e.g., '2024-08-24')\n    - use boolean operators (e.g., 'AND', 'OR', 'NOT'). These operators must be in uppercase.\n    - comparison operators 'ge', 'le', 'eq', 'ne' (e.g., 'receivedDateTime ge 2024-08-24')", "parameters": [{"name": "search_query", "description": "query to search for emails. Keep spaces in folder names if user gives spaces.", "required": true, "type": "string"}, {"name": "folder_to_search", "description": "The folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "properties_to_return", "description": "The properties to return in the response. Default is all properties. Comma separated list of properties, like 'idsubject,body,toRecipients'.", "required": false, "type": "string"}, {"name": "max_emails_to_return", "description": "Maximum number of emails to return. Default is -1 (return all emails).", "required": false, "type": "integer"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "filter_by_recipients", "description": "Filter list of emails objects by recipients.", "parameters": [{"name": "search_query", "description": "Query to search for emails. Default is '*'.", "required": false, "type": "string"}, {"name": "from_", "description": "Email address of the sender to filter by.", "required": false, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to filter by.", "required": false, "type": "string"}, {"name": "cc_recipients", "description": "Comma separated list of email addresses of the cc recipients to filter by.", "required": false, "type": "string"}, {"name": "bcc_recipients", "description": "Comma separated list of email addresses of the bcc recipients to filter by.", "required": false, "type": "string"}, {"name": "folder_to_search", "description": "Folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "create_draft", "description": "Create a draft email in the user's mailbox.", "parameters": [{"name": "email", "description": "The email content to create a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "update_draft", "description": "Update a draft email in the user's mailbox.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to update.", "required": true, "type": "string"}, {"name": "email", "description": "The email content to update a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "add_attachment", "description": "Add an attachment to an email.\nIf possible pass attachment as local file absolute filepath, or\npass the content_bytes directly.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to add the attachment to.", "required": true, "type": "string"}, {"name": "attachment", "description": "The attachment to add.", "required": true, "type": "object"}]}, {"method_name": "send_email", "description": "Send a new email.", "parameters": [{"name": "email", "description": "The email content to send.", "required": true, "type": "object"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send a draft message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to send.", "required": true, "type": "string"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}]}, {"method_name": "reply_to_email", "description": "Reply to an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to reply to.", "required": true, "type": "string"}, {"name": "reply", "description": "The reply email properties that needs to be appended, set or deleted. Do not modify the body of the email.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}, {"name": "reply_to_all", "description": "Whether to reply to all recipients.", "required": false, "type": "boolean"}]}, {"method_name": "forward_email", "description": "Forward an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to forward.", "required": true, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to forward the message to.", "required": true, "type": "string"}, {"name": "comment", "description": "A comment to include.", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Move a message to a different folder.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to move.", "required": true, "type": "string"}, {"name": "destination_folder_id", "description": "The ID of the destination folder.", "required": true, "type": "string"}]}, {"method_name": "get_email_by_id", "description": "Get the details of a specific email and save attachments to the local file system.\nBy default shows email's body preview. If you want to see the full body,\nset 'show_full_body' to True.\n\nThe full 'body' of the email might return too much information for the chat to handle.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to retrieve.", "required": true, "type": "string"}, {"name": "show_full_body", "description": "Whether to show the full body content.", "required": false, "type": "boolean"}, {"name": "save_attachments", "description": "Whether to save the attachments to the local file system.", "required": false, "type": "string"}, {"name": "make_dirs", "description": "Whether to create the directory for saving attachments if it doesn't exist.", "required": false, "type": "boolean"}]}, {"method_name": "list_folders", "description": "List folders in the user's mailbox.", "parameters": [{"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "subscribe_notifications", "description": "Subscribe to notifications for new messages in a specific folder.\nExpiration date can be at maximum 72 hours to the future. Set that if user does not give specific date.", "parameters": [{"name": "email_folder", "description": "The folder to subscribe to - this should be the real name, not ID.", "required": true, "type": "string"}, {"name": "webhook_url", "description": "The URL to receive notifications.", "required": true, "type": "string"}, {"name": "expiration_date", "description": "The expiration date of the subscription. Format 'YYYY-MM-DDTHH:MM'. Timezone is UTC.", "required": true, "type": "string"}, {"name": "account", "description": "The user account (a email address)", "required": false, "type": "string"}]}, {"method_name": "delete_all_subscriptions", "description": "Delete all existing subscriptions.", "parameters": []}, {"method_name": "delete_subscription", "description": "Delete one subscription", "parameters": [{"name": "subscription_id", "description": "The ID of the subscription to delete.", "required": true, "type": "string"}]}, {"method_name": "get_subscriptions", "description": "Get a list of all active subscriptions.", "parameters": []}, {"method_name": "get_folder", "description": "Get the folder details by name.", "parameters": [{"name": "folder_to_search", "description": "The name or ID of the folder to retrieve.", "required": true, "type": "string"}, {"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "flag_email", "description": "Flag email by setting the flag status.\nPossible flag statuses are:\n- 'notFlagged'\n- 'flagged'\n- 'complete'", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to flag.", "required": true, "type": "string"}, {"name": "flag", "description": "The flag status to set.", "required": true, "type": "object"}]}]}, {"description": "Actions for Microsoft 365 Outlook emails.", "version": "1.4.2", "methods": [{"method_name": "list_emails", "description": "List emails in the user's mailbox matching search query.\nWhen searching emails in a specific folder, the folder name should be provided in the 'folder_to_search' parameter and NOT in the 'search_query'.\n\nUse action 'filter_by_recipients' if there are any conditions related to recipients ('to', 'cc', 'bcc' or 'from').\n\nFor any date comparison use:\n    - consider Monday as beginning of the week\n    - date in ISO 8601 format (e.g., '2024-08-24')\n    - use boolean operators (e.g., 'AND', 'OR', 'NOT'). These operators must be in uppercase.\n    - comparison operators 'ge', 'le', 'eq', 'ne' (e.g., 'receivedDateTime ge 2024-08-24')", "parameters": [{"name": "search_query", "description": "query to search for emails. Keep spaces in folder names if user gives spaces.", "required": true, "type": "string"}, {"name": "folder_to_search", "description": "The folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "properties_to_return", "description": "The properties to return in the response. Default is all properties. Comma separated list of properties, like 'idsubject,body,toRecipients'.", "required": false, "type": "string"}, {"name": "max_emails_to_return", "description": "Maximum number of emails to return. Default is -1 (return all emails).", "required": false, "type": "integer"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "filter_by_recipients", "description": "Filter list of emails objects by recipients.", "parameters": [{"name": "search_query", "description": "Query to search for emails. Default is '*'.", "required": false, "type": "string"}, {"name": "from_", "description": "Email address of the sender to filter by.", "required": false, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to filter by.", "required": false, "type": "string"}, {"name": "cc_recipients", "description": "Comma separated list of email addresses of the cc recipients to filter by.", "required": false, "type": "string"}, {"name": "bcc_recipients", "description": "Comma separated list of email addresses of the bcc recipients to filter by.", "required": false, "type": "string"}, {"name": "folder_to_search", "description": "Folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "create_draft", "description": "Create a draft email in the user's mailbox.", "parameters": [{"name": "email", "description": "The email content to create a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "update_draft", "description": "Update a draft email in the user's mailbox.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to update.", "required": true, "type": "string"}, {"name": "email", "description": "The email content to update a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "add_attachment", "description": "Add an attachment to an email.\nIf possible pass attachment as local file absolute filepath, or\npass the content_bytes directly.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to add the attachment to.", "required": true, "type": "string"}, {"name": "attachment", "description": "The attachment to add.", "required": true, "type": "object"}]}, {"method_name": "send_email", "description": "Send a new email.", "parameters": [{"name": "email", "description": "The email content to send.", "required": true, "type": "object"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send a draft message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to send.", "required": true, "type": "string"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}]}, {"method_name": "reply_to_email", "description": "Reply to an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to reply to.", "required": true, "type": "string"}, {"name": "reply", "description": "The reply email properties that needs to be appended, set or deleted. Do not modify the body of the email.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}, {"name": "reply_to_all", "description": "Whether to reply to all recipients.", "required": false, "type": "boolean"}]}, {"method_name": "forward_email", "description": "Forward an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to forward.", "required": true, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to forward the message to.", "required": true, "type": "string"}, {"name": "comment", "description": "A comment to include.", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Move a message to a different folder.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to move.", "required": true, "type": "string"}, {"name": "destination_folder_id", "description": "The ID of the destination folder.", "required": true, "type": "string"}]}, {"method_name": "get_email_by_id", "description": "Get the details of a specific email and save attachments to the local file system.\nBy default shows email's body preview. If you want to see the full body,\nset 'show_full_body' to True.\n\nThe full 'body' of the email might return too much information for the chat to handle.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to retrieve.", "required": true, "type": "string"}, {"name": "show_full_body", "description": "Whether to show the full body content.", "required": false, "type": "boolean"}, {"name": "save_attachments", "description": "Whether to save the attachments to the local file system.", "required": false, "type": "string"}, {"name": "make_dirs", "description": "Whether to create the directory for saving attachments if it doesn't exist.", "required": false, "type": "boolean"}]}, {"method_name": "list_folders", "description": "List folders in the user's mailbox.", "parameters": [{"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "subscribe_notifications", "description": "Subscribe to notifications for new messages in a specific folder.\nExpiration date can be at maximum 72 hours to the future. Set that if user does not give specific date.", "parameters": [{"name": "email_folder", "description": "The folder to subscribe to - this should be the real name, not ID.", "required": true, "type": "string"}, {"name": "webhook_url", "description": "The URL to receive notifications.", "required": true, "type": "string"}, {"name": "expiration_date", "description": "The expiration date of the subscription. Format 'YYYY-MM-DDTHH:MM'. Timezone is UTC.", "required": true, "type": "string"}, {"name": "account", "description": "The user account (a email address)", "required": false, "type": "string"}]}, {"method_name": "delete_all_subscriptions", "description": "Delete all existing subscriptions.", "parameters": []}, {"method_name": "delete_subscription", "description": "Delete one subscription", "parameters": [{"name": "subscription_id", "description": "The ID of the subscription to delete.", "required": true, "type": "string"}]}, {"method_name": "get_subscriptions", "description": "Get a list of all active subscriptions.", "parameters": []}, {"method_name": "get_folder", "description": "Get the folder details by name.", "parameters": [{"name": "folder_to_search", "description": "The name or ID of the folder to retrieve.", "required": true, "type": "string"}, {"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "flag_email", "description": "Flag email by setting the flag status.\nPossible flag statuses are:\n- 'notFlagged'\n- 'flagged'\n- 'complete'", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to flag.", "required": true, "type": "string"}, {"name": "flag", "description": "The flag status to set.", "required": true, "type": "object"}]}]}, {"description": "Actions for Microsoft 365 Outlook emails.", "version": "2.0.0", "methods": [{"method_name": "list_emails", "description": "List emails in the user's mailbox matching search query.\nWhen searching emails in a specific folder, the folder name should be provided in the 'folder_to_search' parameter and NOT in the 'search_query'.\n\nUse action 'filter_by_recipients' if there are any conditions related to recipients ('to', 'cc', 'bcc' or 'from').\n\nFor any date comparison use:\n    - consider Monday as beginning of the week\n    - date in ISO 8601 format (e.g., '2024-08-24')\n    - use boolean operators (e.g., 'AND', 'OR', 'NOT'). These operators must be in uppercase.\n    - comparison operators 'ge', 'le', 'eq', 'ne' (e.g., 'receivedDateTime ge 2024-08-24')", "parameters": [{"name": "search_query", "description": "query to search for emails. Keep spaces in folder names if user gives spaces.", "required": true, "type": "string"}, {"name": "folder_to_search", "description": "The folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "properties_to_return", "description": "The properties to return in the response. Default is all properties. Comma separated list of properties, like 'idsubject,body,toRecipients'.", "required": false, "type": "string"}, {"name": "max_emails_to_return", "description": "Maximum number of emails to return. Default is -1 (return all emails).", "required": false, "type": "integer"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "filter_by_recipients", "description": "Filter list of emails objects by recipients.", "parameters": [{"name": "search_query", "description": "Query to search for emails. Default is '*'.", "required": false, "type": "string"}, {"name": "from_", "description": "Email address of the sender to filter by.", "required": false, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to filter by.", "required": false, "type": "string"}, {"name": "cc_recipients", "description": "Comma separated list of email addresses of the cc recipients to filter by.", "required": false, "type": "string"}, {"name": "bcc_recipients", "description": "Comma separated list of email addresses of the bcc recipients to filter by.", "required": false, "type": "string"}, {"name": "folder_to_search", "description": "Folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "create_draft", "description": "Create a draft email in the user's mailbox.", "parameters": [{"name": "email", "description": "The email content to create a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "update_draft", "description": "Update a draft email in the user's mailbox.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to update.", "required": true, "type": "string"}, {"name": "email", "description": "The email content to update a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "add_attachment", "description": "Add an attachment to an email.\nIf possible pass attachment as local file absolute filepath, or\npass the content_bytes directly.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to add the attachment to.", "required": true, "type": "string"}, {"name": "attachment", "description": "The attachment to add.", "required": true, "type": "object"}]}, {"method_name": "send_email", "description": "Send a new email.", "parameters": [{"name": "email", "description": "The email content to send.", "required": true, "type": "object"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send a draft message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to send.", "required": true, "type": "string"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}]}, {"method_name": "reply_to_email", "description": "Reply to an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to reply to.", "required": true, "type": "string"}, {"name": "reply", "description": "The reply email properties that needs to be appended, set or deleted. Do not modify the body of the email.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}, {"name": "reply_to_all", "description": "Whether to reply to all recipients.", "required": false, "type": "boolean"}]}, {"method_name": "forward_email", "description": "Forward an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to forward.", "required": true, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to forward the message to.", "required": true, "type": "string"}, {"name": "comment", "description": "A comment to include.", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Move a message to a different folder.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to move.", "required": true, "type": "string"}, {"name": "destination_folder_id", "description": "The ID of the destination folder.", "required": true, "type": "string"}]}, {"method_name": "get_email_by_id", "description": "Get the details of a specific email and optionally attach files to the chat.\nBy default shows email's body preview. If you want to see the full body,\nset 'show_full_body' to True.\n\nThe full 'body' of the email might return too much information for the chat to handle.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to retrieve.", "required": true, "type": "string"}, {"name": "show_full_body", "description": "Whether to show the full body content.", "required": false, "type": "boolean"}, {"name": "save_attachments", "description": "Whether to attach the email attachments to the chat using sema4ai.actions.chat.", "required": false, "type": "boolean"}]}, {"method_name": "get_email_by_subject", "description": "Get the details of a specific email by subject and optionally attach files to the chat.\nBy default shows email's body preview. If you want to see the full body,\nset 'show_full_body' to True.\n\nThe full 'body' of the email might return too much information for the chat to handle.", "parameters": [{"name": "subject", "description": "The subject line to search for.", "required": true, "type": "string"}, {"name": "folder_to_search", "description": "The folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "show_full_body", "description": "Whether to show the full body content.", "required": false, "type": "boolean"}, {"name": "save_attachments", "description": "Whether to attach the email attachments to the chat using sema4ai.actions.chat.", "required": false, "type": "boolean"}, {"name": "exact_match", "description": "Whether to match the subject exactly (case-insensitive). Default is False (partial match).", "required": false, "type": "boolean"}]}, {"method_name": "list_folders", "description": "List folders in the user's mailbox.", "parameters": [{"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "subscribe_notifications", "description": "Subscribe to notifications for new messages in a specific folder.\nExpiration date can be at maximum 72 hours to the future. Set that if user does not give specific date.", "parameters": [{"name": "email_folder", "description": "The folder to subscribe to - this should be the real name, not ID.", "required": true, "type": "string"}, {"name": "webhook_url", "description": "The URL to receive notifications.", "required": true, "type": "string"}, {"name": "expiration_date", "description": "The expiration date of the subscription. Format 'YYYY-MM-DDTHH:MM'. Timezone is UTC.", "required": true, "type": "string"}, {"name": "account", "description": "The user account (a email address)", "required": false, "type": "string"}]}, {"method_name": "delete_all_subscriptions", "description": "Delete all existing subscriptions.", "parameters": []}, {"method_name": "delete_subscription", "description": "Delete one subscription", "parameters": [{"name": "subscription_id", "description": "The ID of the subscription to delete.", "required": true, "type": "string"}]}, {"method_name": "get_subscriptions", "description": "Get a list of all active subscriptions.", "parameters": []}, {"method_name": "get_folder", "description": "Get the folder details by name.", "parameters": [{"name": "folder_to_search", "description": "The name or ID of the folder to retrieve.", "required": true, "type": "string"}, {"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "flag_email", "description": "Flag email by setting the flag status.\nPossible flag statuses are:\n- 'notFlagged'\n- 'flagged'\n- 'complete'", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to flag.", "required": true, "type": "string"}, {"name": "flag", "description": "The flag status to set.", "required": true, "type": "object"}]}]}, {"description": "Actions for Microsoft 365 Outlook emails including category management (add/remove categories).", "version": "2.1.0", "methods": [{"method_name": "list_emails", "description": "List emails in the user's mailbox matching search query using Microsoft Graph API OData syntax.\nWhen searching emails in a specific folder, the folder name should be provided in the 'folder_to_search' parameter and NOT in the 'search_query'.\n\nUse action 'filter_by_recipients' if there are any conditions related to recipients ('to', 'cc', 'bcc' or 'from').\n\nMicrosoft Graph API Query Syntax Examples:\n\nBasic Queries:\n    - \"*\" or \"\" - Get all emails\n    - \"hasAttachments eq true\" - Emails with attachments\n    - \"isRead eq false\" - Unread emails\n    - \"importance eq 'high'\" - High importance emails\n    - \"flag/flagStatus eq 'flagged'\" - Flagged emails\n\nDate/Time Queries:\n    - \"receivedDateTime ge 2024-01-01T00:00:00Z\" - Emails from 2024 onwards\n    - \"receivedDateTime ge 2024-01-01\" - Emails from 2024 onwards (date only)\n    - \"receivedDateTime ge 2024-01-01 AND receivedDateTime le 2024-12-31\" - Emails in 2024\n    - \"createdDateTime ge 2024-01-01T00:00:00Z\" - Emails created from 2024\n\nSubject/Body Queries:\n    - \"contains(subject, 'meeting')\" - Subject contains 'meeting'\n    - \"subject eq 'Important Update'\" - Exact subject match\n    - \"contains(body/content, 'urgent')\" - Body contains 'urgent'\n    - \"startswith(subject, 'RE:')\" - Subject starts with 'RE:'\n\nSender/Recipient Queries:\n    - \"from/emailAddress/address eq 'john@example.com'\" - From specific sender\n    - \"contains(from/emailAddress/address, '@company.com')\" - From company domain\n    - \"toRecipients/any(r: r/emailAddress/address eq 'jane@example.com')\" - To specific recipient\n\nCombined Queries:\n    - \"hasAttachments eq true AND receivedDateTime ge 2024-01-01\" - Attachments from 2024\n    - \"isRead eq false AND importance eq 'high'\" - Unread high importance\n    - \"contains(subject, 'urgent') OR importance eq 'high'\" - Urgent subject OR high importance\n    - \"receivedDateTime ge 2024-01-01 AND (hasAttachments eq true OR importance eq 'high')\" - Complex query\n\nFolder Queries:\n    - Use folder_to_search parameter instead of parentFolderId in search_query\n    - \"inbox\" - Search in inbox folder\n    - \"Sent Items\" - Search in sent items\n    - \"Drafts\" - Search in drafts folder\n    - Custom folder names work if they exist\n\nQuery Rules:\n    - Use uppercase boolean operators: AND, OR, NOT\n    - Use single quotes for string values: 'value'\n    - Use ISO 8601 format for dates: 2024-01-01T00:00:00Z\n    - Use comparison operators: eq, ne, gt, ge, lt, le\n    - Use functions: contains(), startswith(), endswith()\n    - Group conditions with parentheses: (condition1 OR condition2) AND condition3", "parameters": [{"name": "search_query", "description": "OData query to search for emails. Use Microsoft Graph API syntax.", "required": true, "type": "string"}, {"name": "folder_to_search", "description": "The folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "properties_to_return", "description": "The properties to return in the response. Default is all properties. Comma separated list of properties, like 'id,subject,body,toRecipients'.", "required": false, "type": "string"}, {"name": "max_emails_to_return", "description": "Maximum number of emails to return. Default is -1 (return all emails).", "required": false, "type": "integer"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}, {"name": "has_attachments", "description": "Filter emails to only include those with attachments. Default is False.", "required": false, "type": "boolean"}]}, {"method_name": "filter_by_recipients", "description": "Filter list of emails objects by recipients.", "parameters": [{"name": "search_query", "description": "Query to search for emails. Default is '*'.", "required": false, "type": "string"}, {"name": "from_", "description": "Email address of the sender to filter by.", "required": false, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to filter by.", "required": false, "type": "string"}, {"name": "cc_recipients", "description": "Comma separated list of email addresses of the cc recipients to filter by.", "required": false, "type": "string"}, {"name": "bcc_recipients", "description": "Comma separated list of email addresses of the bcc recipients to filter by.", "required": false, "type": "string"}, {"name": "folder_to_search", "description": "Folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "return_only_count", "description": "Limit response size, but still return the count matching the query.", "required": false, "type": "boolean"}]}, {"method_name": "create_draft", "description": "Create a draft email in the user's mailbox.", "parameters": [{"name": "email", "description": "The email content to create a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "update_draft", "description": "Update a draft email in the user's mailbox.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to update.", "required": true, "type": "string"}, {"name": "email", "description": "The email content to update a draft.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "add_attachment", "description": "Add an attachment to an email.\nIf possible pass attachment as local file absolute filepath, or\npass the content_bytes directly.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to add the attachment to.", "required": true, "type": "string"}, {"name": "attachment", "description": "The attachment to add.", "required": true, "type": "object"}]}, {"method_name": "send_email", "description": "Send a new email.", "parameters": [{"name": "email", "description": "The email content to send.", "required": true, "type": "object"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}]}, {"method_name": "send_draft", "description": "Send a draft message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to send.", "required": true, "type": "string"}, {"name": "save_to_sent_items", "description": "Whether to save the email to the sent items.", "required": false, "type": "boolean"}]}, {"method_name": "reply_to_email", "description": "Reply to an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to reply to.", "required": true, "type": "string"}, {"name": "reply", "description": "The reply email properties that needs to be appended, set or deleted. Do not modify the body of the email.", "required": true, "type": "object"}, {"name": "html_content", "description": "Whether the body content is HTML.", "required": false, "type": "boolean"}, {"name": "reply_to_all", "description": "Whether to reply to all recipients.", "required": false, "type": "boolean"}]}, {"method_name": "forward_email", "description": "Forward an existing message.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to forward.", "required": true, "type": "string"}, {"name": "to_recipients", "description": "Comma separated list of email addresses of the recipients to forward the message to.", "required": true, "type": "string"}, {"name": "comment", "description": "A comment to include.", "required": false, "type": "string"}]}, {"method_name": "move_email", "description": "Move a message to a different folder.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to move.", "required": true, "type": "string"}, {"name": "destination_folder_id", "description": "The ID of the destination folder.", "required": true, "type": "string"}]}, {"method_name": "get_email_by_id", "description": "Get the details of a specific email and optionally attach files to the chat.\nBy default shows email's body preview. If you want to see the full body,\nset 'show_full_body' to True.\n\nThe full 'body' of the email might return too much information for the chat to handle.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to retrieve.", "required": true, "type": "string"}, {"name": "show_full_body", "description": "Whether to show the full body content.", "required": false, "type": "boolean"}, {"name": "save_attachments", "description": "Whether to attach the email attachments to the chat using sema4ai.actions.chat.", "required": false, "type": "boolean"}]}, {"method_name": "get_email_by_subject", "description": "Get the details of a specific email by subject and optionally attach files to the chat.\nBy default shows email's body preview. If you want to see the full body,\nset 'show_full_body' to True.\n\nThe full 'body' of the email might return too much information for the chat to handle.", "parameters": [{"name": "subject", "description": "The subject line to search for.", "required": true, "type": "string"}, {"name": "folder_to_search", "description": "The folder to search for emails. Default is 'inbox'.", "required": false, "type": "string"}, {"name": "show_full_body", "description": "Whether to show the full body content.", "required": false, "type": "boolean"}, {"name": "save_attachments", "description": "Whether to attach the email attachments to the chat using sema4ai.actions.chat.", "required": false, "type": "boolean"}, {"name": "exact_match", "description": "Whether to match the subject exactly (case-insensitive). Default is False (partial match).", "required": false, "type": "boolean"}]}, {"method_name": "list_folders", "description": "List folders in the user's mailbox.", "parameters": [{"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "subscribe_notifications", "description": "Subscribe to notifications for new messages in a specific folder.\nExpiration date can be at maximum 72 hours to the future. Set that if user does not give specific date.", "parameters": [{"name": "email_folder", "description": "The folder to subscribe to - this should be the real name, not ID.", "required": true, "type": "string"}, {"name": "webhook_url", "description": "The URL to receive notifications.", "required": true, "type": "string"}, {"name": "expiration_date", "description": "The expiration date of the subscription. Format 'YYYY-MM-DDTHH:MM'. Timezone is UTC.", "required": true, "type": "string"}, {"name": "account", "description": "The user account (a email address)", "required": false, "type": "string"}]}, {"method_name": "delete_all_subscriptions", "description": "Delete all existing subscriptions.", "parameters": []}, {"method_name": "delete_subscription", "description": "Delete one subscription", "parameters": [{"name": "subscription_id", "description": "The ID of the subscription to delete.", "required": true, "type": "string"}]}, {"method_name": "get_subscriptions", "description": "Get a list of all active subscriptions.", "parameters": []}, {"method_name": "get_folder", "description": "Get the folder details by name.", "parameters": [{"name": "folder_to_search", "description": "The name or ID of the folder to retrieve.", "required": true, "type": "string"}, {"name": "account", "description": "The email account. By default \"me\"", "required": false, "type": "string"}]}, {"method_name": "flag_email", "description": "Flag email by setting the flag status.\nPossible flag statuses are:\n- 'notFlagged'\n- 'flagged'\n- 'complete'", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to flag.", "required": true, "type": "string"}, {"name": "flag", "description": "The flag status to set.", "required": true, "type": "object"}]}, {"method_name": "add_category", "description": "Add a category to an email while preserving existing categories.\nCreates the category in master categories if it doesn't exist.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to add the category to.", "required": true, "type": "string"}, {"name": "category", "description": "The category to add to the email (includes display_name and color).", "required": true, "type": "object"}]}, {"method_name": "remove_category", "description": "Remove a category from an email.", "parameters": [{"name": "email_id", "description": "The unique identifier of the email to remove the category from.", "required": true, "type": "string"}, {"name": "category_name", "description": "The name of the category to remove.", "required": true, "type": "string"}]}, {"method_name": "list_master_categories", "description": "List all master categories with their colors.", "parameters": []}]}]}, "Microsoft OneDrive": {"name": "Microsoft OneDrive", "versions": [{"description": "Work with Microsoft OneDrive.", "version": "1.0.0", "methods": [{"method_name": "get_onedrive_item_by_id", "description": "Retrieve detailed information about a file or folder in OneDrive using its ID.\nUseful also to find parent folders.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id parameter.", "required": true, "type": "object"}]}, {"method_name": "list_all_onedrive_folders_recursively", "description": "Recursively list all folders in OneDrive starting from a specified root folder.", "parameters": [{"name": "root_folder", "description": "The root folder to start listing folders from. Use \"/\" for the root of OneDrive.", "required": false, "type": "string"}]}, {"method_name": "list_items_from_onedrive_folder", "description": "List items in a specified OneDrive folder. Use \"/\" for the root folder, \"/Documents\", etc.\nReturns also download urls (note that it's slow to print).", "parameters": [{"name": "params", "description": "Pydantic model containing folder_path and item_type.", "required": true, "type": "object"}]}, {"method_name": "list_onedrive_items_shared_with_me", "description": "List items shared with me in OneDrive.", "parameters": []}, {"method_name": "search_for_onedrive_items", "description": "Search for items (\"all\" ,\"files\" or \"folders\") in OneDrive by name or content.", "parameters": [{"name": "search_request", "description": "OneDriveSearchItemsRequest containing the search query and item type.", "required": true, "type": "object"}]}, {"method_name": "download_onedrive_file", "description": "Download file or files from OneDrive to local storage.\nDo not give 'download_location' unless user specifies a path.\nBy default downloads to the user's Downloads folder.", "parameters": [{"name": "download_request", "description": "The download request containing the search query or download URL.", "required": true, "type": "object"}, {"name": "download_location", "description": " The path (folder) to save the downloaded file.", "required": false, "type": "string"}, {"name": "download_all", "description": "Whether to download all files found or not.", "required": false, "type": "boolean"}]}, {"method_name": "get_my_drive", "description": "Get my drive details.", "parameters": []}, {"method_name": "create_onedrive_folder", "description": "Create a new folder in OneDrive.", "parameters": [{"name": "params", "description": "OneDriveFolderCreationParams object containing:\nfolder_name: name of the folder to create.\nparent_folder_path: path of the parent folder in OneDrive (optional).", "required": true, "type": "object"}]}, {"method_name": "delete_onedrive_item", "description": "Delete a file or folder from OneDrive using its ID.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id parameter.", "required": true, "type": "object"}]}, {"method_name": "rename_onedrive_item", "description": "Rename a file or folder in OneDrive using its ID.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id and new_name parameters.", "required": true, "type": "object"}]}, {"method_name": "upload_file_to_onedrive", "description": "Upload a file to OneDrive.", "parameters": [{"name": "upload_request", "description": "OneDriveUploadRequest object containing:\nfilename: name of the file to upload.\nfolder_path: path of the folder in OneDrive to upload the file to.", "required": true, "type": "object"}]}]}, {"description": "Work with Microsoft OneDrive.", "version": "1.0.1", "methods": [{"method_name": "get_onedrive_item_by_id", "description": "Retrieve detailed information about a file or folder in OneDrive using its ID.\nUseful also to find parent folders.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id parameter.", "required": true, "type": "object"}]}, {"method_name": "list_all_onedrive_folders_recursively", "description": "Recursively list all folders in OneDrive starting from a specified root folder.", "parameters": [{"name": "root_folder", "description": "The root folder to start listing folders from. Use \"/\" for the root of OneDrive.", "required": false, "type": "string"}]}, {"method_name": "list_items_from_onedrive_folder", "description": "List items in a specified OneDrive folder. Use \"/\" for the root folder, \"/Documents\", etc.\nReturns also download urls (note that it's slow to print).", "parameters": [{"name": "params", "description": "Pydantic model containing folder_path and item_type.", "required": true, "type": "object"}]}, {"method_name": "list_onedrive_items_shared_with_me", "description": "List items shared with me in OneDrive.", "parameters": []}, {"method_name": "search_for_onedrive_items", "description": "Search for items (\"all\" ,\"files\" or \"folders\") in OneDrive by name or content.", "parameters": [{"name": "search_request", "description": "OneDriveSearchItemsRequest containing the search query and item type.", "required": true, "type": "object"}]}, {"method_name": "download_onedrive_file", "description": "Download file or files from OneDrive to local storage.\nDo not give 'download_location' unless user specifies a path.\nBy default downloads to the user's Downloads folder.", "parameters": [{"name": "download_request", "description": "The download request containing the search query or download URL.", "required": true, "type": "object"}, {"name": "download_location", "description": " The path (folder) to save the downloaded file.", "required": false, "type": "string"}, {"name": "download_all", "description": "Whether to download all files found or not.", "required": false, "type": "boolean"}]}, {"method_name": "get_my_drive", "description": "Get my drive details.", "parameters": []}, {"method_name": "create_onedrive_folder", "description": "Create a new folder in OneDrive.", "parameters": [{"name": "params", "description": "OneDriveFolderCreationParams object containing:\nfolder_name: name of the folder to create.\nparent_folder_path: path of the parent folder in OneDrive (optional).", "required": true, "type": "object"}]}, {"method_name": "delete_onedrive_item", "description": "Delete a file or folder from OneDrive using its ID.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id parameter.", "required": true, "type": "object"}]}, {"method_name": "rename_onedrive_item", "description": "Rename a file or folder in OneDrive using its ID.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id and new_name parameters.", "required": true, "type": "object"}]}, {"method_name": "upload_file_to_onedrive", "description": "Upload a file to OneDrive.", "parameters": [{"name": "upload_request", "description": "OneDriveUploadRequest object containing:\nfilename: name of the file to upload.\nfolder_path: path of the folder in OneDrive to upload the file to.", "required": true, "type": "object"}]}]}, {"description": "Work with Microsoft OneDrive.", "version": "1.0.2", "methods": [{"method_name": "get_onedrive_item_by_id", "description": "Retrieve detailed information about a file or folder in OneDrive using its ID.\nUseful also to find parent folders.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id parameter.", "required": true, "type": "object"}]}, {"method_name": "list_all_onedrive_folders_recursively", "description": "Recursively list all folders in OneDrive starting from a specified root folder.", "parameters": [{"name": "root_folder", "description": "The root folder to start listing folders from. Use \"/\" for the root of OneDrive.", "required": false, "type": "string"}]}, {"method_name": "list_items_from_onedrive_folder", "description": "List items in a specified OneDrive folder. Use \"/\" for the root folder, \"/Documents\", etc.\nReturns also download urls (note that it's slow to print).", "parameters": [{"name": "params", "description": "Pydantic model containing folder_path and item_type.", "required": true, "type": "object"}]}, {"method_name": "list_onedrive_items_shared_with_me", "description": "List items shared with me in OneDrive.", "parameters": []}, {"method_name": "search_for_onedrive_items", "description": "Search for items (\"all\" ,\"files\" or \"folders\") in OneDrive by name or content.", "parameters": [{"name": "search_request", "description": "OneDriveSearchItemsRequest containing the search query and item type.", "required": true, "type": "object"}]}, {"method_name": "download_onedrive_file", "description": "Download file or files from OneDrive to local storage.\nDo not give 'download_location' unless user specifies a path.\nBy default downloads to the user's Downloads folder.", "parameters": [{"name": "download_request", "description": "The download request containing the search query or download URL.", "required": true, "type": "object"}, {"name": "download_location", "description": " The path (folder) to save the downloaded file.", "required": false, "type": "string"}, {"name": "download_all", "description": "Whether to download all files found or not.", "required": false, "type": "boolean"}]}, {"method_name": "get_my_drive", "description": "Get my drive details.", "parameters": []}, {"method_name": "create_onedrive_folder", "description": "Create a new folder in OneDrive.", "parameters": [{"name": "params", "description": "OneDriveFolderCreationParams object containing:\nfolder_name: name of the folder to create.\nparent_folder_path: path of the parent folder in OneDrive (optional).", "required": true, "type": "object"}]}, {"method_name": "delete_onedrive_item", "description": "Delete a file or folder from OneDrive using its ID.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id parameter.", "required": true, "type": "object"}]}, {"method_name": "rename_onedrive_item", "description": "Rename a file or folder in OneDrive using its ID.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id and new_name parameters.", "required": true, "type": "object"}]}, {"method_name": "upload_file_to_onedrive", "description": "Upload a file to OneDrive.", "parameters": [{"name": "upload_request", "description": "OneDriveUploadRequest object containing:\nfilename: name of the file to upload.\nfolder_path: path of the folder in OneDrive to upload the file to.", "required": true, "type": "object"}]}]}, {"description": "Work with Microsoft OneDrive.", "version": "1.1.0", "methods": [{"method_name": "get_onedrive_item_by_id", "description": "Retrieve detailed information about a file or folder in OneDrive using its ID.\nUseful also to find parent folders.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id parameter.", "required": true, "type": "object"}]}, {"method_name": "list_all_onedrive_folders_recursively", "description": "Recursively list all folders in OneDrive starting from a specified root folder.", "parameters": [{"name": "root_folder", "description": "The root folder to start listing folders from. Use \"/\" for the root of OneDrive.", "required": false, "type": "string"}]}, {"method_name": "list_items_from_onedrive_folder", "description": "List items in a specified OneDrive folder. Use \"/\" for the root folder, \"/Documents\", etc.\nReturns also download urls (note that it's slow to print).", "parameters": [{"name": "params", "description": "Pydantic model containing folder_path and item_type.", "required": true, "type": "object"}]}, {"method_name": "list_onedrive_items_shared_with_me", "description": "List items shared with me in OneDrive.", "parameters": []}, {"method_name": "search_for_onedrive_items", "description": "Search for items (\"all\" ,\"files\" or \"folders\") in OneDrive by name or content.", "parameters": [{"name": "search_request", "description": "OneDriveSearchItemsRequest containing the search query and item type.", "required": true, "type": "object"}]}, {"method_name": "download_onedrive_file", "description": "Download file or files from OneDrive to local storage.\nDo not give 'download_location' unless user specifies a path.\nBy default downloads to the user's Downloads folder.", "parameters": [{"name": "download_request", "description": "The download request containing the search query or download URL.", "required": true, "type": "object"}, {"name": "download_location", "description": " The path (folder) to save the downloaded file.", "required": false, "type": "string"}, {"name": "download_all", "description": "Whether to download all files found or not.", "required": false, "type": "boolean"}]}, {"method_name": "get_my_drive", "description": "Get my drive details.", "parameters": []}, {"method_name": "create_onedrive_folder", "description": "Create a new folder in OneDrive.", "parameters": [{"name": "params", "description": "OneDriveFolderCreationParams object containing:\nfolder_name: name of the folder to create.\nparent_folder_path: path of the parent folder in OneDrive (optional).", "required": true, "type": "object"}]}, {"method_name": "delete_onedrive_item", "description": "Delete a file or folder from OneDrive using its ID.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id parameter.", "required": true, "type": "object"}]}, {"method_name": "rename_onedrive_item", "description": "Rename a file or folder in OneDrive using its ID.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id and new_name parameters.", "required": true, "type": "object"}]}, {"method_name": "upload_file_to_onedrive", "description": "Upload a file to OneDrive.", "parameters": [{"name": "upload_request", "description": "OneDriveUploadRequest object containing:\nfilename: name of the file to upload.\nfolder_path: path of the folder in OneDrive to upload the file to.", "required": true, "type": "object"}]}]}, {"description": "Work with Microsoft OneDrive.", "version": "1.1.1", "methods": [{"method_name": "get_onedrive_item_by_id", "description": "Retrieve detailed information about a file or folder in OneDrive using its ID.\nUseful also to find parent folders.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id parameter.", "required": true, "type": "object"}]}, {"method_name": "list_all_onedrive_folders_recursively", "description": "Recursively list all folders in OneDrive starting from a specified root folder.", "parameters": [{"name": "root_folder", "description": "The root folder to start listing folders from. Use \"/\" for the root of OneDrive.", "required": false, "type": "string"}]}, {"method_name": "list_items_from_onedrive_folder", "description": "List items in a specified OneDrive folder. Use \"/\" for the root folder, \"/Documents\", etc.\nReturns also download urls (note that it's slow to print).", "parameters": [{"name": "params", "description": "Pydantic model containing folder_path and item_type.", "required": true, "type": "object"}]}, {"method_name": "list_onedrive_items_shared_with_me", "description": "List items shared with me in OneDrive.", "parameters": []}, {"method_name": "search_for_onedrive_items", "description": "Search for items (\"all\" ,\"files\" or \"folders\") in OneDrive by name or content.", "parameters": [{"name": "search_request", "description": "OneDriveSearchItemsRequest containing the search query and item type.", "required": true, "type": "object"}]}, {"method_name": "download_onedrive_file", "description": "Download file or files from OneDrive to local storage.\nDo not give 'download_location' unless user specifies a path.\nBy default downloads to the user's Downloads folder.", "parameters": [{"name": "download_request", "description": "The download request containing the search query or download URL.", "required": true, "type": "object"}, {"name": "download_location", "description": " The path (folder) to save the downloaded file.", "required": false, "type": "string"}, {"name": "download_all", "description": "Whether to download all files found or not.", "required": false, "type": "boolean"}]}, {"method_name": "get_my_drive", "description": "Get my drive details.", "parameters": []}, {"method_name": "create_onedrive_folder", "description": "Create a new folder in OneDrive.", "parameters": [{"name": "params", "description": "OneDriveFolderCreationParams object containing:\nfolder_name: name of the folder to create.\nparent_folder_path: path of the parent folder in OneDrive (optional).", "required": true, "type": "object"}]}, {"method_name": "delete_onedrive_item", "description": "Delete a file or folder from OneDrive using its ID.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id parameter.", "required": true, "type": "object"}]}, {"method_name": "rename_onedrive_item", "description": "Rename a file or folder in OneDrive using its ID.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id and new_name parameters.", "required": true, "type": "object"}]}, {"method_name": "upload_file_to_onedrive", "description": "Upload a file to OneDrive.", "parameters": [{"name": "upload_request", "description": "OneDriveUploadRequest object containing:\nfilename: name of the file to upload.\nfolder_path: path of the folder in OneDrive to upload the file to.", "required": true, "type": "object"}]}]}, {"description": "Work with Microsoft OneDrive.", "version": "1.2.0", "methods": [{"method_name": "get_onedrive_item_by_id", "description": "Retrieve detailed information about a file or folder in OneDrive using its ID.\nUseful also to find parent folders.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id parameter.", "required": true, "type": "object"}]}, {"method_name": "list_all_onedrive_folders_recursively", "description": "Recursively list all folders in OneDrive starting from a specified root folder.", "parameters": [{"name": "root_folder", "description": "The root folder to start listing folders from. Use \"/\" for the root of OneDrive.", "required": false, "type": "string"}]}, {"method_name": "list_items_from_onedrive_folder", "description": "List items in a specified OneDrive folder. Use \"/\" for the root folder, \"/Documents\", etc.\nReturns also download urls (note that it's slow to print).", "parameters": [{"name": "params", "description": "Pydantic model containing folder_path and item_type.", "required": true, "type": "object"}]}, {"method_name": "list_onedrive_items_shared_with_me", "description": "List items shared with me in OneDrive.", "parameters": []}, {"method_name": "search_for_onedrive_items", "description": "Search for items (\"all\" ,\"files\" or \"folders\") in OneDrive by name or content.", "parameters": [{"name": "search_request", "description": "OneDriveSearchItemsRequest containing the search query and item type.", "required": true, "type": "object"}]}, {"method_name": "download_onedrive_file", "description": "Download file or files from OneDrive to local storage.\nDo not give 'download_location' unless user specifies a path.\nBy default downloads to the user's Downloads folder.", "parameters": [{"name": "download_request", "description": "The download request containing the search query or download URL.", "required": true, "type": "object"}, {"name": "download_location", "description": " The path (folder) to save the downloaded file.", "required": false, "type": "string"}, {"name": "download_all", "description": "Whether to download all files found or not.", "required": false, "type": "boolean"}]}, {"method_name": "get_my_drive", "description": "Get my drive details.", "parameters": []}, {"method_name": "create_onedrive_folder", "description": "Create a new folder in OneDrive.", "parameters": [{"name": "params", "description": "OneDriveFolderCreationParams object containing:\nfolder_name: name of the folder to create.\nparent_folder_path: path of the parent folder in OneDrive (optional).", "required": true, "type": "object"}]}, {"method_name": "delete_onedrive_item", "description": "Delete a file or folder from OneDrive using its ID.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id parameter.", "required": true, "type": "object"}]}, {"method_name": "rename_onedrive_item", "description": "Rename a file or folder in OneDrive using its ID.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id and new_name parameters.", "required": true, "type": "object"}]}, {"method_name": "upload_file_to_onedrive", "description": "Upload a file to OneDrive.", "parameters": [{"name": "upload_request", "description": "OneDriveUploadRequest object containing:\nfilename: name of the file to upload.\nfolder_path: path of the folder in OneDrive to upload the file to.", "required": true, "type": "object"}]}]}, {"description": "Work with Microsoft OneDrive.", "version": "1.2.1", "methods": [{"method_name": "get_onedrive_item_by_id", "description": "Retrieve detailed information about a file or folder in OneDrive using its ID.\nUseful also to find parent folders.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id parameter.", "required": true, "type": "object"}]}, {"method_name": "list_all_onedrive_folders_recursively", "description": "Recursively list all folders in OneDrive starting from a specified root folder.", "parameters": [{"name": "root_folder", "description": "The root folder to start listing folders from. Use \"/\" for the root of OneDrive.", "required": false, "type": "string"}]}, {"method_name": "list_items_from_onedrive_folder", "description": "List items in a specified OneDrive folder. Use \"/\" for the root folder, \"/Documents\", etc.\nReturns also download urls (note that it's slow to print).", "parameters": [{"name": "params", "description": "Pydantic model containing folder_path and item_type.", "required": true, "type": "object"}]}, {"method_name": "list_onedrive_items_shared_with_me", "description": "List items shared with me in OneDrive.", "parameters": []}, {"method_name": "search_for_onedrive_items", "description": "Search for items (\"all\" ,\"files\" or \"folders\") in OneDrive by name or content.", "parameters": [{"name": "search_request", "description": "OneDriveSearchItemsRequest containing the search query and item type.", "required": true, "type": "object"}]}, {"method_name": "download_onedrive_file", "description": "Download file or files from OneDrive to local storage.\nDo not give 'download_location' unless user specifies a path.\nBy default downloads to the user's Downloads folder.", "parameters": [{"name": "download_request", "description": "The download request containing the search query or download URL.", "required": true, "type": "object"}, {"name": "download_location", "description": " The path (folder) to save the downloaded file.", "required": false, "type": "string"}, {"name": "download_all", "description": "Whether to download all files found or not.", "required": false, "type": "boolean"}]}, {"method_name": "get_my_drive", "description": "Get my drive details.", "parameters": []}, {"method_name": "create_onedrive_folder", "description": "Create a new folder in OneDrive.", "parameters": [{"name": "params", "description": "OneDriveFolderCreationParams object containing:\nfolder_name: name of the folder to create.\nparent_folder_path: path of the parent folder in OneDrive (optional).", "required": true, "type": "object"}]}, {"method_name": "delete_onedrive_item", "description": "Delete a file or folder from OneDrive using its ID.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id parameter.", "required": true, "type": "object"}]}, {"method_name": "rename_onedrive_item", "description": "Rename a file or folder in OneDrive using its ID.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id and new_name parameters.", "required": true, "type": "object"}]}, {"method_name": "upload_file_to_onedrive", "description": "Upload a file to OneDrive.", "parameters": [{"name": "upload_request", "description": "OneDriveUploadRequest object containing:\nfilename: name of the file to upload.\nfolder_path: path of the folder in OneDrive to upload the file to.", "required": true, "type": "object"}]}]}, {"description": "Work with Microsoft OneDrive.", "version": "1.2.2", "methods": [{"method_name": "get_onedrive_item_by_id", "description": "Retrieve detailed information about a file or folder in OneDrive using its ID.\nUseful also to find parent folders.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id parameter.", "required": true, "type": "object"}]}, {"method_name": "list_all_onedrive_folders_recursively", "description": "Recursively list all folders in OneDrive starting from a specified root folder.", "parameters": [{"name": "root_folder", "description": "The root folder to start listing folders from. Use \"/\" for the root of OneDrive.", "required": false, "type": "string"}]}, {"method_name": "list_items_from_onedrive_folder", "description": "List items in a specified OneDrive folder. Use \"/\" for the root folder, \"/Documents\", etc.\nReturns also download urls (note that it's slow to print).", "parameters": [{"name": "params", "description": "Pydantic model containing folder_path and item_type.", "required": true, "type": "object"}]}, {"method_name": "list_onedrive_items_shared_with_me", "description": "List items shared with me in OneDrive.", "parameters": []}, {"method_name": "search_for_onedrive_items", "description": "Search for items (\"all\" ,\"files\" or \"folders\") in OneDrive by name or content.", "parameters": [{"name": "search_request", "description": "OneDriveSearchItemsRequest containing the search query and item type.", "required": true, "type": "object"}]}, {"method_name": "download_onedrive_file", "description": "Download file or files from OneDrive to local storage.\nDo not give 'download_location' unless user specifies a path.\nBy default downloads to the user's Downloads folder.", "parameters": [{"name": "download_request", "description": "The download request containing the search query or download URL.", "required": true, "type": "object"}, {"name": "download_location", "description": " The path (folder) to save the downloaded file.", "required": false, "type": "string"}, {"name": "download_all", "description": "Whether to download all files found or not.", "required": false, "type": "boolean"}]}, {"method_name": "get_my_drive", "description": "Get my drive details.", "parameters": []}, {"method_name": "create_onedrive_folder", "description": "Create a new folder in OneDrive.", "parameters": [{"name": "params", "description": "OneDriveFolderCreationParams object containing:\nfolder_name: name of the folder to create.\nparent_folder_path: path of the parent folder in OneDrive (optional).", "required": true, "type": "object"}]}, {"method_name": "delete_onedrive_item", "description": "Delete a file or folder from OneDrive using its ID.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id parameter.", "required": true, "type": "object"}]}, {"method_name": "rename_onedrive_item", "description": "Rename a file or folder in OneDrive using its ID.", "parameters": [{"name": "params", "description": "Pydantic model containing the item_id and new_name parameters.", "required": true, "type": "object"}]}, {"method_name": "upload_file_to_onedrive", "description": "Upload a file to OneDrive.", "parameters": [{"name": "upload_request", "description": "OneDriveUploadRequest object containing:\nfilename: name of the file to upload.\nfolder_path: path of the folder in OneDrive to upload the file to.", "required": true, "type": "object"}]}]}]}, "Microsoft Sharepoint": {"name": "Microsoft Sharepoint", "versions": [{"description": "Microsoft actions for Sharepoint", "version": "1.0.0", "methods": [{"method_name": "get_sharepoint_site_id", "description": "Get the site id of the Sharepoint site by its name", "parameters": [{"name": "site_name", "description": "name of the Sharepoint site.", "required": true, "type": "string"}]}, {"method_name": "get_sharepoint_site", "description": "Get the Sharepoint site either by id or by name.", "parameters": [{"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "get_all_sharepoint_sites", "description": "Get all Sharepoint sites known to the user.", "parameters": []}, {"method_name": "get_sharepoint_lists", "description": "Get lists of the Sharepoint site by site id or site name.", "parameters": [{"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "create_sharepoint_list", "description": "Create list in the Sharepoint site by site id or site name.", "parameters": [{"name": "sharepoint_list", "description": "name of the list and columns to create.", "required": true, "type": "object"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "download_sharepoint_file", "description": "Download file(s) from the Sharepoint.", "parameters": [{"name": "filename", "description": "name of the file to download (including the path)", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}, {"name": "target_folder", "description": "folder to download the file to", "required": false, "type": "string"}, {"name": "download_all_matching", "description": "", "required": false, "type": "boolean"}]}, {"method_name": "search_sharepoint_files", "description": "Search files in the Sharepoint site.", "parameters": [{"name": "search_text", "description": "text to search for", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the id of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}]}, {"method_name": "upload_file_to_sharepoint", "description": "Upload a file to the Sharepoint site.", "parameters": [{"name": "filename", "description": "name of the file.", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site.", "required": false, "type": "string"}]}]}, {"description": "Work with Sharepoint sites, lists and files.", "version": "1.0.1", "methods": [{"method_name": "get_sharepoint_site_id", "description": "Get the site id of the Sharepoint site by its name", "parameters": [{"name": "site_name", "description": "name of the Sharepoint site.", "required": true, "type": "string"}]}, {"method_name": "get_sharepoint_site", "description": "Get the Sharepoint site either by id or by name.", "parameters": [{"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "get_all_sharepoint_sites", "description": "Get all Sharepoint sites known to the user.", "parameters": []}, {"method_name": "get_sharepoint_lists", "description": "Get lists of the Sharepoint site by site id or site name.", "parameters": [{"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "create_sharepoint_list", "description": "Create list in the Sharepoint site by site id or site name.", "parameters": [{"name": "sharepoint_list", "description": "name of the list and columns to create.", "required": true, "type": "object"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "download_sharepoint_file", "description": "Download file(s) from the Sharepoint.", "parameters": [{"name": "filename", "description": "name of the file to download (including the path)", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}, {"name": "target_folder", "description": "folder to download the file to", "required": false, "type": "string"}, {"name": "download_all_matching", "description": "", "required": false, "type": "boolean"}]}, {"method_name": "search_sharepoint_files", "description": "Search files in the Sharepoint site.", "parameters": [{"name": "search_text", "description": "text to search for", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the id of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}]}, {"method_name": "upload_file_to_sharepoint", "description": "Upload a file to the Sharepoint site.", "parameters": [{"name": "filename", "description": "name of the file.", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site.", "required": false, "type": "string"}]}]}, {"description": "Work with Sharepoint sites, lists and files.", "version": "2.0.0", "methods": [{"method_name": "search_for_site", "description": "Search for a Sharepoint site by name.", "parameters": [{"name": "search_string", "description": "name of the Sharepoint site.", "required": true, "type": "string"}]}, {"method_name": "get_sharepoint_site", "description": "Get the Sharepoint site either by id or by name.", "parameters": [{"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "get_all_sharepoint_sites", "description": "Get all Sharepoint sites known to the user.", "parameters": []}, {"method_name": "download_sharepoint_file", "description": "Download file(s) from the Sharepoint.", "parameters": [{"name": "filename", "description": "name of the file to download (including the path)", "required": true, "type": "string"}, {"name": "site_id", "description": "", "required": false, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}, {"name": "target_folder", "description": "folder to download the file to", "required": false, "type": "string"}, {"name": "download_all_matching", "description": "", "required": false, "type": "boolean"}]}, {"method_name": "search_sharepoint_files", "description": "Search files in the Sharepoint site.", "parameters": [{"name": "search_text", "description": "text to search for, use \"*\" to search for all files", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the id of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}]}, {"method_name": "upload_file_to_sharepoint", "description": "Upload a file to the Sharepoint site.", "parameters": [{"name": "filename", "description": "name of the file.", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "get_sharepoint_lists", "description": "Get lists of the Sharepoint site by site id or site name.\nUse terms 'me', 'my lists', 'mylists', 'my site', 'mysite' to get lists of the user's site.\n\nUse 'site_id' every time it is available.", "parameters": [{"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "create_sharepoint_list", "description": "Create list in the Sharepoint site by site id or site name.\nUnless specified the column type is by default 'text'.", "parameters": [{"name": "sharepoint_list", "description": "name of the list and columns to create.", "required": true, "type": "object"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}]}]}, {"description": "Work with Sharepoint sites, lists and files.", "version": "2.0.1", "methods": [{"method_name": "search_for_site", "description": "Search for a Sharepoint site by name.", "parameters": [{"name": "search_string", "description": "name of the Sharepoint site.", "required": true, "type": "string"}]}, {"method_name": "get_sharepoint_site", "description": "Get the Sharepoint site either by id or by name.", "parameters": [{"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "get_all_sharepoint_sites", "description": "Get all Sharepoint sites known to the user.", "parameters": []}, {"method_name": "download_sharepoint_file", "description": "Download file(s) from the Sharepoint.", "parameters": [{"name": "filename", "description": "name of the file to download (including the path)", "required": true, "type": "string"}, {"name": "site_id", "description": "", "required": false, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}, {"name": "target_folder", "description": "folder to download the file to", "required": false, "type": "string"}, {"name": "download_all_matching", "description": "", "required": false, "type": "boolean"}]}, {"method_name": "search_sharepoint_files", "description": "Search files in the Sharepoint site.", "parameters": [{"name": "search_text", "description": "text to search for, use \"*\" to search for all files", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the id of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}]}, {"method_name": "upload_file_to_sharepoint", "description": "Upload a file to the Sharepoint site.", "parameters": [{"name": "filename", "description": "name of the file.", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "get_sharepoint_lists", "description": "Get lists of the Sharepoint site by site id or site name.\nUse terms 'me', 'my lists', 'mylists', 'my site', 'mysite' to get lists of the user's site.\n\nUse 'site_id' every time it is available.", "parameters": [{"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "create_sharepoint_list", "description": "Create list in the Sharepoint site by site id or site name.\nUnless specified the column type is by default 'text'.", "parameters": [{"name": "sharepoint_list", "description": "name of the list and columns to create.", "required": true, "type": "object"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}]}]}, {"description": "Work with Sharepoint sites, lists and files.", "version": "2.0.2", "methods": [{"method_name": "search_for_site", "description": "Search for a Sharepoint site by name.", "parameters": [{"name": "search_string", "description": "name of the Sharepoint site.", "required": true, "type": "string"}]}, {"method_name": "get_sharepoint_site", "description": "Get the Sharepoint site either by id or by name.", "parameters": [{"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "get_all_sharepoint_sites", "description": "Get all Sharepoint sites known to the user.", "parameters": []}, {"method_name": "download_sharepoint_file", "description": "Download file(s) from the Sharepoint.", "parameters": [{"name": "filename", "description": "name of the file to download (including the path)", "required": true, "type": "string"}, {"name": "site_id", "description": "", "required": false, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}, {"name": "target_folder", "description": "folder to download the file to", "required": false, "type": "string"}, {"name": "download_all_matching", "description": "", "required": false, "type": "boolean"}]}, {"method_name": "search_sharepoint_files", "description": "Search files in the Sharepoint site.", "parameters": [{"name": "search_text", "description": "text to search for, use \"*\" to search for all files", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the id of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}]}, {"method_name": "upload_file_to_sharepoint", "description": "Upload a file to the Sharepoint site.", "parameters": [{"name": "filename", "description": "name of the file.", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "get_sharepoint_lists", "description": "Get lists of the Sharepoint site by site id or site name.\nUse terms 'me', 'my lists', 'mylists', 'my site', 'mysite' to get lists of the user's site.\n\nUse 'site_id' every time it is available.", "parameters": [{"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "create_sharepoint_list", "description": "Create list in the Sharepoint site by site id or site name.\nUnless specified the column type is by default 'text'.", "parameters": [{"name": "sharepoint_list", "description": "name of the list and columns to create.", "required": true, "type": "object"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}]}]}, {"description": "Work with Sharepoint sites, lists and files.", "version": "2.1.0", "methods": [{"method_name": "search_for_site", "description": "Search for a Sharepoint site by name.", "parameters": [{"name": "search_string", "description": "name of the Sharepoint site.", "required": true, "type": "string"}]}, {"method_name": "get_sharepoint_site", "description": "Get the Sharepoint site either by id or by name.", "parameters": [{"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "get_all_sharepoint_sites", "description": "Get all Sharepoint sites known to the user.", "parameters": []}, {"method_name": "download_sharepoint_file", "description": "Download file(s) from the Sharepoint.", "parameters": [{"name": "filename", "description": "name of the file to download (including the path)", "required": true, "type": "string"}, {"name": "site_id", "description": "", "required": false, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}, {"name": "target_folder", "description": "folder to download the file to", "required": false, "type": "string"}, {"name": "download_all_matching", "description": "", "required": false, "type": "boolean"}]}, {"method_name": "search_sharepoint_files", "description": "Search files in the Sharepoint site.", "parameters": [{"name": "search_text", "description": "text to search for, use \"*\" to search for all files", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the id of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}]}, {"method_name": "upload_file_to_sharepoint", "description": "Upload a file to the Sharepoint site.", "parameters": [{"name": "filename", "description": "name of the file.", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "get_sharepoint_lists", "description": "Get lists of the Sharepoint site by site id or site name.\nUse terms 'me', 'my lists', 'mylists', 'my site', 'mysite' to get lists of the user's site.\n\nUse 'site_id' every time it is available.", "parameters": [{"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "create_sharepoint_list", "description": "Create list in the Sharepoint site by site id or site name.\nUnless specified the column type is by default 'text'.", "parameters": [{"name": "sharepoint_list", "description": "name of the list and columns to create.", "required": true, "type": "object"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}]}]}, {"description": "Work with Sharepoint sites, lists and files.", "version": "2.1.1", "methods": [{"method_name": "search_for_site", "description": "Search for a Sharepoint site by name.", "parameters": [{"name": "search_string", "description": "name of the Sharepoint site.", "required": true, "type": "string"}]}, {"method_name": "get_sharepoint_site", "description": "Get the Sharepoint site either by id or by name.", "parameters": [{"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "get_all_sharepoint_sites", "description": "Get all Sharepoint sites known to the user.", "parameters": []}, {"method_name": "download_sharepoint_file", "description": "Download file(s) from the Sharepoint.", "parameters": [{"name": "filename", "description": "name of the file to download (including the path)", "required": true, "type": "string"}, {"name": "site_id", "description": "", "required": false, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}, {"name": "target_folder", "description": "folder to download the file to", "required": false, "type": "string"}, {"name": "download_all_matching", "description": "", "required": false, "type": "boolean"}]}, {"method_name": "search_sharepoint_files", "description": "Search files in the Sharepoint site.", "parameters": [{"name": "search_text", "description": "text to search for, use \"*\" to search for all files", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the id of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}]}, {"method_name": "upload_file_to_sharepoint", "description": "Upload a file to the Sharepoint site.", "parameters": [{"name": "filename", "description": "name of the file.", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "get_sharepoint_lists", "description": "Get lists of the Sharepoint site by site id or site name.\nUse terms 'me', 'my lists', 'mylists', 'my site', 'mysite' to get lists of the user's site.\n\nUse 'site_id' every time it is available.", "parameters": [{"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "create_sharepoint_list", "description": "Create list in the Sharepoint site by site id or site name.\nUnless specified the column type is by default 'text'.", "parameters": [{"name": "sharepoint_list", "description": "name of the list and columns to create.", "required": true, "type": "object"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}]}]}, {"description": "Work with Sharepoint sites, lists and files.", "version": "2.2.0", "methods": [{"method_name": "search_for_site", "description": "Search for a Sharepoint site by name.", "parameters": [{"name": "search_string", "description": "name of the Sharepoint site.", "required": true, "type": "string"}]}, {"method_name": "get_sharepoint_site", "description": "Get the Sharepoint site either by id or by name.", "parameters": [{"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "get_all_sharepoint_sites", "description": "Get all Sharepoint sites known to the user.", "parameters": []}, {"method_name": "download_sharepoint_file", "description": "Download file(s) from the Sharepoint.", "parameters": [{"name": "filename", "description": "name of the file to download (including the path)", "required": true, "type": "string"}, {"name": "site_id", "description": "", "required": false, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}, {"name": "target_folder", "description": "folder to download the file to", "required": false, "type": "string"}, {"name": "download_all_matching", "description": "", "required": false, "type": "boolean"}]}, {"method_name": "search_sharepoint_files", "description": "Search files in the Sharepoint site.", "parameters": [{"name": "search_text", "description": "text to search for, use \"*\" to search for all files", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the id of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}]}, {"method_name": "upload_file_to_sharepoint", "description": "Upload a file to the Sharepoint site.", "parameters": [{"name": "filename", "description": "name of the file.", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "get_sharepoint_lists", "description": "Get lists of the Sharepoint site by site id or site name.\nUse terms 'me', 'my lists', 'mylists', 'my site', 'mysite' to get lists of the user's site.\n\nUse 'site_id' every time it is available.", "parameters": [{"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "create_sharepoint_list", "description": "Create list in the Sharepoint site by site id or site name.\nUnless specified the column type is by default 'text'.", "parameters": [{"name": "sharepoint_list", "description": "name of the list and columns to create.", "required": true, "type": "object"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}]}]}, {"description": "Work with Sharepoint sites, lists and files.", "version": "2.3.0", "methods": [{"method_name": "search_for_site", "description": "Search for a Sharepoint site by name.", "parameters": [{"name": "search_string", "description": "name of the Sharepoint site.", "required": true, "type": "string"}]}, {"method_name": "get_sharepoint_site", "description": "Get the Sharepoint site either by id or by name.", "parameters": [{"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "get_all_sharepoint_sites", "description": "Get all Sharepoint sites known to the user.", "parameters": []}, {"method_name": "download_sharepoint_file", "description": "Download file(s) from the Sharepoint.", "parameters": [{"name": "filename", "description": "name of the file to download (including the path)", "required": true, "type": "string"}, {"name": "site_id", "description": "", "required": false, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}, {"name": "target_folder", "description": "folder to download the file to", "required": false, "type": "string"}, {"name": "download_all_matching", "description": "", "required": false, "type": "boolean"}]}, {"method_name": "search_sharepoint_files", "description": "Search files in the Sharepoint site.", "parameters": [{"name": "search_text", "description": "text to search for, use \"*\" to search for all files", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the id of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}]}, {"method_name": "upload_file_to_sharepoint", "description": "Upload a file to the Sharepoint site.", "parameters": [{"name": "filename", "description": "name of the file.", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "get_sharepoint_lists", "description": "Get lists of the Sharepoint site by site id or site name.\nUse terms 'me', 'my lists', 'mylists', 'my site', 'mysite' to get lists of the user's site.\n\nUse 'site_id' every time it is available.", "parameters": [{"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "create_sharepoint_list", "description": "Create list in the Sharepoint site by site id or site name.\nUnless specified the column type is by default 'text'.", "parameters": [{"name": "sharepoint_list", "description": "name of the list and columns to create.", "required": true, "type": "object"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "add_sharepoint_list_item", "description": "Add a new item to a SharePoint list.", "parameters": [{"name": "new_item", "description": "The item to add (fields as dict).", "required": true, "type": "object"}, {"name": "site_id", "description": "ID of the SharePoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "Name of the SharePoint site.", "required": false, "type": "string"}, {"name": "list_id", "description": "ID of the SharePoint list.", "required": false, "type": "string"}, {"name": "list_name", "description": "Name of the SharePoint list.", "required": false, "type": "string"}]}, {"method_name": "update_sharepoint_list_item", "description": "Update an existing item in a SharePoint list.", "parameters": [{"name": "update_item", "description": "The item to update (must include item_id and fields).", "required": true, "type": "object"}, {"name": "site_id", "description": "ID of the SharePoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "Name of the SharePoint site.", "required": false, "type": "string"}, {"name": "list_id", "description": "ID of the SharePoint list.", "required": false, "type": "string"}, {"name": "list_name", "description": "Name of the SharePoint list.", "required": false, "type": "string"}]}, {"method_name": "delete_sharepoint_list_item", "description": "Delete an item from a SharePoint list.", "parameters": [{"name": "item_id", "description": "ID of the item to delete.", "required": true, "type": "string"}, {"name": "site_id", "description": "ID of the SharePoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "Name of the SharePoint site.", "required": false, "type": "string"}, {"name": "list_id", "description": "ID of the SharePoint list.", "required": false, "type": "string"}, {"name": "list_name", "description": "Name of the SharePoint list.", "required": false, "type": "string"}]}, {"method_name": "get_sharepoint_list_items", "description": "Get items from a SharePoint list by site and list id or name.", "parameters": [{"name": "site_id", "description": "ID of the SharePoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "Name of the SharePoint site.", "required": false, "type": "string"}, {"name": "list_id", "description": "ID of the SharePoint list.", "required": false, "type": "string"}, {"name": "list_name", "description": "Name of the SharePoint list.", "required": false, "type": "string"}, {"name": "top", "description": "Maximum number of items to return (default 100).", "required": false, "type": "integer"}]}]}, {"description": "Work with Sharepoint sites, lists and files.", "version": "2.3.1", "methods": [{"method_name": "search_for_site", "description": "Search for a Sharepoint site by name.", "parameters": [{"name": "search_string", "description": "name of the Sharepoint site.", "required": true, "type": "string"}]}, {"method_name": "get_sharepoint_site", "description": "Get the Sharepoint site either by id or by name.", "parameters": [{"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "get_all_sharepoint_sites", "description": "Get all Sharepoint sites known to the user.", "parameters": []}, {"method_name": "download_sharepoint_file", "description": "Download file(s) from the Sharepoint.", "parameters": [{"name": "filename", "description": "name of the file to download (including the path)", "required": true, "type": "string"}, {"name": "site_id", "description": "", "required": false, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}, {"name": "target_folder", "description": "folder to download the file to", "required": false, "type": "string"}, {"name": "download_all_matching", "description": "", "required": false, "type": "boolean"}]}, {"method_name": "search_sharepoint_files", "description": "Search files in the Sharepoint site.", "parameters": [{"name": "search_text", "description": "text to search for, use \"*\" to search for all files", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the id of the Sharepoint site or empty to search in all sites", "required": false, "type": "string"}]}, {"method_name": "upload_file_to_sharepoint", "description": "Upload a file to the Sharepoint site.", "parameters": [{"name": "filename", "description": "name of the file.", "required": true, "type": "string"}, {"name": "location", "description": "\"me\" or \"my files\" or the name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "get_sharepoint_lists", "description": "Get lists of the Sharepoint site by site id or site name.\nUse terms 'me', 'my lists', 'mylists', 'my site', 'mysite' to get lists of the user's site.\n\nUse 'site_id' every time it is available.", "parameters": [{"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "create_sharepoint_list", "description": "Create list in the Sharepoint site by site id or site name.\nUnless specified the column type is by default 'text'.", "parameters": [{"name": "sharepoint_list", "description": "name of the list and columns to create.", "required": true, "type": "object"}, {"name": "site_name", "description": "name of the Sharepoint site.", "required": false, "type": "string"}, {"name": "site_id", "description": "id of the Sharepoint site.", "required": false, "type": "string"}]}, {"method_name": "add_sharepoint_list_item", "description": "Add a new item to a SharePoint list.", "parameters": [{"name": "new_item", "description": "The item to add (fields as dict).", "required": true, "type": "object"}, {"name": "site_id", "description": "ID of the SharePoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "Name of the SharePoint site.", "required": false, "type": "string"}, {"name": "list_id", "description": "ID of the SharePoint list.", "required": false, "type": "string"}, {"name": "list_name", "description": "Name of the SharePoint list.", "required": false, "type": "string"}]}, {"method_name": "update_sharepoint_list_item", "description": "Update an existing item in a SharePoint list.", "parameters": [{"name": "update_item", "description": "The item to update (must include item_id and fields).", "required": true, "type": "object"}, {"name": "site_id", "description": "ID of the SharePoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "Name of the SharePoint site.", "required": false, "type": "string"}, {"name": "list_id", "description": "ID of the SharePoint list.", "required": false, "type": "string"}, {"name": "list_name", "description": "Name of the SharePoint list.", "required": false, "type": "string"}]}, {"method_name": "delete_sharepoint_list_item", "description": "Delete an item from a SharePoint list.", "parameters": [{"name": "item_id", "description": "ID of the item to delete.", "required": true, "type": "string"}, {"name": "site_id", "description": "ID of the SharePoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "Name of the SharePoint site.", "required": false, "type": "string"}, {"name": "list_id", "description": "ID of the SharePoint list.", "required": false, "type": "string"}, {"name": "list_name", "description": "Name of the SharePoint list.", "required": false, "type": "string"}]}, {"method_name": "get_sharepoint_list_items", "description": "Get items from a SharePoint list by site and list id or name.", "parameters": [{"name": "site_id", "description": "ID of the SharePoint site.", "required": false, "type": "string"}, {"name": "site_name", "description": "Name of the SharePoint site.", "required": false, "type": "string"}, {"name": "list_id", "description": "ID of the SharePoint list.", "required": false, "type": "string"}, {"name": "list_name", "description": "Name of the SharePoint list.", "required": false, "type": "string"}, {"name": "top", "description": "Maximum number of items to return (default 100).", "required": false, "type": "integer"}]}]}, {"description": "Work with Sharepoint sites, lists and files.", "version": "3.0.0", "methods": [{"method_name": "search_for_site", "description": "Search for a Sharepoint site by name or by domain/hostname.", "parameters": [{"name": "search_string", "description": "name of the Sharepoint site or hostname (e.g. 'beissi-my.sharepoint.com').", "required": true, "type": "string"}]}, {"method_name": "get_sharepoint_site", "description": "Get the Sharepoint site either by id or by name.", "parameters": [{"name": "site", "description": "SiteIdentifier \u2013 The SharePoint site to operate on. Provide either site_id or site_name.", "required": false, "type": "object"}]}, {"method_name": "get_all_sharepoint_sites", "description": "Get all Sharepoint sites known to the user.", "parameters": []}, {"method_name": "download_sharepoint_file", "description": "Download file(s) from the Sharepoint. Allows use of file_id or name. If file_id is given, it is used directly. If only name is given, a search is performed.", "parameters": [{"name": "filelist", "description": "file or files (FileList) with at least file_id or name", "required": true, "type": "object"}, {"name": "site", "description": "SiteIdentifier for the SharePoint site (can be a plain name like 'me', 'my files', a site name, or a full site ID).", "required": false, "type": "object"}, {"name": "attach", "description": "whether to download all files matching the search criteria", "required": false, "type": "boolean"}]}, {"method_name": "search_sharepoint_files", "description": "Search files in the Sharepoint site.", "parameters": [{"name": "search_text", "description": "text to search for, use \"*\" to search for all files", "required": true, "type": "string"}, {"name": "site", "description": "SiteIdentifier for the SharePoint site (can be a plain name like 'me', 'my files', a site name, or a full site ID), or empty to search in all sites", "required": false, "type": "object"}]}, {"method_name": "upload_file_to_sharepoint", "description": "Upload a file to the Sharepoint site.", "parameters": [{"name": "filename", "description": "name of the file.", "required": true, "type": "string"}, {"name": "site", "description": "SiteIdentifier for the SharePoint site (can be a plain name like 'me', 'my files', a site name, or a full site ID).", "required": false, "type": "object"}]}, {"method_name": "get_sharepoint_lists", "description": "Get lists of the Sharepoint site by site id or site name.", "parameters": [{"name": "site", "description": "SiteIdentifier \u2013 The SharePoint site to operate on. Provide either site_id or site_name.", "required": false, "type": "object"}]}, {"method_name": "create_sharepoint_list", "description": "Create list in the Sharepoint site by site id or site name.", "parameters": [{"name": "sharepoint_list", "description": "name of the list and columns to create.", "required": true, "type": "object"}, {"name": "site", "description": "SiteIdentifier \u2013 The SharePoint site to operate on. Provide either site_id or site_name.", "required": false, "type": "object"}]}, {"method_name": "add_sharepoint_list_item", "description": "Add a new item to a SharePoint list.", "parameters": [{"name": "new_item", "description": "The item to add (fields as dict).", "required": true, "type": "object"}, {"name": "site", "description": "SiteIdentifier \u2013 The SharePoint site to operate on. Provide either site_id or site_name.", "required": false, "type": "object"}, {"name": "list_id", "description": "ID of the SharePoint list.", "required": false, "type": "string"}, {"name": "list_name", "description": "Name of the SharePoint list.", "required": false, "type": "string"}]}, {"method_name": "update_sharepoint_list_item", "description": "Update an existing item in a SharePoint list.", "parameters": [{"name": "update_item", "description": "The item to update (must include item_id and fields).", "required": true, "type": "object"}, {"name": "site", "description": "SiteIdentifier \u2013 The SharePoint site to operate on. Provide either site_id or site_name.", "required": false, "type": "object"}, {"name": "list_id", "description": "ID of the SharePoint list.", "required": false, "type": "string"}, {"name": "list_name", "description": "Name of the SharePoint list.", "required": false, "type": "string"}]}, {"method_name": "delete_sharepoint_list_item", "description": "Delete an item from a SharePoint list.", "parameters": [{"name": "item_id", "description": "ID of the item to delete.", "required": true, "type": "string"}, {"name": "site", "description": "SiteIdentifier \u2013 The SharePoint site to operate on. Provide either site_id or site_name.", "required": false, "type": "object"}, {"name": "list_id", "description": "ID of the SharePoint list.", "required": false, "type": "string"}, {"name": "list_name", "description": "Name of the SharePoint list.", "required": false, "type": "string"}]}, {"method_name": "get_sharepoint_list_items", "description": "Get items from a SharePoint list by site and list id or name.", "parameters": [{"name": "site", "description": "SiteIdentifier \u2013 The SharePoint site to operate on. Provide either site_id or site_name.", "required": false, "type": "object"}, {"name": "list_id", "description": "ID of the SharePoint list.", "required": false, "type": "string"}, {"name": "list_name", "description": "Name of the SharePoint list.", "required": false, "type": "string"}, {"name": "top", "description": "Maximum number of items to return (default 100).", "required": false, "type": "integer"}]}]}, {"description": "Work with Sharepoint sites, lists and files.", "version": "3.0.1", "methods": [{"method_name": "search_for_site", "description": "Search for a Sharepoint site by name or by domain/hostname.", "parameters": [{"name": "search_string", "description": "name of the Sharepoint site or hostname (e.g. 'beissi-my.sharepoint.com').", "required": true, "type": "string"}]}, {"method_name": "get_sharepoint_site", "description": "Get the Sharepoint site either by id or by name.", "parameters": [{"name": "site", "description": "SiteIdentifier \u2013 The SharePoint site to operate on. Provide either site_id or site_name.", "required": false, "type": "object"}]}, {"method_name": "get_all_sharepoint_sites", "description": "Get all Sharepoint sites known to the user.", "parameters": []}, {"method_name": "download_sharepoint_file", "description": "Download file(s) from the Sharepoint. Allows use of file_id or name. If file_id is given, it is used directly. If only name is given, a search is performed.", "parameters": [{"name": "filelist", "description": "file or files (FileList) with at least file_id or name", "required": true, "type": "object"}, {"name": "site", "description": "SiteIdentifier for the SharePoint site (can be a plain name like 'me', 'my files', a site name, or a full site ID).", "required": false, "type": "object"}, {"name": "attach", "description": "whether to download all files matching the search criteria", "required": false, "type": "boolean"}]}, {"method_name": "search_sharepoint_files", "description": "Search files in the Sharepoint site.", "parameters": [{"name": "search_text", "description": "text to search for, use \"*\" to search for all files", "required": true, "type": "string"}, {"name": "site", "description": "SiteIdentifier for the SharePoint site (can be a plain name like 'me', 'my files', a site name, or a full site ID), or empty to search in all sites", "required": false, "type": "object"}]}, {"method_name": "upload_file_to_sharepoint", "description": "Upload a file to the Sharepoint site.", "parameters": [{"name": "filename", "description": "name of the file.", "required": true, "type": "string"}, {"name": "site", "description": "SiteIdentifier for the SharePoint site (can be a plain name like 'me', 'my files', a site name, or a full site ID).", "required": false, "type": "object"}]}, {"method_name": "get_sharepoint_lists", "description": "Get lists of the Sharepoint site by site id or site name.", "parameters": [{"name": "site", "description": "SiteIdentifier \u2013 The SharePoint site to operate on. Provide either site_id or site_name.", "required": false, "type": "object"}]}, {"method_name": "create_sharepoint_list", "description": "Create list in the Sharepoint site by site id or site name.", "parameters": [{"name": "sharepoint_list", "description": "name of the list and columns to create.", "required": true, "type": "object"}, {"name": "site", "description": "SiteIdentifier \u2013 The SharePoint site to operate on. Provide either site_id or site_name.", "required": false, "type": "object"}]}, {"method_name": "add_sharepoint_list_item", "description": "Add a new item to a SharePoint list.", "parameters": [{"name": "new_item", "description": "The item to add (fields as dict).", "required": true, "type": "object"}, {"name": "site", "description": "SiteIdentifier \u2013 The SharePoint site to operate on. Provide either site_id or site_name.", "required": false, "type": "object"}, {"name": "list_id", "description": "ID of the SharePoint list.", "required": false, "type": "string"}, {"name": "list_name", "description": "Name of the SharePoint list.", "required": false, "type": "string"}]}, {"method_name": "update_sharepoint_list_item", "description": "Update an existing item in a SharePoint list.", "parameters": [{"name": "update_item", "description": "The item to update (must include item_id and fields).", "required": true, "type": "object"}, {"name": "site", "description": "SiteIdentifier \u2013 The SharePoint site to operate on. Provide either site_id or site_name.", "required": false, "type": "object"}, {"name": "list_id", "description": "ID of the SharePoint list.", "required": false, "type": "string"}, {"name": "list_name", "description": "Name of the SharePoint list.", "required": false, "type": "string"}]}, {"method_name": "delete_sharepoint_list_item", "description": "Delete an item from a SharePoint list.", "parameters": [{"name": "item_id", "description": "ID of the item to delete.", "required": true, "type": "string"}, {"name": "site", "description": "SiteIdentifier \u2013 The SharePoint site to operate on. Provide either site_id or site_name.", "required": false, "type": "object"}, {"name": "list_id", "description": "ID of the SharePoint list.", "required": false, "type": "string"}, {"name": "list_name", "description": "Name of the SharePoint list.", "required": false, "type": "string"}]}, {"method_name": "get_sharepoint_list_items", "description": "Get items from a SharePoint list by site and list id or name.", "parameters": [{"name": "site", "description": "SiteIdentifier \u2013 The SharePoint site to operate on. Provide either site_id or site_name.", "required": false, "type": "object"}, {"name": "list_id", "description": "ID of the SharePoint list.", "required": false, "type": "string"}, {"name": "list_name", "description": "Name of the SharePoint list.", "required": false, "type": "string"}, {"name": "top", "description": "Maximum number of items to return (default 100).", "required": false, "type": "integer"}]}]}]}, "Microsoft Teams": {"name": "Microsoft Teams", "versions": [{"description": "Work with Microsoft Teams.", "version": "1.0.0", "methods": [{"method_name": "post_channel_message", "description": "Post a message to a specific channel in a Microsoft Team. If multiple channels ask user which to use.", "parameters": [{"name": "message_request", "description": "Pydantic model containing team_id, channel_id, and message.", "required": true, "type": "object"}]}, {"method_name": "create_team", "description": "Create a new Microsoft Team using the standard template.", "parameters": [{"name": "team_details", "description": "Details of the team to be created.", "required": true, "type": "object"}]}, {"method_name": "create_chat", "description": "Create a new chat (one-on-one or group) based on the number of recipients.", "parameters": [{"name": "chat_request", "description": "Pydantic model containing a list of recipient IDs.", "required": true, "type": "object"}]}, {"method_name": "send_message_to_chat", "description": "Send a message to a specific chat which needs to be created first.", "parameters": [{"name": "message_request", "description": "Pydantic model containing the chat ID and message content.", "required": true, "type": "object"}]}, {"method_name": "add_users_to_team", "description": "Add one or more users to a Microsoft Team.", "parameters": [{"name": "add_users_request", "description": "Pydantic model containing the team ID and list of user IDs.", "required": true, "type": "object"}]}, {"method_name": "reply_to_message", "description": "Reply to a specific message in a Microsoft Team channel.", "parameters": [{"name": "reply_request", "description": "Pydantic model containing team_id, channel_id, message_id, and the reply content.", "required": true, "type": "object"}]}, {"method_name": "get_joined_teams", "description": "Get all Teams the user is joined to with the full details. Can be used to search Teams as well.", "parameters": []}, {"method_name": "search_team_by_name", "description": "Search for a Microsoft Team by its name.", "parameters": [{"name": "search_request", "description": "Pydantic model containing the team name to search for.", "required": true, "type": "object"}]}, {"method_name": "get_team_members", "description": "Get the members of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "get_team_channels", "description": "Get the channels of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "search_user", "description": "Search for a user by email, first name, or last name.", "parameters": [{"name": "user_search", "description": "The search criteria (email, first name, or last name).", "required": true, "type": "object"}]}, {"method_name": "get_channel_messages", "description": "Get messages from a specific channel in a Microsoft Team. Message replies not included but you can use \"get_message_replies\" if needed.", "parameters": [{"name": "messages_request", "description": "Pydantic model containing the team ID, channel ID, and an optional limit for the number of messages to retrieve.", "required": true, "type": "object"}]}, {"method_name": "get_message_replies", "description": "Get replies to a specific message in a Microsoft Team channel.", "parameters": [{"name": "replies_request", "description": "Pydantic model containing the team ID, channel ID, and message ID.", "required": true, "type": "object"}]}]}, {"description": "Work with Microsoft Teams.", "version": "1.0.1", "methods": [{"method_name": "post_channel_message", "description": "Post a message to a specific channel in a Microsoft Team. If multiple channels ask user which to use.", "parameters": [{"name": "message_request", "description": "Pydantic model containing team_id, channel_id, and message.", "required": true, "type": "object"}]}, {"method_name": "create_team", "description": "Create a new Microsoft Team using the standard template.", "parameters": [{"name": "team_details", "description": "Details of the team to be created.", "required": true, "type": "object"}]}, {"method_name": "create_chat", "description": "Create a new chat (one-on-one or group) based on the number of recipients.", "parameters": [{"name": "chat_request", "description": "Pydantic model containing a list of recipient IDs.", "required": true, "type": "object"}]}, {"method_name": "send_message_to_chat", "description": "Send a message to a specific chat which needs to be created first.", "parameters": [{"name": "message_request", "description": "Pydantic model containing the chat ID and message content.", "required": true, "type": "object"}]}, {"method_name": "add_users_to_team", "description": "Add one or more users to a Microsoft Team.", "parameters": [{"name": "add_users_request", "description": "Pydantic model containing the team ID and list of user IDs.", "required": true, "type": "object"}]}, {"method_name": "reply_to_message", "description": "Reply to a specific message in a Microsoft Team channel.", "parameters": [{"name": "reply_request", "description": "Pydantic model containing team_id, channel_id, message_id, and the reply content.", "required": true, "type": "object"}]}, {"method_name": "get_joined_teams", "description": "Get all Teams the user is joined to with the full details. Can be used to search Teams as well.", "parameters": []}, {"method_name": "search_team_by_name", "description": "Search for a Microsoft Team by its name.", "parameters": [{"name": "search_request", "description": "Pydantic model containing the team name to search for.", "required": true, "type": "object"}]}, {"method_name": "get_team_members", "description": "Get the members of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "get_team_channels", "description": "Get the channels of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "search_user", "description": "Search for a user by email, first name, or last name.", "parameters": [{"name": "user_search", "description": "The search criteria (email, first name, or last name).", "required": true, "type": "object"}]}, {"method_name": "get_channel_messages", "description": "Get messages from a specific channel in a Microsoft Team. Message replies not included but you can use \"get_message_replies\" if needed.", "parameters": [{"name": "messages_request", "description": "Pydantic model containing the team ID, channel ID, and an optional limit for the number of messages to retrieve.", "required": true, "type": "object"}]}, {"method_name": "get_message_replies", "description": "Get replies to a specific message in a Microsoft Team channel.", "parameters": [{"name": "replies_request", "description": "Pydantic model containing the team ID, channel ID, and message ID.", "required": true, "type": "object"}]}]}, {"description": "Work with Microsoft Teams.", "version": "1.0.2", "methods": [{"method_name": "get_joined_teams", "description": "Get all Teams the user is joined to with the full details. Can be used to search Teams as well.", "parameters": []}, {"method_name": "search_team_by_name", "description": "Search for a Microsoft Team by its name.", "parameters": [{"name": "search_request", "description": "Pydantic model containing the team name to search for.", "required": true, "type": "object"}]}, {"method_name": "get_team_members", "description": "Get the members of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "get_team_channels", "description": "Get the channels of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "search_user", "description": "Search for a user by email, first name, or last name.", "parameters": [{"name": "user_search", "description": "The search criteria (email, first name, or last name).", "required": true, "type": "object"}]}, {"method_name": "get_channel_messages", "description": "Get messages from a specific channel in a Microsoft Team. Message replies not included but you can use \"get_message_replies\" if needed.", "parameters": [{"name": "messages_request", "description": "Pydantic model containing the team ID, channel ID, and an limit for the number of messages to retrieve. Use 10 if not specified.", "required": true, "type": "object"}]}, {"method_name": "get_message_replies", "description": "Get replies to a specific message in a Microsoft Team channel.", "parameters": [{"name": "replies_request", "description": "Pydantic model containing the team ID, channel ID, and message ID.", "required": true, "type": "object"}]}, {"method_name": "post_channel_message", "description": "Post a message to a specific channel in a Microsoft Team. If multiple channels ask user which to use.", "parameters": [{"name": "message_request", "description": "Pydantic model containing team_id, channel_id, and message.", "required": true, "type": "object"}]}, {"method_name": "create_team", "description": "Create a new Microsoft Team using the standard template.", "parameters": [{"name": "team_details", "description": "Details of the team to be created.", "required": true, "type": "object"}]}, {"method_name": "create_chat", "description": "Create a new chat (one-on-one or group) based on the number of recipients.", "parameters": [{"name": "chat_request", "description": "Pydantic model containing a list of recipient IDs.", "required": true, "type": "object"}]}, {"method_name": "send_message_to_chat", "description": "Send a message to a specific chat which needs to be created first.", "parameters": [{"name": "message_request", "description": "Pydantic model containing the chat ID and message content.", "required": true, "type": "object"}]}, {"method_name": "add_users_to_team", "description": "Add one or more users to a Microsoft Team.", "parameters": [{"name": "add_users_request", "description": "Pydantic model containing the team ID and list of user IDs.", "required": true, "type": "object"}]}, {"method_name": "reply_to_message", "description": "Reply to a specific message in a Microsoft Team channel.", "parameters": [{"name": "reply_request", "description": "Pydantic model containing team_id, channel_id, message_id, and the reply content.", "required": true, "type": "object"}]}]}, {"description": "Work with Microsoft Teams.", "version": "1.0.3", "methods": [{"method_name": "get_joined_teams", "description": "Get all Teams the user is joined to with the full details. Can be used to search Teams as well.", "parameters": []}, {"method_name": "search_team_by_name", "description": "Search for a Microsoft Team by its name.", "parameters": [{"name": "search_request", "description": "Pydantic model containing the team name to search for.", "required": true, "type": "object"}]}, {"method_name": "get_team_members", "description": "Get the members of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "get_team_channels", "description": "Get the channels of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "search_user", "description": "Search for a user by email, first name, or last name.", "parameters": [{"name": "user_search", "description": "The search criteria (email, first name, or last name).", "required": true, "type": "object"}]}, {"method_name": "get_channel_messages", "description": "Get messages from a specific channel in a Microsoft Team. Message replies not included but you can use \"get_message_replies\" if needed.", "parameters": [{"name": "messages_request", "description": "Pydantic model containing the team ID, channel ID, and an limit for the number of messages to retrieve. Use 10 if not specified.", "required": true, "type": "object"}]}, {"method_name": "get_message_replies", "description": "Get replies to a specific message in a Microsoft Team channel.", "parameters": [{"name": "replies_request", "description": "Pydantic model containing the team ID, channel ID, and message ID.", "required": true, "type": "object"}]}, {"method_name": "post_channel_message", "description": "Post a message to a specific channel in a Microsoft Team. If multiple channels ask user which to use.", "parameters": [{"name": "message_request", "description": "Pydantic model containing team_id, channel_id, and message.", "required": true, "type": "object"}]}, {"method_name": "create_team", "description": "Create a new Microsoft Team using the standard template.", "parameters": [{"name": "team_details", "description": "Details of the team to be created.", "required": true, "type": "object"}]}, {"method_name": "create_chat", "description": "Create a new chat (one-on-one or group) based on the number of recipients.", "parameters": [{"name": "chat_request", "description": "Pydantic model containing a list of recipient IDs.", "required": true, "type": "object"}]}, {"method_name": "send_message_to_chat", "description": "Send a message to a specific chat which needs to be created first.", "parameters": [{"name": "message_request", "description": "Pydantic model containing the chat ID and message content.", "required": true, "type": "object"}]}, {"method_name": "add_users_to_team", "description": "Add one or more users to a Microsoft Team.", "parameters": [{"name": "add_users_request", "description": "Pydantic model containing the team ID and list of user IDs.", "required": true, "type": "object"}]}, {"method_name": "reply_to_message", "description": "Reply to a specific message in a Microsoft Team channel.", "parameters": [{"name": "reply_request", "description": "Pydantic model containing team_id, channel_id, message_id, and the reply content.", "required": true, "type": "object"}]}]}, {"description": "Work with Microsoft Teams.", "version": "1.0.4", "methods": [{"method_name": "get_joined_teams", "description": "Get all Teams the user is joined to with the full details. Can be used to search Teams as well.", "parameters": []}, {"method_name": "search_team_by_name", "description": "Search for a Microsoft Team by its name.", "parameters": [{"name": "search_request", "description": "Pydantic model containing the team name to search for.", "required": true, "type": "object"}]}, {"method_name": "get_team_members", "description": "Get the members of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "get_team_channels", "description": "Get the channels of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "search_user", "description": "Search for a user by email, first name, or last name.", "parameters": [{"name": "user_search", "description": "The search criteria (email, first name, or last name).", "required": true, "type": "object"}]}, {"method_name": "get_channel_messages", "description": "Get messages from a specific channel in a Microsoft Team. Message replies not included but you can use \"get_message_replies\" if needed.", "parameters": [{"name": "messages_request", "description": "Pydantic model containing the team ID, channel ID, and an limit for the number of messages to retrieve. Use 10 if not specified.", "required": true, "type": "object"}]}, {"method_name": "get_message_replies", "description": "Get replies to a specific message in a Microsoft Team channel.", "parameters": [{"name": "replies_request", "description": "Pydantic model containing the team ID, channel ID, and message ID.", "required": true, "type": "object"}]}, {"method_name": "post_channel_message", "description": "Post a message to a specific channel in a Microsoft Team. If multiple channels ask user which to use.", "parameters": [{"name": "message_request", "description": "Pydantic model containing team_id, channel_id, and message.", "required": true, "type": "object"}]}, {"method_name": "create_team", "description": "Create a new Microsoft Team using the standard template.", "parameters": [{"name": "team_details", "description": "Details of the team to be created.", "required": true, "type": "object"}]}, {"method_name": "create_chat", "description": "Create a new chat (one-on-one or group) based on the number of recipients.", "parameters": [{"name": "chat_request", "description": "Pydantic model containing a list of recipient IDs.", "required": true, "type": "object"}]}, {"method_name": "send_message_to_chat", "description": "Send a message to a specific chat which needs to be created first.", "parameters": [{"name": "message_request", "description": "Pydantic model containing the chat ID and message content.", "required": true, "type": "object"}]}, {"method_name": "add_users_to_team", "description": "Add one or more users to a Microsoft Team.", "parameters": [{"name": "add_users_request", "description": "Pydantic model containing the team ID and list of user IDs.", "required": true, "type": "object"}]}, {"method_name": "reply_to_message", "description": "Reply to a specific message in a Microsoft Team channel.", "parameters": [{"name": "reply_request", "description": "Pydantic model containing team_id, channel_id, message_id, and the reply content.", "required": true, "type": "object"}]}]}, {"description": "Work with Microsoft Teams.", "version": "1.1.0", "methods": [{"method_name": "get_joined_teams", "description": "Get all Teams the user is joined to with the full details. Can be used to search Teams as well.", "parameters": []}, {"method_name": "search_team_by_name", "description": "Search for a Microsoft Team by its name.", "parameters": [{"name": "search_request", "description": "Pydantic model containing the team name to search for.", "required": true, "type": "object"}]}, {"method_name": "get_team_members", "description": "Get the members of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "get_team_channels", "description": "Get the channels of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "search_user", "description": "Search for a user by email, first name, or last name.", "parameters": [{"name": "user_search", "description": "The search criteria (email, first name, or last name).", "required": true, "type": "object"}]}, {"method_name": "get_channel_messages", "description": "Get messages from a specific channel in a Microsoft Team. Message replies not included but you can use \"get_message_replies\" if needed.", "parameters": [{"name": "messages_request", "description": "Pydantic model containing the team ID, channel ID, and an limit for the number of messages to retrieve. Use 10 if not specified.", "required": true, "type": "object"}]}, {"method_name": "get_message_replies", "description": "Get replies to a specific message in a Microsoft Team channel.", "parameters": [{"name": "replies_request", "description": "Pydantic model containing the team ID, channel ID, and message ID.", "required": true, "type": "object"}]}, {"method_name": "post_channel_message", "description": "Post a message to a specific channel in a Microsoft Team. If multiple channels ask user which to use.", "parameters": [{"name": "message_request", "description": "Pydantic model containing team_id, channel_id, and message.", "required": true, "type": "object"}]}, {"method_name": "create_team", "description": "Create a new Microsoft Team using the standard template.", "parameters": [{"name": "team_details", "description": "Details of the team to be created.", "required": true, "type": "object"}]}, {"method_name": "create_chat", "description": "Create a new chat (one-on-one or group) based on the number of recipients.", "parameters": [{"name": "chat_request", "description": "Pydantic model containing a list of recipient IDs.", "required": true, "type": "object"}]}, {"method_name": "send_message_to_chat", "description": "Send a message to a specific chat which needs to be created first.", "parameters": [{"name": "message_request", "description": "Pydantic model containing the chat ID and message content.", "required": true, "type": "object"}]}, {"method_name": "add_users_to_team", "description": "Add one or more users to a Microsoft Team.", "parameters": [{"name": "add_users_request", "description": "Pydantic model containing the team ID and list of user IDs.", "required": true, "type": "object"}]}, {"method_name": "reply_to_message", "description": "Reply to a specific message in a Microsoft Team channel.", "parameters": [{"name": "reply_request", "description": "Pydantic model containing team_id, channel_id, message_id, and the reply content.", "required": true, "type": "object"}]}]}, {"description": "Work with Microsoft Teams.", "version": "1.1.1", "methods": [{"method_name": "get_joined_teams", "description": "Get all Teams the user is joined to with the full details. Can be used to search Teams as well.", "parameters": []}, {"method_name": "search_team_by_name", "description": "Search for a Microsoft Team by its name.", "parameters": [{"name": "search_request", "description": "Pydantic model containing the team name to search for.", "required": true, "type": "object"}]}, {"method_name": "get_team_members", "description": "Get the members of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "get_team_channels", "description": "Get the channels of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "search_user", "description": "Search for a user by email, first name, or last name.", "parameters": [{"name": "user_search", "description": "The search criteria (email, first name, or last name).", "required": true, "type": "object"}]}, {"method_name": "get_channel_messages", "description": "Get messages from a specific channel in a Microsoft Team. Message replies not included but you can use \"get_message_replies\" if needed.", "parameters": [{"name": "messages_request", "description": "Pydantic model containing the team ID, channel ID, and an limit for the number of messages to retrieve. Use 10 if not specified.", "required": true, "type": "object"}]}, {"method_name": "get_message_replies", "description": "Get replies to a specific message in a Microsoft Team channel.", "parameters": [{"name": "replies_request", "description": "Pydantic model containing the team ID, channel ID, and message ID.", "required": true, "type": "object"}]}, {"method_name": "post_channel_message", "description": "Post a message to a specific channel in a Microsoft Team. If multiple channels ask user which to use.", "parameters": [{"name": "message_request", "description": "Pydantic model containing team_id, channel_id, and message.", "required": true, "type": "object"}]}, {"method_name": "create_team", "description": "Create a new Microsoft Team using the standard template.", "parameters": [{"name": "team_details", "description": "Details of the team to be created.", "required": true, "type": "object"}]}, {"method_name": "create_chat", "description": "Create a new chat (one-on-one or group) based on the number of recipients.", "parameters": [{"name": "chat_request", "description": "Pydantic model containing a list of recipient IDs.", "required": true, "type": "object"}]}, {"method_name": "send_message_to_chat", "description": "Send a message to a specific chat which needs to be created first.", "parameters": [{"name": "message_request", "description": "Pydantic model containing the chat ID and message content.", "required": true, "type": "object"}]}, {"method_name": "add_users_to_team", "description": "Add one or more users to a Microsoft Team.", "parameters": [{"name": "add_users_request", "description": "Pydantic model containing the team ID and list of user IDs.", "required": true, "type": "object"}]}, {"method_name": "reply_to_message", "description": "Reply to a specific message in a Microsoft Team channel.", "parameters": [{"name": "reply_request", "description": "Pydantic model containing team_id, channel_id, message_id, and the reply content.", "required": true, "type": "object"}]}]}, {"description": "Work with Microsoft Teams.", "version": "1.2.0", "methods": [{"method_name": "get_joined_teams", "description": "Get all Teams the user is joined to with the full details. Can be used to search Teams as well.", "parameters": []}, {"method_name": "search_team_by_name", "description": "Search for a Microsoft Team by its name.", "parameters": [{"name": "search_request", "description": "Pydantic model containing the team name to search for.", "required": true, "type": "object"}]}, {"method_name": "get_team_members", "description": "Get the members of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "get_team_channels", "description": "Get the channels of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "search_user", "description": "Search for a user by email, first name, or last name.", "parameters": [{"name": "user_search", "description": "The search criteria (email, first name, or last name).", "required": true, "type": "object"}]}, {"method_name": "get_channel_messages", "description": "Get messages from a specific channel in a Microsoft Team. Message replies not included but you can use \"get_message_replies\" if needed.", "parameters": [{"name": "messages_request", "description": "Pydantic model containing the team ID, channel ID, and an limit for the number of messages to retrieve. Use 10 if not specified.", "required": true, "type": "object"}]}, {"method_name": "get_message_replies", "description": "Get replies to a specific message in a Microsoft Team channel.", "parameters": [{"name": "replies_request", "description": "Pydantic model containing the team ID, channel ID, and message ID.", "required": true, "type": "object"}]}, {"method_name": "post_channel_message", "description": "Post a message to a specific channel in a Microsoft Team. If multiple channels ask user which to use.", "parameters": [{"name": "message_request", "description": "Pydantic model containing team_id, channel_id, and message.", "required": true, "type": "object"}]}, {"method_name": "create_team", "description": "Create a new Microsoft Team using the standard template.", "parameters": [{"name": "team_details", "description": "Details of the team to be created.", "required": true, "type": "object"}]}, {"method_name": "create_chat", "description": "Create a new chat (one-on-one or group) based on the number of recipients.", "parameters": [{"name": "chat_request", "description": "Pydantic model containing a list of recipient IDs.", "required": true, "type": "object"}]}, {"method_name": "send_message_to_chat", "description": "Send a message to a specific chat which needs to be created first.", "parameters": [{"name": "message_request", "description": "Pydantic model containing the chat ID and message content.", "required": true, "type": "object"}]}, {"method_name": "add_users_to_team", "description": "Add one or more users to a Microsoft Team.", "parameters": [{"name": "add_users_request", "description": "Pydantic model containing the team ID and list of user IDs.", "required": true, "type": "object"}]}, {"method_name": "reply_to_message", "description": "Reply to a specific message in a Microsoft Team channel.", "parameters": [{"name": "reply_request", "description": "Pydantic model containing team_id, channel_id, message_id, and the reply content.", "required": true, "type": "object"}]}]}, {"description": "Work with Microsoft Teams.", "version": "1.2.1", "methods": [{"method_name": "get_joined_teams", "description": "Get all Teams the user is joined to with the full details. Can be used to search Teams as well.", "parameters": []}, {"method_name": "search_team_by_name", "description": "Search for a Microsoft Team by its name.", "parameters": [{"name": "search_request", "description": "Pydantic model containing the team name to search for.", "required": true, "type": "object"}]}, {"method_name": "get_team_members", "description": "Get the members of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "get_team_channels", "description": "Get the channels of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "search_user", "description": "Search for a user by email, first name, or last name.", "parameters": [{"name": "user_search", "description": "The search criteria (email, first name, or last name).", "required": true, "type": "object"}]}, {"method_name": "get_channel_messages", "description": "Get messages from a specific channel in a Microsoft Team. Message replies not included but you can use \"get_message_replies\" if needed.", "parameters": [{"name": "messages_request", "description": "Pydantic model containing the team ID, channel ID, and an limit for the number of messages to retrieve. Use 10 if not specified.", "required": true, "type": "object"}]}, {"method_name": "get_message_replies", "description": "Get replies to a specific message in a Microsoft Team channel.", "parameters": [{"name": "replies_request", "description": "Pydantic model containing the team ID, channel ID, and message ID.", "required": true, "type": "object"}]}, {"method_name": "post_channel_message", "description": "Post a message to a specific channel in a Microsoft Team. If multiple channels ask user which to use.", "parameters": [{"name": "message_request", "description": "Pydantic model containing team_id, channel_id, and message.", "required": true, "type": "object"}]}, {"method_name": "create_team", "description": "Create a new Microsoft Team using the standard template.", "parameters": [{"name": "team_details", "description": "Details of the team to be created.", "required": true, "type": "object"}]}, {"method_name": "create_chat", "description": "Create a new chat (one-on-one or group) based on the number of recipients.", "parameters": [{"name": "chat_request", "description": "Pydantic model containing a list of recipient IDs.", "required": true, "type": "object"}]}, {"method_name": "send_message_to_chat", "description": "Send a message to a specific chat which needs to be created first.", "parameters": [{"name": "message_request", "description": "Pydantic model containing the chat ID and message content.", "required": true, "type": "object"}]}, {"method_name": "add_users_to_team", "description": "Add one or more users to a Microsoft Team.", "parameters": [{"name": "add_users_request", "description": "Pydantic model containing the team ID and list of user IDs.", "required": true, "type": "object"}]}, {"method_name": "reply_to_message", "description": "Reply to a specific message in a Microsoft Team channel.", "parameters": [{"name": "reply_request", "description": "Pydantic model containing team_id, channel_id, message_id, and the reply content.", "required": true, "type": "object"}]}]}, {"description": "Work with Microsoft Teams.", "version": "1.2.2", "methods": [{"method_name": "get_joined_teams", "description": "Get all Teams the user is joined to with the full details. Can be used to search Teams as well.", "parameters": []}, {"method_name": "search_team_by_name", "description": "Search for a Microsoft Team by its name.", "parameters": [{"name": "search_request", "description": "Pydantic model containing the team name to search for.", "required": true, "type": "object"}]}, {"method_name": "get_team_members", "description": "Get the members of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "get_team_channels", "description": "Get the channels of a specific Microsoft Team.", "parameters": [{"name": "team_id", "description": "The ID of the Microsoft Team.", "required": true, "type": "string"}]}, {"method_name": "search_user", "description": "Search for a user by email, first name, or last name.", "parameters": [{"name": "user_search", "description": "The search criteria (email, first name, or last name).", "required": true, "type": "object"}]}, {"method_name": "get_channel_messages", "description": "Get messages from a specific channel in a Microsoft Team. Message replies not included but you can use \"get_message_replies\" if needed.", "parameters": [{"name": "messages_request", "description": "Pydantic model containing the team ID, channel ID, and an limit for the number of messages to retrieve. Use 10 if not specified.", "required": true, "type": "object"}]}, {"method_name": "get_message_replies", "description": "Get replies to a specific message in a Microsoft Team channel.", "parameters": [{"name": "replies_request", "description": "Pydantic model containing the team ID, channel ID, and message ID.", "required": true, "type": "object"}]}, {"method_name": "post_channel_message", "description": "Post a message to a specific channel in a Microsoft Team. If multiple channels ask user which to use.", "parameters": [{"name": "message_request", "description": "Pydantic model containing team_id, channel_id, and message.", "required": true, "type": "object"}]}, {"method_name": "create_team", "description": "Create a new Microsoft Team using the standard template.", "parameters": [{"name": "team_details", "description": "Details of the team to be created.", "required": true, "type": "object"}]}, {"method_name": "create_chat", "description": "Create a new chat (one-on-one or group) based on the number of recipients.", "parameters": [{"name": "chat_request", "description": "Pydantic model containing a list of recipient IDs.", "required": true, "type": "object"}]}, {"method_name": "send_message_to_chat", "description": "Send a message to a specific chat which needs to be created first.", "parameters": [{"name": "message_request", "description": "Pydantic model containing the chat ID and message content.", "required": true, "type": "object"}]}, {"method_name": "add_users_to_team", "description": "Add one or more users to a Microsoft Team.", "parameters": [{"name": "add_users_request", "description": "Pydantic model containing the team ID and list of user IDs.", "required": true, "type": "object"}]}, {"method_name": "reply_to_message", "description": "Reply to a specific message in a Microsoft Team channel.", "parameters": [{"name": "reply_request", "description": "Pydantic model containing team_id, channel_id, message_id, and the reply content.", "required": true, "type": "object"}]}]}]}, "PDF": {"name": "PDF", "versions": [{"description": "Reading and finding text- and image-based PDFs.", "version": "0.1.0", "methods": [{"method_name": "read_text_from_pdf", "description": "Returns text from a PDF file.\nCan be used to extract text from a PDF file and then\nsummarize the text, extract keywords, or perform any other\nNLP tasks.", "parameters": [{"name": "filename", "description": "The name of the file to read.", "required": true, "type": "string"}]}, {"method_name": "find_text_in_pdf", "description": "Returns the pages where the text was found in the PDF.\nReport to user paragraphs where the text was found in the PDF.", "parameters": [{"name": "text_to_find", "description": "The text to find in the PDF.", "required": true, "type": "string"}, {"name": "filename", "description": "The name of the file to read.", "required": true, "type": "string"}, {"name": "case_sensitive", "description": "Whether the search should be case sensitive (default False)", "required": false, "type": "boolean"}]}]}, {"description": "Reading and finding text- and image-based PDFs.", "version": "0.1.1", "methods": [{"method_name": "read_text_from_pdf", "description": "Returns text from a PDF file.\nCan be used to extract text from a PDF file and then\nsummarize the text, extract keywords, or perform any other\nNLP tasks.", "parameters": [{"name": "filename", "description": "The name of the file to read.", "required": true, "type": "string"}]}, {"method_name": "find_text_in_pdf", "description": "Returns the pages where the text was found in the PDF.\nReport to user paragraphs where the text was found in the PDF.", "parameters": [{"name": "text_to_find", "description": "The text to find in the PDF.", "required": true, "type": "string"}, {"name": "filename", "description": "The name of the file to read.", "required": true, "type": "string"}, {"name": "case_sensitive", "description": "Whether the search should be case sensitive (default False)", "required": false, "type": "boolean"}]}]}, {"description": "Reading and finding text- and image-based PDFs.", "version": "0.1.2", "methods": [{"method_name": "read_text_from_pdf", "description": "Returns text from a PDF file.\nCan be used to extract text from a PDF file and then\nsummarize the text, extract keywords, or perform any other\nNLP tasks.", "parameters": [{"name": "filename", "description": "The name of the file to read.", "required": true, "type": "string"}]}, {"method_name": "find_text_in_pdf", "description": "Returns the pages where the text was found in the PDF.\nReport to user paragraphs where the text was found in the PDF.", "parameters": [{"name": "text_to_find", "description": "The text to find in the PDF.", "required": true, "type": "string"}, {"name": "filename", "description": "The name of the file to read.", "required": true, "type": "string"}, {"name": "case_sensitive", "description": "Whether the search should be case sensitive (default False)", "required": false, "type": "boolean"}]}]}, {"description": "Reading and finding text- and image-based PDFs.", "version": "1.0.0", "methods": [{"method_name": "read_text_from_pdf", "description": "Returns text from a PDF file.\nCan be used to extract text from a PDF file and then\nsummarize the text, extract keywords, or perform any other\nNLP tasks.", "parameters": [{"name": "filename", "description": "The name of the file to read.", "required": true, "type": "string"}]}, {"method_name": "find_text_in_pdf", "description": "Returns the pages where the text was found in the PDF.\nReport to user paragraphs where the text was found in the PDF.", "parameters": [{"name": "text_to_find", "description": "The text to find in the PDF.", "required": true, "type": "string"}, {"name": "filename", "description": "The name of the file to read.", "required": true, "type": "string"}, {"name": "case_sensitive", "description": "Whether the search should be case sensitive (default False)", "required": false, "type": "boolean"}]}]}, {"description": "Reading and finding text- and image-based PDFs.", "version": "1.0.1", "methods": [{"method_name": "read_text_from_pdf", "description": "Returns text from a PDF file.\nCan be used to extract text from a PDF file and then\nsummarize the text, extract keywords, or perform any other\nNLP tasks.", "parameters": [{"name": "filename", "description": "The name of the file to read.", "required": true, "type": "string"}]}, {"method_name": "find_text_in_pdf", "description": "Returns the pages where the text was found in the PDF.\nReport to user paragraphs where the text was found in the PDF.", "parameters": [{"name": "text_to_find", "description": "The text to find in the PDF.", "required": true, "type": "string"}, {"name": "filename", "description": "The name of the file to read.", "required": true, "type": "string"}, {"name": "case_sensitive", "description": "Whether the search should be case sensitive (default False)", "required": false, "type": "boolean"}]}]}, {"description": "Reading and finding text- and image-based PDFs.", "version": "1.0.2", "methods": [{"method_name": "read_text_from_pdf", "description": "Returns text from a PDF file.\nCan be used to extract text from a PDF file and then\nsummarize the text, extract keywords, or perform any other\nNLP tasks.", "parameters": [{"name": "filename", "description": "The name of the file to read.", "required": true, "type": "string"}]}, {"method_name": "find_text_in_pdf", "description": "Returns the pages where the text was found in the PDF.\nReport to user paragraphs where the text was found in the PDF.", "parameters": [{"name": "text_to_find", "description": "The text to find in the PDF.", "required": true, "type": "string"}, {"name": "filename", "description": "The name of the file to read.", "required": true, "type": "string"}, {"name": "case_sensitive", "description": "Whether the search should be case sensitive (default False)", "required": false, "type": "boolean"}]}]}, {"description": "Reading and finding text- and image-based PDFs.", "version": "1.0.3", "methods": [{"method_name": "read_text_from_pdf", "description": "Returns text from a PDF file.\nCan be used to extract text from a PDF file and then\nsummarize the text, extract keywords, or perform any other\nNLP tasks.", "parameters": [{"name": "filename", "description": "The name of the file to read.", "required": true, "type": "string"}]}, {"method_name": "find_text_in_pdf", "description": "Returns the pages where the text was found in the PDF.\nReport to user paragraphs where the text was found in the PDF.", "parameters": [{"name": "text_to_find", "description": "The text to find in the PDF.", "required": true, "type": "string"}, {"name": "filename", "description": "The name of the file to read.", "required": true, "type": "string"}, {"name": "case_sensitive", "description": "Whether the search should be case sensitive (default False)", "required": false, "type": "boolean"}]}]}, {"description": "Reading and finding text- and image-based PDFs.", "version": "1.0.4", "methods": [{"method_name": "read_text_from_pdf", "description": "Returns text from a PDF file.\nCan be used to extract text from a PDF file and then\nsummarize the text, extract keywords, or perform any other\nNLP tasks.", "parameters": [{"name": "filename", "description": "The name of the file to read.", "required": true, "type": "string"}]}, {"method_name": "find_text_in_pdf", "description": "Returns the pages where the text was found in the PDF.\nReport to user paragraphs where the text was found in the PDF.", "parameters": [{"name": "text_to_find", "description": "The text to find in the PDF.", "required": true, "type": "string"}, {"name": "filename", "description": "The name of the file to read.", "required": true, "type": "string"}, {"name": "case_sensitive", "description": "Whether the search should be case sensitive (default False)", "required": false, "type": "boolean"}]}]}]}, "Perplexity": {"name": "Perplexity", "versions": [{"description": "Search the web with Perplexity", "version": "0.0.1", "methods": [{"method_name": "search", "description": "Search the web for the given query and return the results in the specified format.", "parameters": [{"name": "query", "description": "The query to search for.", "required": true, "type": "string"}]}]}, {"description": "Search the web with Perplexity", "version": "1.0.0", "methods": [{"method_name": "search", "description": "Search the web for the given query and return the results in the specified format.", "parameters": [{"name": "query", "description": "The query to search for.", "required": true, "type": "string"}]}]}, {"description": "Search the web with Perplexity", "version": "1.0.1", "methods": [{"method_name": "search", "description": "Search the web for the given query and return the results in the specified format.", "parameters": [{"name": "query", "description": "The query to search for.", "required": true, "type": "string"}]}]}, {"description": "Search the web with Perplexity", "version": "1.1.0", "methods": [{"method_name": "search", "description": "Search the web for the given query and return the results in the specified format.", "parameters": [{"name": "query", "description": "The query to search for.", "required": true, "type": "string"}]}]}, {"description": "Search the web with Perplexity", "version": "1.1.1", "methods": [{"method_name": "search", "description": "Search the web for the given query and return the results in the specified format.", "parameters": [{"name": "query", "description": "The query to search for.", "required": true, "type": "string"}]}]}, {"description": "Search the web with Perplexity", "version": "1.1.2", "methods": [{"method_name": "search", "description": "Search the web for the given query and return the results in the specified format.", "parameters": [{"name": "query", "description": "The query to search for.", "required": true, "type": "string"}]}]}]}, "Robocorp": {"name": "Robocorp", "versions": [{"description": "Manage Robocorp automations from agents", "version": "1.0.0", "methods": [{"method_name": "list_processes", "description": "List the Control Room processes including names and ID's.", "parameters": []}, {"method_name": "start_process_run", "description": "Start a process run based on the process ID which you can get from list_processes.", "parameters": [{"name": "process_id", "description": "The ID of the process to run.", "required": true, "type": "string"}]}, {"method_name": "get_process_run", "description": "Get details for a specific process run.", "parameters": [{"name": "process_run_id", "description": "The ID of the process run to retrieve, can be found e.g. from the start_process_run action", "required": true, "type": "string"}]}]}, {"description": "Manage Robocorp automations from agents", "version": "1.0.1", "methods": [{"method_name": "list_processes", "description": "List the Control Room processes including names and ID's.", "parameters": []}, {"method_name": "start_process_run", "description": "Start a process run based on the process ID which you can get from list_processes.", "parameters": [{"name": "process_id", "description": "The ID of the process to run.", "required": true, "type": "string"}]}, {"method_name": "get_process_run", "description": "Get details for a specific process run.", "parameters": [{"name": "process_run_id", "description": "The ID of the process run to retrieve, can be found e.g. from the start_process_run action", "required": true, "type": "string"}]}]}, {"description": "Manage Robocorp automations from agents", "version": "1.1.0", "methods": [{"method_name": "list_processes", "description": "List the Control Room processes including names and ID's.", "parameters": []}, {"method_name": "start_process_run", "description": "Start a process run based on the process ID which you can get from list_processes.", "parameters": [{"name": "process_id", "description": "The ID of the process to run.", "required": true, "type": "string"}]}, {"method_name": "get_process_run", "description": "Get details for a specific process run.", "parameters": [{"name": "process_run_id", "description": "The ID of the process run to retrieve, can be found e.g. from the start_process_run action", "required": true, "type": "string"}]}]}, {"description": "Manage Robocorp automations from agents", "version": "1.1.1", "methods": [{"method_name": "list_processes", "description": "List the Control Room processes including names and ID's.", "parameters": []}, {"method_name": "start_process_run", "description": "Start a process run based on the process ID which you can get from list_processes.", "parameters": [{"name": "process_id", "description": "The ID of the process to run.", "required": true, "type": "string"}]}, {"method_name": "get_process_run", "description": "Get details for a specific process run.", "parameters": [{"name": "process_run_id", "description": "The ID of the process run to retrieve, can be found e.g. from the start_process_run action", "required": true, "type": "string"}]}]}, {"description": "Manage Robocorp automations from agents", "version": "1.1.2", "methods": [{"method_name": "list_processes", "description": "List the Control Room processes including names and ID's.", "parameters": []}, {"method_name": "start_process_run", "description": "Start a process run based on the process ID which you can get from list_processes.", "parameters": [{"name": "process_id", "description": "The ID of the process to run.", "required": true, "type": "string"}]}, {"method_name": "get_process_run", "description": "Get details for a specific process run.", "parameters": [{"name": "process_run_id", "description": "The ID of the process run to retrieve, can be found e.g. from the start_process_run action", "required": true, "type": "string"}]}]}]}, "Salesforce": {"name": "Salesforce", "versions": [{"description": "Doing basic queries on Salesforce data", "version": "1.0.0", "methods": [{"method_name": "query_data", "description": "Runs a Salesforce Object Query Language (SOQL) to search Salesforce data for specific information.\nThis endpoint should be used to read data from Salesforce.", "parameters": [{"name": "query", "description": "SOQL query to execute", "required": true, "type": "string"}]}]}, {"description": "Doing basic queries on Salesforce data", "version": "1.0.1", "methods": [{"method_name": "query_data", "description": "Runs a Salesforce Object Query Language (SOQL) to search Salesforce data for specific information.\nThis endpoint should be used to read data from Salesforce.", "parameters": [{"name": "query", "description": "SOQL query to execute", "required": true, "type": "string"}]}]}, {"description": "Doing basic queries on Salesforce data", "version": "1.0.2", "methods": [{"method_name": "query_data", "description": "Runs a Salesforce Object Query Language (SOQL) to search Salesforce data for specific information.\nThis endpoint should be used to read data from Salesforce.", "parameters": [{"name": "query", "description": "SOQL query to execute", "required": true, "type": "string"}]}]}, {"description": "Doing basic queries on Salesforce data", "version": "1.1.0", "methods": [{"method_name": "query_data", "description": "Runs a Salesforce Object Query Language (SOQL) to search Salesforce data for specific information.\nThis endpoint should be used to read data from Salesforce.", "parameters": [{"name": "query", "description": "SOQL query to execute", "required": true, "type": "string"}]}]}, {"description": "Doing basic queries on Salesforce data", "version": "1.1.1", "methods": [{"method_name": "query_data", "description": "Runs a Salesforce Object Query Language (SOQL) to search Salesforce data for specific information.\nThis endpoint should be used to read data from Salesforce.", "parameters": [{"name": "query", "description": "SOQL query to execute", "required": true, "type": "string"}]}]}, {"description": "Doing basic queries on Salesforce data", "version": "1.2.0", "methods": [{"method_name": "query_data", "description": "Runs a Salesforce Object Query Language (SOQL) to search Salesforce data for specific information.\nThis endpoint should be used to read data from Salesforce.", "parameters": [{"name": "query", "description": "SOQL query to execute", "required": true, "type": "string"}]}]}, {"description": "Doing basic queries on Salesforce data using the Salesforce API", "version": "1.2.1", "methods": [{"method_name": "query_data", "description": "Runs a Salesforce Object Query Language (SOQL) to search Salesforce data for specific information.\nThis endpoint should be used to read data from Salesforce.", "parameters": [{"name": "query", "description": "SOQL query to execute", "required": true, "type": "string"}]}]}, {"description": "Doing basic queries on Salesforce data using the Salesforce API", "version": "1.2.2", "methods": [{"method_name": "query_data", "description": "Runs a Salesforce Object Query Language (SOQL) to search Salesforce data for specific information.\nThis endpoint should be used to read data from Salesforce.", "parameters": [{"name": "query", "description": "SOQL query to execute", "required": true, "type": "string"}]}]}, {"description": "Doing basic queries on Salesforce data using the Salesforce API", "version": "1.2.3", "methods": [{"method_name": "query_data", "description": "Runs a Salesforce Object Query Language (SOQL) to search Salesforce data for specific information.\nThis endpoint should be used to read data from Salesforce.", "parameters": [{"name": "query", "description": "SOQL query to execute", "required": true, "type": "string"}]}]}]}, "Serper": {"name": "Serper", "versions": [{"description": "Interact with the Serper API to perform Google searches.", "version": "0.0.1", "methods": [{"method_name": "search_google", "description": "Perform a search using the Serper API and return a structured summary.", "parameters": [{"name": "q", "description": "The search query.", "required": true, "type": "string"}, {"name": "num", "description": "The number of results to return.", "required": true, "type": "integer"}]}]}, {"description": "Interact with the Serper API to perform Google searches.", "version": "1.0.0", "methods": [{"method_name": "search_google", "description": "Perform a search using the Serper API and return a structured summary.", "parameters": [{"name": "q", "description": "The search query.", "required": true, "type": "string"}, {"name": "num", "description": "The number of results to return.", "required": true, "type": "integer"}]}]}, {"description": "Interact with the Serper API to perform Google searches.", "version": "1.0.1", "methods": [{"method_name": "search_google", "description": "Perform a search using the Serper API and return a structured summary.", "parameters": [{"name": "q", "description": "The search query.", "required": true, "type": "string"}, {"name": "num", "description": "The number of results to return.", "required": true, "type": "integer"}]}]}, {"description": "Interact with the Serper API to perform Google searches.", "version": "1.1.0", "methods": [{"method_name": "search_google", "description": "Perform a search using the Serper API and return a structured summary.", "parameters": [{"name": "q", "description": "The search query.", "required": true, "type": "string"}, {"name": "num", "description": "The number of results to return.", "required": true, "type": "integer"}]}]}, {"description": "Interact with the Serper API to perform Google searches.", "version": "1.1.1", "methods": [{"method_name": "search_google", "description": "Perform a search using the Serper API and return a structured summary.", "parameters": [{"name": "q", "description": "The search query.", "required": true, "type": "string"}, {"name": "num", "description": "The number of results to return.", "required": true, "type": "integer"}]}]}, {"description": "Interact with the Serper API to perform Google searches.", "version": "1.1.2", "methods": [{"method_name": "search_google", "description": "Perform a search using the Serper API and return a structured summary.", "parameters": [{"name": "q", "description": "The search query.", "required": true, "type": "string"}, {"name": "num", "description": "The number of results to return.", "required": true, "type": "integer"}]}]}]}, "ServiceNow": {"name": "ServiceNow", "versions": [{"description": "Prebuilt actions interacting with a ServiceNow instance.", "version": "1.0.0", "methods": [{"method_name": "get_my_open_incidents", "description": "Retrieves all open incidents assigned to the user.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "get_recent_incidents", "description": "Retrieves the incident created today\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "search_incidents", "description": "Retrieves all open incidents assigned to the user.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    sysparm_query: The query param to use for searching the incidents.\n    You should build this yourself based on what the user asks of you and using your current knowledge of ServiceNow API\n    pagination: An object for pagination containing `limit` which denotes the number of items per page.\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "sysparm_query", "description": "", "required": true, "type": "string"}, {"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "get_users", "description": "Retrieves all the users registered on the ServiceNow instance.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the users.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}]}, {"description": "Actions interacting with a ServiceNow instance.", "version": "1.0.1", "methods": [{"method_name": "get_my_open_incidents", "description": "Retrieves all open incidents assigned to the user.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "get_recent_incidents", "description": "Retrieves the incident created today\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "search_incidents", "description": "Retrieves all open incidents assigned to the user.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    sysparm_query: The query param to use for searching the incidents.\n    You should build this yourself based on what the user asks of you and using your current knowledge of ServiceNow API\n    pagination: An object for pagination containing `limit` which denotes the number of items per page.\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "sysparm_query", "description": "", "required": true, "type": "string"}, {"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "get_users", "description": "Retrieves all the users registered on the ServiceNow instance.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the users.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}]}, {"description": "Actions interacting with a ServiceNow instance.", "version": "1.0.2", "methods": [{"method_name": "get_my_open_incidents", "description": "Retrieves all open incidents assigned to the user.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "get_recent_incidents", "description": "Retrieves the incident created today\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "search_incidents", "description": "Retrieves all open incidents assigned to the user.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    sysparm_query: The query param to use for searching the incidents.\n    You should build this yourself based on what the user asks of you and using your current knowledge of ServiceNow API\n    pagination: An object for pagination containing `limit` which denotes the number of items per page.\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "sysparm_query", "description": "", "required": true, "type": "string"}, {"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "get_users", "description": "Retrieves all the users registered on the ServiceNow instance.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the users.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}]}, {"description": "Actions interacting with a ServiceNow instance.", "version": "1.1.0", "methods": [{"method_name": "get_my_open_incidents", "description": "Retrieves all open incidents assigned to the user.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "get_recent_incidents", "description": "Retrieves the incident created today\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "search_incidents", "description": "Retrieves all open incidents assigned to the user.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    sysparm_query: The query param to use for searching the incidents.\n    You should build this yourself based on what the user asks of you and using your current knowledge of ServiceNow API\n    pagination: An object for pagination containing `limit` which denotes the number of items per page.\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "sysparm_query", "description": "", "required": true, "type": "string"}, {"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "get_users", "description": "Retrieves all the users registered on the ServiceNow instance.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the users.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}]}, {"description": "Actions interacting with a ServiceNow instance.", "version": "1.1.1", "methods": [{"method_name": "get_my_open_incidents", "description": "Retrieves all open incidents assigned to the user.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "get_recent_incidents", "description": "Retrieves the incident created today\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "search_incidents", "description": "Retrieves all open incidents assigned to the user.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    sysparm_query: The query param to use for searching the incidents.\n    You should build this yourself based on what the user asks of you and using your current knowledge of ServiceNow API\n    pagination: An object for pagination containing `limit` which denotes the number of items per page.\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "sysparm_query", "description": "", "required": true, "type": "string"}, {"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "get_users", "description": "Retrieves all the users registered on the ServiceNow instance.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the users.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}]}, {"description": "Actions interacting with a ServiceNow instance.", "version": "1.2.0", "methods": [{"method_name": "get_my_open_incidents", "description": "Retrieves all open incidents assigned to the user.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "get_recent_incidents", "description": "Retrieves the incident created today\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "search_incidents", "description": "Retrieves all open incidents assigned to the user.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    sysparm_query: The query param to use for searching the incidents.\n    You should build this yourself based on what the user asks of you and using your current knowledge of ServiceNow API\n    pagination: An object for pagination containing `limit` which denotes the number of items per page.\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "sysparm_query", "description": "", "required": true, "type": "string"}, {"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "get_users", "description": "Retrieves all the users registered on the ServiceNow instance.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the users.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}]}, {"description": "Actions interacting with a ServiceNow instance.", "version": "1.2.1", "methods": [{"method_name": "get_my_open_incidents", "description": "Retrieves all open incidents assigned to the user.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "get_recent_incidents", "description": "Retrieves the incident created today\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "search_incidents", "description": "Retrieves all open incidents assigned to the user.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    sysparm_query: The query param to use for searching the incidents.\n    You should build this yourself based on what the user asks of you and using your current knowledge of ServiceNow API\n    pagination: An object for pagination containing `limit` which denotes the number of items per page.\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the incidents.", "parameters": [{"name": "sysparm_query", "description": "", "required": true, "type": "string"}, {"name": "pagination", "description": "", "required": false, "type": "object"}]}, {"method_name": "get_users", "description": "Retrieves all the users registered on the ServiceNow instance.\nArgs:\n    instance_url: The ServiceNow instance URL.\n    username: The username of the user to authenticate.\n    password: The password of the user to authenticate.\n    pagination: An object for pagination containing `limit` which denotes the number of items per page\n    and `next_page` the url to load the next page.\nReturns:\n    A structure representing the users.", "parameters": [{"name": "pagination", "description": "", "required": false, "type": "object"}]}]}, {"description": "Actions interacting with a ServiceNow instance.", "version": "1.2.2", "methods": [{"method_name": "get_my_open_incidents", "description": "Retrieves all open incidents assigned to the user.", "parameters": [{"name": "pagination", "description": "An object for pagination containing `limit` which denotes the number of items per page\nand `next_page` the url to load the next page.", "required": false, "type": "object"}]}, {"method_name": "get_recent_incidents", "description": "Retrieves the incident created today", "parameters": [{"name": "pagination", "description": "An object for pagination containing `limit` which denotes the number of items per page\nand `next_page` the url to load the next page.", "required": false, "type": "object"}]}, {"method_name": "search_incidents", "description": "Retrieves all open incidents assigned to the user.", "parameters": [{"name": "sysparm_query", "description": "The query param to use for searching the incidents.\nYou should build this yourself based on what the user asks of you and using your current knowledge of ServiceNow API", "required": true, "type": "string"}, {"name": "pagination", "description": "An object for pagination containing `limit` which denotes the number of items per page\nand `next_page` the url to load the next page.", "required": false, "type": "object"}]}, {"method_name": "get_users", "description": "Retrieves all the users registered on the ServiceNow instance.", "parameters": [{"name": "pagination", "description": "An object for pagination containing `limit` which denotes the number of items per page\nand `next_page` the url to load the next page.", "required": false, "type": "object"}]}]}]}, "Slack": {"name": "Slack", "versions": [{"description": "Prebuilt actions for reading and writing from/to Slack channels.", "version": "1.0.0", "methods": [{"method_name": "send_message_to_channel", "description": "Sends a message to the specified Slack channel.\nBased on how the Slack access token was generated, the message can be sent straight\nfrom the bot or on behalf of the user which obtained the token. You can detect a\nmessage sent by a bot by observing the values of the `bot_id` and `bot_name` fields\nunder the retrieved message content.", "parameters": [{"name": "channel_name", "description": "Slack channel to send the message to.", "required": true, "type": "string"}, {"name": "message", "description": "Message to send on the Slack channel.", "required": true, "type": "string"}]}, {"method_name": "read_messages_from_channel", "description": "Read a message from a given Slack channel.\nNewer messages than the `newer_than` will be retrieved when this is set, then these\nare filtered based on their saved status when `saved_only` is enabled. Enabling\n`with_replies` will additionally provide the reply messages if the original message\nis part of a thread. Increase the `messages_limit` to a higher number if you want\nmore results.", "parameters": [{"name": "channel_name", "description": "The name of the Slack channel to read the messages from.", "required": true, "type": "string"}, {"name": "messages_limit", "description": "The number of messages to read from the channel. Defaults to 20\nmessages and has a maximum limit of 200 messages.", "required": false, "type": "integer"}, {"name": "newer_than", "description": "Get messages newer than the specified date in YYYY-MM-DD format.", "required": false, "type": "string"}, {"name": "saved_only", "description": "Enable this to return only the saved messages.", "required": false, "type": "boolean"}, {"name": "with_replies", "description": "Enable this to retrieve message thread replies as well.", "required": false, "type": "boolean"}]}, {"method_name": "get_all_channels", "description": "Return all the available public or private Slack channels.", "parameters": [{"name": "channels_limit", "description": "The maximum number of channels that can be returned.", "required": false, "type": "integer"}]}]}, {"description": "Prebuilt actions for reading and writing from/to Slack channels.", "version": "1.0.1", "methods": [{"method_name": "send_message_to_channel", "description": "Sends a message to the specified Slack channel.\nBased on how the Slack access token was generated, the message can be sent straight\nfrom the bot or on behalf of the user which obtained the token. You can detect a\nmessage sent by a bot by observing the values of the `bot_id` and `bot_name` fields\nunder the retrieved message content.", "parameters": [{"name": "channel_name", "description": "Slack channel to send the message to.", "required": true, "type": "string"}, {"name": "message", "description": "Message to send on the Slack channel.", "required": true, "type": "string"}]}, {"method_name": "read_messages_from_channel", "description": "Read a message from a given Slack channel.\nNewer messages than the `newer_than` will be retrieved when this is set, then these\nare filtered based on their saved status when `saved_only` is enabled. Enabling\n`with_replies` will additionally provide the reply messages if the original message\nis part of a thread. Increase the `messages_limit` to a higher number if you want\nmore results.", "parameters": [{"name": "channel_name", "description": "The name of the Slack channel to read the messages from.", "required": true, "type": "string"}, {"name": "messages_limit", "description": "The number of messages to read from the channel. Defaults to 20\nmessages and has a maximum limit of 200 messages.", "required": false, "type": "integer"}, {"name": "newer_than", "description": "Get messages newer than the specified date in YYYY-MM-DD format.", "required": false, "type": "string"}, {"name": "saved_only", "description": "Enable this to return only the saved messages.", "required": false, "type": "boolean"}, {"name": "with_replies", "description": "Enable this to retrieve message thread replies as well.", "required": false, "type": "boolean"}]}, {"method_name": "get_all_channels", "description": "Return all the available public or private Slack channels.", "parameters": [{"name": "channels_limit", "description": "The maximum number of channels that can be returned.", "required": false, "type": "integer"}]}]}, {"description": "Prebuilt actions for reading and writing from/to Slack channels.", "version": "1.0.2", "methods": [{"method_name": "send_message_to_channel", "description": "Sends a message to the specified Slack channel.\nBased on how the Slack access token was generated, the message can be sent straight\nfrom the bot or on behalf of the user which obtained the token. You can detect a\nmessage sent by a bot by observing the values of the `bot_id` and `bot_name` fields\nunder the retrieved message content.", "parameters": [{"name": "channel_name", "description": "Slack channel to send the message to.", "required": true, "type": "string"}, {"name": "message", "description": "Message to send on the Slack channel.", "required": true, "type": "string"}]}, {"method_name": "read_messages_from_channel", "description": "Read a message from a given Slack channel.\nNewer messages than the `newer_than` will be retrieved when this is set, then these\nare filtered based on their saved status when `saved_only` is enabled. Enabling\n`with_replies` will additionally provide the reply messages if the original message\nis part of a thread. Increase the `messages_limit` to a higher number if you want\nmore results.", "parameters": [{"name": "channel_name", "description": "The name of the Slack channel to read the messages from.", "required": true, "type": "string"}, {"name": "messages_limit", "description": "The number of messages to read from the channel. Defaults to 20\nmessages and has a maximum limit of 200 messages.", "required": false, "type": "integer"}, {"name": "newer_than", "description": "Get messages newer than the specified date in YYYY-MM-DD format.", "required": false, "type": "string"}, {"name": "saved_only", "description": "Enable this to return only the saved messages.", "required": false, "type": "boolean"}, {"name": "with_replies", "description": "Enable this to retrieve message thread replies as well.", "required": false, "type": "boolean"}]}, {"method_name": "get_all_channels", "description": "Return all the available public or private Slack channels.", "parameters": [{"name": "channels_limit", "description": "The maximum number of channels that can be returned.", "required": false, "type": "integer"}]}]}, {"description": "Actions for reading and writing from/to Slack channels.", "version": "1.0.3", "methods": [{"method_name": "send_message_to_channel", "description": "Sends a message to the specified Slack channel.\nBased on how the Slack access token was generated, the message can be sent straight\nfrom the bot or on behalf of the user which obtained the token. You can detect a\nmessage sent by a bot by observing the values of the `bot_id` and `bot_name` fields\nunder the retrieved message content.", "parameters": [{"name": "channel_name", "description": "Slack channel to send the message to.", "required": true, "type": "string"}, {"name": "message", "description": "Message to send on the Slack channel.", "required": true, "type": "string"}]}, {"method_name": "read_messages_from_channel", "description": "Read a message from a given Slack channel.\nNewer messages than the `newer_than` will be retrieved when this is set, then these\nare filtered based on their saved status when `saved_only` is enabled. Enabling\n`with_replies` will additionally provide the reply messages if the original message\nis part of a thread. Increase the `messages_limit` to a higher number if you want\nmore results.", "parameters": [{"name": "channel_name", "description": "The name of the Slack channel to read the messages from.", "required": true, "type": "string"}, {"name": "messages_limit", "description": "The number of messages to read from the channel. Defaults to 20\nmessages and has a maximum limit of 200 messages.", "required": false, "type": "integer"}, {"name": "newer_than", "description": "Get messages newer than the specified date in YYYY-MM-DD format.", "required": false, "type": "string"}, {"name": "saved_only", "description": "Enable this to return only the saved messages.", "required": false, "type": "boolean"}, {"name": "with_replies", "description": "Enable this to retrieve message thread replies as well.", "required": false, "type": "boolean"}]}, {"method_name": "get_all_channels", "description": "Return all the available public or private Slack channels.", "parameters": [{"name": "channels_limit", "description": "The maximum number of channels that can be returned.", "required": false, "type": "integer"}]}]}, {"description": "Actions for reading and writing from/to Slack channels.", "version": "1.0.4", "methods": [{"method_name": "send_message_to_channel", "description": "Sends a message to the specified Slack channel.\nBased on how the Slack access token was generated, the message can be sent straight\nfrom the bot or on behalf of the user which obtained the token. You can detect a\nmessage sent by a bot by observing the values of the `bot_id` and `bot_name` fields\nunder the retrieved message content.", "parameters": [{"name": "channel_name", "description": "Slack channel to send the message to.", "required": true, "type": "string"}, {"name": "message", "description": "Message to send on the Slack channel.", "required": true, "type": "string"}]}, {"method_name": "read_messages_from_channel", "description": "Read a message from a given Slack channel.\nNewer messages than the `newer_than` will be retrieved when this is set, then these\nare filtered based on their saved status when `saved_only` is enabled. Enabling\n`with_replies` will additionally provide the reply messages if the original message\nis part of a thread. Increase the `messages_limit` to a higher number if you want\nmore results.", "parameters": [{"name": "channel_name", "description": "The name of the Slack channel to read the messages from.", "required": true, "type": "string"}, {"name": "messages_limit", "description": "The number of messages to read from the channel. Defaults to 20\nmessages and has a maximum limit of 200 messages.", "required": false, "type": "integer"}, {"name": "newer_than", "description": "Get messages newer than the specified date in YYYY-MM-DD format.", "required": false, "type": "string"}, {"name": "saved_only", "description": "Enable this to return only the saved messages.", "required": false, "type": "boolean"}, {"name": "with_replies", "description": "Enable this to retrieve message thread replies as well.", "required": false, "type": "boolean"}]}, {"method_name": "get_all_channels", "description": "Return all the available public or private Slack channels.", "parameters": [{"name": "channels_limit", "description": "The maximum number of channels that can be returned.", "required": false, "type": "integer"}]}]}, {"description": "Actions for reading and writing from/to Slack channels.", "version": "1.1.0", "methods": [{"method_name": "send_message_to_channel", "description": "Sends a message to the specified Slack channel.\nBased on how the Slack access token was generated, the message can be sent straight\nfrom the bot or on behalf of the user which obtained the token. You can detect a\nmessage sent by a bot by observing the values of the `bot_id` and `bot_name` fields\nunder the retrieved message content.", "parameters": [{"name": "channel_name", "description": "Slack channel to send the message to.", "required": true, "type": "string"}, {"name": "message", "description": "Message to send on the Slack channel.", "required": true, "type": "string"}]}, {"method_name": "read_messages_from_channel", "description": "Read a message from a given Slack channel.\nNewer messages than the `newer_than` will be retrieved when this is set, then these\nare filtered based on their saved status when `saved_only` is enabled. Enabling\n`with_replies` will additionally provide the reply messages if the original message\nis part of a thread. Increase the `messages_limit` to a higher number if you want\nmore results.", "parameters": [{"name": "channel_name", "description": "The name of the Slack channel to read the messages from.", "required": true, "type": "string"}, {"name": "messages_limit", "description": "The number of messages to read from the channel. Defaults to 20\nmessages and has a maximum limit of 200 messages.", "required": false, "type": "integer"}, {"name": "newer_than", "description": "Get messages newer than the specified date in YYYY-MM-DD format.", "required": false, "type": "string"}, {"name": "saved_only", "description": "Enable this to return only the saved messages.", "required": false, "type": "boolean"}, {"name": "with_replies", "description": "Enable this to retrieve message thread replies as well.", "required": false, "type": "boolean"}]}, {"method_name": "get_all_channels", "description": "Return all the available public or private Slack channels.", "parameters": [{"name": "channels_limit", "description": "The maximum number of channels that can be returned.", "required": false, "type": "integer"}]}]}, {"description": "Actions for reading and writing from/to Slack channels.", "version": "1.1.1", "methods": [{"method_name": "send_message_to_channel", "description": "Sends a message to the specified Slack channel.\nBased on how the Slack access token was generated, the message can be sent straight\nfrom the bot or on behalf of the user which obtained the token. You can detect a\nmessage sent by a bot by observing the values of the `bot_id` and `bot_name` fields\nunder the retrieved message content.", "parameters": [{"name": "channel_name", "description": "Slack channel to send the message to.", "required": true, "type": "string"}, {"name": "message", "description": "Message to send on the Slack channel.", "required": true, "type": "string"}]}, {"method_name": "read_messages_from_channel", "description": "Read a message from a given Slack channel.\nNewer messages than the `newer_than` will be retrieved when this is set, then these\nare filtered based on their saved status when `saved_only` is enabled. Enabling\n`with_replies` will additionally provide the reply messages if the original message\nis part of a thread. Increase the `messages_limit` to a higher number if you want\nmore results.", "parameters": [{"name": "channel_name", "description": "The name of the Slack channel to read the messages from.", "required": true, "type": "string"}, {"name": "messages_limit", "description": "The number of messages to read from the channel. Defaults to 20\nmessages and has a maximum limit of 200 messages.", "required": false, "type": "integer"}, {"name": "newer_than", "description": "Get messages newer than the specified date in YYYY-MM-DD format.", "required": false, "type": "string"}, {"name": "saved_only", "description": "Enable this to return only the saved messages.", "required": false, "type": "boolean"}, {"name": "with_replies", "description": "Enable this to retrieve message thread replies as well.", "required": false, "type": "boolean"}]}, {"method_name": "get_all_channels", "description": "Return all the available public or private Slack channels.", "parameters": [{"name": "channels_limit", "description": "The maximum number of channels that can be returned.", "required": false, "type": "integer"}]}]}, {"description": "Actions for reading and writing from/to Slack channels.", "version": "1.1.2", "methods": [{"method_name": "send_message_to_channel", "description": "Sends a message to the specified Slack channel.\nBased on how the Slack access token was generated, the message can be sent straight\nfrom the bot or on behalf of the user which obtained the token. You can detect a\nmessage sent by a bot by observing the values of the `bot_id` and `bot_name` fields\nunder the retrieved message content.", "parameters": [{"name": "channel_name", "description": "Slack channel to send the message to.", "required": true, "type": "string"}, {"name": "message", "description": "Message to send on the Slack channel.", "required": true, "type": "string"}]}, {"method_name": "read_messages_from_channel", "description": "Read a message from a given Slack channel.\nNewer messages than the `newer_than` will be retrieved when this is set, then these\nare filtered based on their saved status when `saved_only` is enabled. Enabling\n`with_replies` will additionally provide the reply messages if the original message\nis part of a thread. Increase the `messages_limit` to a higher number if you want\nmore results.", "parameters": [{"name": "channel_name", "description": "The name of the Slack channel to read the messages from.", "required": true, "type": "string"}, {"name": "messages_limit", "description": "The number of messages to read from the channel. Defaults to 20\nmessages and has a maximum limit of 200 messages.", "required": false, "type": "integer"}, {"name": "newer_than", "description": "Get messages newer than the specified date in YYYY-MM-DD format.", "required": false, "type": "string"}, {"name": "saved_only", "description": "Enable this to return only the saved messages.", "required": false, "type": "boolean"}, {"name": "with_replies", "description": "Enable this to retrieve message thread replies as well.", "required": false, "type": "boolean"}]}, {"method_name": "get_all_channels", "description": "Return all the available public or private Slack channels.", "parameters": [{"name": "channels_limit", "description": "The maximum number of channels that can be returned.", "required": false, "type": "integer"}]}]}, {"description": "Actions for reading and writing from/to Slack channels.", "version": "1.1.3", "methods": [{"method_name": "send_message_to_channel", "description": "Sends a message to the specified Slack channel.\nBased on how the Slack access token was generated, the message can be sent straight\nfrom the bot or on behalf of the user which obtained the token. You can detect a\nmessage sent by a bot by observing the values of the `bot_id` and `bot_name` fields\nunder the retrieved message content.", "parameters": [{"name": "channel_name", "description": "Slack channel to send the message to.", "required": true, "type": "string"}, {"name": "message", "description": "Message to send on the Slack channel.", "required": true, "type": "string"}]}, {"method_name": "read_messages_from_channel", "description": "Read a message from a given Slack channel.\nNewer messages than the `newer_than` will be retrieved when this is set, then these\nare filtered based on their saved status when `saved_only` is enabled. Enabling\n`with_replies` will additionally provide the reply messages if the original message\nis part of a thread. Increase the `messages_limit` to a higher number if you want\nmore results.", "parameters": [{"name": "channel_name", "description": "The name of the Slack channel to read the messages from.", "required": true, "type": "string"}, {"name": "messages_limit", "description": "The number of messages to read from the channel. Defaults to 20\nmessages and has a maximum limit of 200 messages.", "required": false, "type": "integer"}, {"name": "newer_than", "description": "Get messages newer than the specified date in YYYY-MM-DD format.", "required": false, "type": "string"}, {"name": "saved_only", "description": "Enable this to return only the saved messages.", "required": false, "type": "boolean"}, {"name": "with_replies", "description": "Enable this to retrieve message thread replies as well.", "required": false, "type": "boolean"}]}, {"method_name": "get_all_channels", "description": "Return all the available public or private Slack channels.", "parameters": [{"name": "channels_limit", "description": "The maximum number of channels that can be returned.", "required": false, "type": "integer"}]}]}, {"description": "Actions for reading and writing from/to Slack channels.", "version": "2.0.0", "methods": [{"method_name": "send_message_to_channel", "description": "Sends a message to the specified Slack channel or as a reply to a thread.\nBased on how the Slack access token was generated, the message can be sent straight\nfrom the bot or on behalf of the user which obtained the token. You can detect a\nmessage sent by a bot by observing the values of the `bot_id` and `bot_name` fields\nunder the retrieved message content.", "parameters": [{"name": "channel_name", "description": "Slack channel to send the message to.", "required": true, "type": "string"}, {"name": "message", "description": "Message to send on the Slack channel.", "required": true, "type": "string"}, {"name": "thread_ts", "description": "Optional thread timestamp to reply to an existing message thread.\nUse the message_ts or thread_ts from a previous message to reply in that thread.", "required": false, "type": "string"}]}, {"method_name": "read_messages_from_channel", "description": "Read a message from a given Slack channel.\nNewer messages than the `newer_than` will be retrieved when this is set, then these\nare filtered based on their saved status when `saved_only` is enabled. Enabling\n`with_replies` will additionally provide the reply messages if the original message\nis part of a thread. Increase the `messages_limit` to a higher number if you want\nmore results.", "parameters": [{"name": "channel_name", "description": "The name of the Slack channel to read the messages from.", "required": true, "type": "string"}, {"name": "messages_limit", "description": "The number of messages to read from the channel. Defaults to 20\nmessages and has a maximum limit of 200 messages.", "required": false, "type": "integer"}, {"name": "newer_than", "description": "Get messages newer than the specified date in YYYY-MM-DD format.", "required": false, "type": "string"}, {"name": "saved_only", "description": "Enable this to return only the saved messages.", "required": false, "type": "boolean"}, {"name": "with_replies", "description": "Enable this to retrieve message thread replies as well.", "required": false, "type": "boolean"}]}, {"method_name": "get_all_channels", "description": "Return all the available public or private Slack channels.", "parameters": [{"name": "channels_limit", "description": "The maximum number of channels that can be returned.", "required": false, "type": "integer"}]}]}]}, "Snowflake Cortex Analyst": {"name": "Snowflake Cortex Analyst", "versions": [{"description": "Snowflake Cortex reliably answers business questions based on your structured data in Snowflake.", "version": "1.0.0", "methods": [{"method_name": "ask_cortex_analyst", "description": "Sends a message to the Cortex Analyst.", "parameters": [{"name": "message", "description": "The message to send.", "required": true, "type": "string"}]}, {"method_name": "snowflake_execute_query", "description": "Executes a specific query.", "parameters": [{"name": "query", "description": "The query to execute.", "required": true, "type": "string"}, {"name": "numeric_args", "description": "A list of numeric arguments to pass to the query.", "required": false, "type": "string"}]}]}, {"description": "Snowflake Cortex reliably answers business questions based on your structured data in Snowflake.", "version": "1.0.1", "methods": [{"method_name": "ask_cortex_analyst", "description": "Sends a message to the Cortex Analyst.", "parameters": [{"name": "message", "description": "The message to send.", "required": true, "type": "string"}]}, {"method_name": "snowflake_execute_query", "description": "Executes a specific query.", "parameters": [{"name": "query", "description": "The query to execute.", "required": true, "type": "string"}, {"name": "numeric_args", "description": "A list of numeric arguments to pass to the query.", "required": false, "type": "string"}]}]}, {"description": "Snowflake Cortex reliably answers business questions based on your structured data in Snowflake.", "version": "1.0.2", "methods": [{"method_name": "ask_cortex_analyst", "description": "Sends a message to the Cortex Analyst.", "parameters": [{"name": "message", "description": "The message to send.", "required": true, "type": "string"}]}, {"method_name": "snowflake_execute_query", "description": "Executes a specific query.", "parameters": [{"name": "query", "description": "The query to execute.", "required": true, "type": "string"}, {"name": "numeric_args", "description": "A list of numeric arguments to pass to the query.", "required": false, "type": "array"}]}]}, {"description": "Snowflake Cortex reliably answers business questions based on your structured data in Snowflake.", "version": "1.0.3", "methods": [{"method_name": "ask_cortex_analyst", "description": "Sends a message to the Cortex Analyst.", "parameters": [{"name": "message", "description": "The message to send.", "required": true, "type": "string"}]}, {"method_name": "snowflake_execute_query", "description": "Executes a specific query.", "parameters": [{"name": "query", "description": "The query to execute.", "required": true, "type": "string"}, {"name": "numeric_args", "description": "A list of numeric arguments to pass to the query.", "required": false, "type": "array"}]}]}, {"description": "Snowflake Cortex reliably answers business questions based on your structured data in Snowflake.", "version": "1.0.4", "methods": [{"method_name": "ask_cortex_analyst", "description": "Sends a message to the Cortex Analyst.", "parameters": [{"name": "message", "description": "The message to send.", "required": true, "type": "string"}]}, {"method_name": "snowflake_execute_query", "description": "Executes a specific query.", "parameters": [{"name": "query", "description": "The query to execute.", "required": true, "type": "string"}, {"name": "numeric_args", "description": "A list of numeric arguments to pass to the query.", "required": false, "type": "array"}]}]}, {"description": "Snowflake Cortex reliably answers business questions based on your structured data in Snowflake.", "version": "1.0.5", "methods": [{"method_name": "ask_cortex_analyst", "description": "Sends a message to the Cortex Analyst.", "parameters": [{"name": "message", "description": "The message to send.", "required": true, "type": "string"}]}, {"method_name": "snowflake_execute_query", "description": "Executes a specific query.", "parameters": [{"name": "query", "description": "The query to execute.", "required": true, "type": "string"}, {"name": "numeric_args", "description": "A list of numeric arguments to pass to the query.", "required": false, "type": "array"}]}]}, {"description": "Snowflake Cortex reliably answers business questions based on your structured data in Snowflake.", "version": "2.0.0", "methods": [{"method_name": "ask_cortex_analyst", "description": "Sends a message to the Cortex Analyst.", "parameters": [{"name": "message", "description": "The message to send.", "required": true, "type": "string"}]}, {"method_name": "snowflake_execute_query", "description": "Executes a specific query and returns results as a Table.\nAll table and column references in the query should use fully qualified names \n(e.g., DATABASE.SCHEMA.TABLE) to work across different databases and schemas.", "parameters": [{"name": "query", "description": "The query to execute. Use fully qualified table names (DATABASE.SCHEMA.TABLE).", "required": true, "type": "string"}, {"name": "numeric_args", "description": "A list of numeric arguments to pass to the query.", "required": false, "type": "array"}, {"name": "row_limit", "description": "Maximum number of rows to return (default: 10000). \nSet to prevent memory issues with large result sets.\nConsider adding LIMIT clause in your SQL for better performance.", "required": false, "type": "integer"}]}]}, {"description": "Snowflake Cortex reliably answers business questions based on your structured data in Snowflake.", "version": "2.0.1", "methods": [{"method_name": "ask_cortex_analyst", "description": "Sends a message to the Cortex Analyst.", "parameters": [{"name": "message", "description": "The message to send.", "required": true, "type": "string"}]}, {"method_name": "snowflake_execute_query", "description": "Executes a specific query and returns results as a Table.\nAll table and column references in the query should use fully qualified names \n(e.g., DATABASE.SCHEMA.TABLE) to work across different databases and schemas.", "parameters": [{"name": "query", "description": "The query to execute. Use fully qualified table names (DATABASE.SCHEMA.TABLE).", "required": true, "type": "string"}, {"name": "numeric_args", "description": "A list of numeric arguments to pass to the query.", "required": false, "type": "array"}, {"name": "row_limit", "description": "Maximum number of rows to return (default: 10000). \nSet to prevent memory issues with large result sets.\nConsider adding LIMIT clause in your SQL for better performance.", "required": false, "type": "integer"}]}]}, {"description": "Snowflake Cortex reliably answers business questions based on your structured data in Snowflake.", "version": "2.0.2", "methods": [{"method_name": "ask_cortex_analyst", "description": "Sends a message to the Cortex Analyst.", "parameters": [{"name": "message", "description": "The message to send.", "required": true, "type": "string"}]}, {"method_name": "snowflake_execute_query", "description": "Executes a specific query and returns results as a Table.\nAll table and column references in the query should use fully qualified names \n(e.g., DATABASE.SCHEMA.TABLE) to work across different databases and schemas.", "parameters": [{"name": "query", "description": "The query to execute. Use fully qualified table names (DATABASE.SCHEMA.TABLE).", "required": true, "type": "string"}, {"name": "numeric_args", "description": "A list of numeric arguments to pass to the query.", "required": false, "type": "array"}, {"name": "row_limit", "description": "Maximum number of rows to return (default: 10000). \nSet to prevent memory issues with large result sets.\nConsider adding LIMIT clause in your SQL for better performance.", "required": false, "type": "integer"}]}]}]}, "Snowflake Cortex Search": {"name": "Snowflake Cortex Search", "versions": [{"description": "Cortex Search is a retrieval engine that provides agent the context it needs based on your latest data.", "version": "1.0.0", "methods": [{"method_name": "cortex_get_search_specification", "description": "Returns the name of the search column and a list of the names of the attribute columns\nfor the provided cortex search serice.", "parameters": []}, {"method_name": "cortex_search", "description": "Queries the cortex search service in the session state and returns a list of results.", "parameters": [{"name": "query", "description": "The query to execute", "required": true, "type": "string"}, {"name": "columns", "description": "The columns to return", "required": false, "type": "string"}, {"name": "filter", "description": "The filter to apply, optional, defaults to None", "required": false, "type": "string"}, {"name": "limit", "description": "The limit to apply, optional, defaults to 5", "required": false, "type": "integer"}]}]}, {"description": "Cortex Search is a retrieval engine that provides agent the context it needs based on your latest data.", "version": "1.0.1", "methods": [{"method_name": "cortex_get_search_specification", "description": "Returns the name of the search column and a list of the names of the attribute columns\nfor the provided cortex search serice.", "parameters": []}, {"method_name": "cortex_search", "description": "Queries the cortex search service in the session state and returns a list of results.", "parameters": [{"name": "query", "description": "The query to execute", "required": true, "type": "string"}, {"name": "columns", "description": "The columns to return", "required": false, "type": "string"}, {"name": "filter", "description": "The filter to apply, optional, defaults to None", "required": false, "type": "string"}, {"name": "limit", "description": "The limit to apply, optional, defaults to 5", "required": false, "type": "integer"}]}]}, {"description": "Cortex Search is a retrieval engine that provides agent the context it needs based on your latest data.", "version": "1.0.2", "methods": [{"method_name": "cortex_get_search_specification", "description": "Returns the name of the search column and a list of the names of the attribute columns\nfor the provided cortex search serice.", "parameters": []}, {"method_name": "cortex_search", "description": "Queries the cortex search service in the session state and returns a list of results.", "parameters": [{"name": "query", "description": "The query to execute", "required": true, "type": "string"}, {"name": "columns", "description": "The columns to return", "required": false, "type": "string"}, {"name": "filter", "description": "The filter to apply, optional, defaults to None", "required": false, "type": "string"}, {"name": "limit", "description": "The limit to apply, optional, defaults to 5", "required": false, "type": "integer"}]}]}, {"description": "Cortex Search is a retrieval engine that provides agent the context it needs based on your latest data.", "version": "1.0.3", "methods": [{"method_name": "cortex_get_search_specification", "description": "Returns the name of the search column and a list of the names of the attribute columns\nfor the provided cortex search serice.", "parameters": []}, {"method_name": "cortex_search", "description": "Queries the cortex search service in the session state and returns a list of results.", "parameters": [{"name": "query", "description": "The full-text search query to find relevant content. This is for semantic search only \nand should NOT contain filter conditions. Example: \"customer feedback about returns\"", "required": true, "type": "string"}, {"name": "columns", "description": "The columns to return. These columns must be based on the columns returned by cortex_get_search_specification.", "required": false, "type": "string"}, {"name": "filter", "description": "Dictionary specifying filter conditions using Snowflake Cortex Search syntax. Only use columns that are part of the attribute_columns returned by cortex_get_search_specification.\nMust use specific operators:\n- \"@eq\": Equality filter. Example: {\"@eq\": {\"COLUMN_NAME\": \"value\"}}\n- \"@contains\": Array contains filter. Example: {\"@contains\": {\"ARRAY_COLUMN\": \"value\"}}\n- \"@gte\": Greater than or equal. Example: {\"@gte\": {\"NUMERIC_COLUMN\": 10}}\n- \"@lte\": Less than or equal. Example: {\"@lte\": {\"NUMERIC_COLUMN\": 100}}\n\nLogical operators can combine conditions:\n- \"@and\": Example: {\"@and\": [{\"@eq\": {\"COL1\": \"val1\"}}, {\"@eq\": {\"COL2\": \"val2\"}}]}\n- \"@or\": Example: {\"@or\": [{\"@eq\": {\"COL1\": \"val1\"}}, {\"@eq\": {\"COL1\": \"val2\"}}]}\n- \"@not\": Example: {\"@not\": {\"@eq\": {\"COL1\": \"val1\"}}}", "required": false, "type": "string"}, {"name": "limit", "description": "The limit to apply, optional, defaults to 10", "required": false, "type": "integer"}]}]}, {"description": "Cortex Search is a retrieval engine that provides agent the context it needs based on your latest data.", "version": "1.0.4", "methods": [{"method_name": "cortex_get_search_specification", "description": "Returns the name of the search column and a list of the names of the attribute columns\nfor the provided cortex search serice.", "parameters": []}, {"method_name": "cortex_search", "description": "Queries the cortex search service in the session state and returns a list of results.", "parameters": [{"name": "query", "description": "The full-text search query to find relevant content. This is for semantic search only \nand should NOT contain filter conditions. Example: \"customer feedback about returns\"", "required": true, "type": "string"}, {"name": "columns", "description": "The columns to return. These columns must be based on the columns returned by cortex_get_search_specification.", "required": false, "type": "string"}, {"name": "filter", "description": "Dictionary specifying filter conditions using Snowflake Cortex Search syntax. Only use columns that are part of the attribute_columns returned by cortex_get_search_specification.\nMust use specific operators:\n- \"@eq\": Equality filter. Example: {\"@eq\": {\"COLUMN_NAME\": \"value\"}}\n- \"@contains\": Array contains filter. Example: {\"@contains\": {\"ARRAY_COLUMN\": \"value\"}}\n- \"@gte\": Greater than or equal. Example: {\"@gte\": {\"NUMERIC_COLUMN\": 10}}\n- \"@lte\": Less than or equal. Example: {\"@lte\": {\"NUMERIC_COLUMN\": 100}}\n\nLogical operators can combine conditions:\n- \"@and\": Example: {\"@and\": [{\"@eq\": {\"COL1\": \"val1\"}}, {\"@eq\": {\"COL2\": \"val2\"}}]}\n- \"@or\": Example: {\"@or\": [{\"@eq\": {\"COL1\": \"val1\"}}, {\"@eq\": {\"COL1\": \"val2\"}}]}\n- \"@not\": Example: {\"@not\": {\"@eq\": {\"COL1\": \"val1\"}}}", "required": false, "type": "string"}, {"name": "limit", "description": "The limit to apply, optional, defaults to 10", "required": false, "type": "integer"}]}]}, {"description": "Cortex Search is a retrieval engine that provides agent the context it needs based on your latest data.", "version": "1.0.5", "methods": [{"method_name": "cortex_get_search_specification", "description": "Returns the name of the search column and a list of the names of the attribute columns\nfor the provided cortex search serice.", "parameters": []}, {"method_name": "cortex_search", "description": "Queries the cortex search service in the session state and returns a list of results.", "parameters": [{"name": "query", "description": "The search request containing query, columns, filter, and limit parameters.", "required": true, "type": "object"}]}]}, {"description": "Cortex Search is a retrieval engine that provides agent the context it needs based on your latest data.", "version": "1.0.6", "methods": [{"method_name": "cortex_get_search_specification", "description": "Returns the name of the search column and a list of the names of the attribute columns\nfor the provided cortex search serice.", "parameters": []}, {"method_name": "cortex_search", "description": "Queries the cortex search service in the session state and returns a list of results.\nMind the nesting of { \"query\": { \"query\": \"...\", \"columns\": [...], \"filter\": {...}, \"limit\": 10 } }\nwhen providing the arguments to this action. You will often need to check the results of\ncortex_get_search_specification to get the correct columns information for use in the columns argument.\n(The columns, filter, and limit are optional and can be omitted.)", "parameters": [{"name": "query", "description": "The search request containing query, columns, filter, and limit parameters.", "required": true, "type": "object"}]}]}, {"description": "Cortex Search is a retrieval engine that provides agent the context it needs based on your latest data.", "version": "1.0.7", "methods": [{"method_name": "cortex_get_search_specification", "description": "Returns the name of the search column and a list of the names of the attribute columns\nfor the provided cortex search serice.", "parameters": []}, {"method_name": "cortex_search", "description": "Queries the cortex search service in the session state and returns a list of results.\nMind the nesting of { \"query\": { \"query\": \"...\", \"columns\": [...], \"filter\": {...}, \"limit\": 10 } }\nwhen providing the arguments to this action. You will often need to check the results of\ncortex_get_search_specification to get the correct columns information for use in the columns argument.\n(The columns, filter, and limit are optional and can be omitted.)", "parameters": [{"name": "query", "description": "The search request containing query, columns, filter, and limit parameters.", "required": true, "type": "object"}]}]}, {"description": "Cortex Search is a retrieval engine that provides agent the context it needs based on your latest data.", "version": "1.0.8", "methods": [{"method_name": "cortex_get_search_specification", "description": "Returns the name of the search column and a list of the names of the attribute columns\nfor the provided cortex search serice.", "parameters": []}, {"method_name": "cortex_search", "description": "Queries the cortex search service in the session state and returns a list of results.\nMind the nesting of { \"query\": { \"query\": \"...\", \"columns\": [...], \"filter\": {...}, \"limit\": 10 } }\nwhen providing the arguments to this action. You will often need to check the results of\ncortex_get_search_specification to get the correct columns information for use in the columns argument.\n(The columns, filter, and limit are optional and can be omitted.)", "parameters": [{"name": "query", "description": "The search request containing query, columns, filter, and limit parameters.", "required": true, "type": "object"}]}]}]}, "Snowflake Data": {"name": "Snowflake Data", "versions": [{"description": "Actions for interacting with any data in Snowflake", "version": "0.0.1", "methods": [{"method_name": "get_tables_info", "description": "Returns all available database tables, along with details of each of their columns with datatypes, and a random sample of 10 rows to give a hint how the data looks in practise. ALWAYS use this method before running any queries against database.", "parameters": []}, {"method_name": "execute_select_query", "description": "Executes a given Snowflake SQL query. MUST be valid Snowflake SQL. Before calling this tool make sure to understand the structure of the data with get_tables_info tool. This tool only allows SELECT queries. Anything else will raise an error before query execution.", "parameters": [{"name": "query", "description": "The Snowflake SQL query to execute.", "required": true, "type": "string"}]}]}, {"description": "Actions for interacting with any data in Snowflake", "version": "0.0.2", "methods": [{"method_name": "get_tables_info", "description": "Returns all available database tables, along with details of each of their columns with datatypes, and a random sample of 10 rows to give a hint how the data looks in practise. ALWAYS use this method before running any queries against database.", "parameters": []}, {"method_name": "execute_select_query", "description": "Executes a given Snowflake SQL query. MUST be valid Snowflake SQL. Before calling this tool make sure to understand the structure of the data with get_tables_info tool. This tool only allows SELECT queries. Anything else will raise an error before query execution.", "parameters": [{"name": "query", "description": "The Snowflake SQL query to execute.", "required": true, "type": "string"}]}, {"method_name": "who_am_I", "description": "Returns the current user, role, warehouse, database, and schema information. If you get an error from any other tool calls, use this tool to get the current user, role, warehouse, database, and schema information and let user know that they need to check if the permissions for the resource are set correctly.", "parameters": []}]}, {"description": "Various tools for interacting with Snowflake databases and other tools.", "version": "2.0.0", "methods": [{"method_name": "cortex_llm_complete", "description": "Completes the inference for the provided message.", "parameters": [{"name": "model", "description": "The model to use", "required": true, "type": "string"}, {"name": "prompt", "description": "The prompt to use", "required": true, "type": "string"}]}, {"method_name": "cortex_agent_chat", "description": "Chat with the cortex agent.", "parameters": [{"name": "query", "description": "The query to use", "required": true, "type": "string"}]}, {"method_name": "snowflake_execute_query", "description": "Executes a specific query.", "parameters": [{"name": "query", "description": "The query to execute.", "required": true, "type": "string"}, {"name": "numeric_args", "description": "A list of numeric arguments to pass to the query.", "required": false, "type": "string"}]}, {"method_name": "snowflake_get_warehouses", "description": "Gets the warehouses in the account.", "parameters": []}, {"method_name": "snowflake_get_databases", "description": "Returns the databases in the account.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}]}, {"method_name": "snowflake_get_schemas", "description": "Get the schemas from the database.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}, {"name": "database", "description": "The database to get the schemas from.", "required": true, "type": "string"}]}, {"method_name": "snowflake_get_tables", "description": "Get the table names from the database.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}, {"name": "database", "description": "The database to get the tables from.", "required": true, "type": "string"}, {"name": "schema", "description": "The schema to get the tables from.", "required": true, "type": "string"}]}, {"method_name": "snowflake_get_columns", "description": "Get the columns in the table.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}, {"name": "database", "description": "The database to get the columns from.", "required": true, "type": "string"}, {"name": "schema", "description": "The schema to get the columns from.", "required": true, "type": "string"}, {"name": "table", "description": "The table to get the columns from.", "required": true, "type": "string"}]}]}, {"description": "Various tools for interacting with Snowflake databases and other tools.", "version": "2.0.1", "methods": [{"method_name": "cortex_llm_complete", "description": "Completes the inference for the provided message.", "parameters": [{"name": "model", "description": "The model to use", "required": true, "type": "string"}, {"name": "prompt", "description": "The prompt to use", "required": true, "type": "string"}]}, {"method_name": "cortex_agent_chat", "description": "Chat with the cortex agent.", "parameters": [{"name": "query", "description": "The query to use", "required": true, "type": "string"}]}, {"method_name": "snowflake_execute_query", "description": "Executes a specific query.", "parameters": [{"name": "query", "description": "The query to execute.", "required": true, "type": "string"}, {"name": "numeric_args", "description": "A list of numeric arguments to pass to the query.", "required": false, "type": "string"}]}, {"method_name": "snowflake_get_warehouses", "description": "Gets the warehouses in the account.", "parameters": []}, {"method_name": "snowflake_get_databases", "description": "Returns the databases in the account.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}]}, {"method_name": "snowflake_get_schemas", "description": "Get the schemas from the database.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}, {"name": "database", "description": "The database to get the schemas from.", "required": true, "type": "string"}]}, {"method_name": "snowflake_get_tables", "description": "Get the table names from the database.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}, {"name": "database", "description": "The database to get the tables from.", "required": true, "type": "string"}, {"name": "schema", "description": "The schema to get the tables from.", "required": true, "type": "string"}]}, {"method_name": "snowflake_get_columns", "description": "Get the columns in the table.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}, {"name": "database", "description": "The database to get the columns from.", "required": true, "type": "string"}, {"name": "schema", "description": "The schema to get the columns from.", "required": true, "type": "string"}, {"name": "table", "description": "The table to get the columns from.", "required": true, "type": "string"}]}]}, {"description": "Various tools for interacting with Snowflake databases and other tools.", "version": "2.0.2", "methods": [{"method_name": "cortex_llm_complete", "description": "Completes the inference for the provided message.", "parameters": [{"name": "model", "description": "The model to use", "required": true, "type": "string"}, {"name": "prompt", "description": "The prompt to use", "required": true, "type": "string"}]}, {"method_name": "cortex_agent_chat", "description": "Chat with the cortex agent.", "parameters": [{"name": "query", "description": "The query to use", "required": true, "type": "string"}]}, {"method_name": "snowflake_execute_query", "description": "Executes a specific query.", "parameters": [{"name": "query", "description": "The query to execute.", "required": true, "type": "string"}, {"name": "numeric_args", "description": "A list of numeric arguments to pass to the query.", "required": false, "type": "array"}]}, {"method_name": "snowflake_get_warehouses", "description": "Gets the warehouses in the account.", "parameters": []}, {"method_name": "snowflake_get_databases", "description": "Returns the databases in the account.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}]}, {"method_name": "snowflake_get_schemas", "description": "Get the schemas from the database.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}, {"name": "database", "description": "The database to get the schemas from.", "required": true, "type": "string"}]}, {"method_name": "snowflake_get_tables", "description": "Get the table names from the database.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}, {"name": "database", "description": "The database to get the tables from.", "required": true, "type": "string"}, {"name": "schema", "description": "The schema to get the tables from.", "required": true, "type": "string"}]}, {"method_name": "snowflake_get_columns", "description": "Get the columns in the table.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}, {"name": "database", "description": "The database to get the columns from.", "required": true, "type": "string"}, {"name": "schema", "description": "The schema to get the columns from.", "required": true, "type": "string"}, {"name": "table", "description": "The table to get the columns from.", "required": true, "type": "string"}]}]}, {"description": "Various tools for interacting with Snowflake databases and other tools.", "version": "2.0.3", "methods": [{"method_name": "cortex_llm_complete", "description": "Completes the inference for the provided message.", "parameters": [{"name": "model", "description": "The model to use", "required": true, "type": "string"}, {"name": "prompt", "description": "The prompt to use", "required": true, "type": "string"}]}, {"method_name": "cortex_agent_chat", "description": "Chat with the cortex agent.", "parameters": [{"name": "query", "description": "The query to use", "required": true, "type": "string"}]}, {"method_name": "snowflake_execute_query", "description": "Executes a specific query.", "parameters": [{"name": "query", "description": "The query to execute.", "required": true, "type": "string"}, {"name": "numeric_args", "description": "A list of numeric arguments to pass to the query.", "required": false, "type": "array"}]}, {"method_name": "snowflake_get_warehouses", "description": "Gets the warehouses in the account.", "parameters": []}, {"method_name": "snowflake_get_databases", "description": "Returns the databases in the account.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}]}, {"method_name": "snowflake_get_schemas", "description": "Get the schemas from the database.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}, {"name": "database", "description": "The database to get the schemas from.", "required": true, "type": "string"}]}, {"method_name": "snowflake_get_tables", "description": "Get the table names from the database.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}, {"name": "database", "description": "The database to get the tables from.", "required": true, "type": "string"}, {"name": "schema", "description": "The schema to get the tables from.", "required": true, "type": "string"}]}, {"method_name": "snowflake_get_columns", "description": "Get the columns in the table.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}, {"name": "database", "description": "The database to get the columns from.", "required": true, "type": "string"}, {"name": "schema", "description": "The schema to get the columns from.", "required": true, "type": "string"}, {"name": "table", "description": "The table to get the columns from.", "required": true, "type": "string"}]}]}, {"description": "Various tools for interacting with Snowflake databases and other tools.", "version": "2.0.4", "methods": [{"method_name": "cortex_llm_complete", "description": "Completes the inference for the provided message.", "parameters": [{"name": "model", "description": "The model to use", "required": true, "type": "string"}, {"name": "prompt", "description": "The prompt to use", "required": true, "type": "string"}]}, {"method_name": "cortex_agent_chat", "description": "Chat with the cortex agent.", "parameters": [{"name": "query", "description": "The query to use", "required": true, "type": "string"}]}, {"method_name": "snowflake_execute_query", "description": "Executes a specific query.", "parameters": [{"name": "query", "description": "The query to execute.", "required": true, "type": "string"}, {"name": "numeric_args", "description": "A list of numeric arguments to pass to the query.", "required": false, "type": "array"}]}, {"method_name": "snowflake_get_warehouses", "description": "Gets the warehouses in the account.", "parameters": []}, {"method_name": "snowflake_get_databases", "description": "Returns the databases in the account.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}]}, {"method_name": "snowflake_get_schemas", "description": "Get the schemas from the database.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}, {"name": "database", "description": "The database to get the schemas from.", "required": true, "type": "string"}]}, {"method_name": "snowflake_get_tables", "description": "Get the table names from the database.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}, {"name": "database", "description": "The database to get the tables from.", "required": true, "type": "string"}, {"name": "schema", "description": "The schema to get the tables from.", "required": true, "type": "string"}]}, {"method_name": "snowflake_get_columns", "description": "Get the columns in the table.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}, {"name": "database", "description": "The database to get the columns from.", "required": true, "type": "string"}, {"name": "schema", "description": "The schema to get the columns from.", "required": true, "type": "string"}, {"name": "table", "description": "The table to get the columns from.", "required": true, "type": "string"}]}]}, {"description": "Various tools for interacting with Snowflake databases and other tools.", "version": "2.0.5", "methods": [{"method_name": "cortex_llm_complete", "description": "Completes the inference for the provided message.", "parameters": [{"name": "model", "description": "The model to use", "required": true, "type": "string"}, {"name": "prompt", "description": "The prompt to use", "required": true, "type": "string"}]}, {"method_name": "cortex_agent_chat", "description": "Chat with the cortex agent.", "parameters": [{"name": "query", "description": "The query to use", "required": true, "type": "string"}]}, {"method_name": "snowflake_execute_query", "description": "Executes a specific query.", "parameters": [{"name": "query", "description": "The query to execute.", "required": true, "type": "string"}, {"name": "numeric_args", "description": "A list of numeric arguments to pass to the query.", "required": false, "type": "array"}]}, {"method_name": "snowflake_get_warehouses", "description": "Gets the warehouses in the account.", "parameters": []}, {"method_name": "snowflake_get_databases", "description": "Returns the databases in the account.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}]}, {"method_name": "snowflake_get_schemas", "description": "Get the schemas from the database.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}, {"name": "database", "description": "The database to get the schemas from.", "required": true, "type": "string"}]}, {"method_name": "snowflake_get_tables", "description": "Get the table names from the database.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}, {"name": "database", "description": "The database to get the tables from.", "required": true, "type": "string"}, {"name": "schema", "description": "The schema to get the tables from.", "required": true, "type": "string"}]}, {"method_name": "snowflake_get_columns", "description": "Get the columns in the table.", "parameters": [{"name": "warehouse", "description": "The warehouse to use.", "required": true, "type": "string"}, {"name": "database", "description": "The database to get the columns from.", "required": true, "type": "string"}, {"name": "schema", "description": "The schema to get the columns from.", "required": true, "type": "string"}, {"name": "table", "description": "The table to get the columns from.", "required": true, "type": "string"}]}]}]}, "Wayback Machine": {"name": "Wayback Machine", "versions": [{"description": "Uses the Wayback Machine to detect changes to websites.", "version": "1.0.0", "methods": [{"method_name": "get_wayback_changes", "description": "Uses the Wayback Machine to get a comma-seperated list of archive URLs for a given website within the number of days from today.", "parameters": [{"name": "url", "description": "Website to check for changes\nExample: \"https://sema4.ai\"", "required": true, "type": "string"}, {"name": "days", "description": "Number of days to go back looking for changes\nExample: \"7\"", "required": true, "type": "integer"}]}, {"method_name": "get_wayback_snapshots", "description": "Gets a list of snapshots from the Wayback Machine for a given website and number of days from today.", "parameters": [{"name": "url", "description": "Website to check for changes\nExample: \"https://sema4.ai\"", "required": true, "type": "string"}, {"name": "days", "description": "Number of days to go back looking for changes\nExample: \"7\"", "required": true, "type": "integer"}]}]}, {"description": "Uses the Wayback Machine to detect changes to websites.", "version": "1.0.1", "methods": [{"method_name": "get_wayback_changes", "description": "Uses the Wayback Machine to get a comma-seperated list of archive URLs for a given website within the number of days from today.", "parameters": [{"name": "url", "description": "Website to check for changes\nExample: \"https://sema4.ai\"", "required": true, "type": "string"}, {"name": "days", "description": "Number of days to go back looking for changes\nExample: \"7\"", "required": true, "type": "integer"}]}, {"method_name": "get_wayback_snapshots", "description": "Gets a list of snapshots from the Wayback Machine for a given website and number of days from today.", "parameters": [{"name": "url", "description": "Website to check for changes\nExample: \"https://sema4.ai\"", "required": true, "type": "string"}, {"name": "days", "description": "Number of days to go back looking for changes\nExample: \"7\"", "required": true, "type": "integer"}]}]}, {"description": "Uses the Wayback Machine to detect changes to websites.", "version": "1.0.2", "methods": [{"method_name": "get_wayback_changes", "description": "Uses the Wayback Machine to get a comma-seperated list of archive URLs for a given website within the number of days from today.", "parameters": [{"name": "url", "description": "Website to check for changes\nExample: \"https://sema4.ai\"", "required": true, "type": "string"}, {"name": "days", "description": "Number of days to go back looking for changes\nExample: \"7\"", "required": true, "type": "integer"}]}, {"method_name": "get_wayback_snapshots", "description": "Gets a list of snapshots from the Wayback Machine for a given website and number of days from today.", "parameters": [{"name": "url", "description": "Website to check for changes\nExample: \"https://sema4.ai\"", "required": true, "type": "string"}, {"name": "days", "description": "Number of days to go back looking for changes\nExample: \"7\"", "required": true, "type": "integer"}]}]}, {"description": "Uses the Wayback Machine to detect changes to websites.", "version": "1.0.3", "methods": [{"method_name": "get_wayback_changes", "description": "Uses the Wayback Machine to get a comma-seperated list of archive URLs for a given website within the number of days from today.", "parameters": [{"name": "url", "description": "Website to check for changes\nExample: \"https://sema4.ai\"", "required": true, "type": "string"}, {"name": "days", "description": "Number of days to go back looking for changes\nExample: \"7\"", "required": true, "type": "integer"}]}, {"method_name": "get_wayback_snapshots", "description": "Gets a list of snapshots from the Wayback Machine for a given website and number of days from today.", "parameters": [{"name": "url", "description": "Website to check for changes\nExample: \"https://sema4.ai\"", "required": true, "type": "string"}, {"name": "days", "description": "Number of days to go back looking for changes\nExample: \"7\"", "required": true, "type": "integer"}]}]}, {"description": "Uses the Wayback Machine to detect changes to websites.", "version": "1.1.0", "methods": [{"method_name": "get_wayback_changes", "description": "Uses the Wayback Machine to get a comma-seperated list of archive URLs for a given website within the number of days from today.", "parameters": [{"name": "url", "description": "Website to check for changes\nExample: \"https://sema4.ai\"", "required": true, "type": "string"}, {"name": "days", "description": "Number of days to go back looking for changes\nExample: \"7\"", "required": true, "type": "integer"}]}, {"method_name": "get_wayback_snapshots", "description": "Gets a list of snapshots from the Wayback Machine for a given website and number of days from today.", "parameters": [{"name": "url", "description": "Website to check for changes\nExample: \"https://sema4.ai\"", "required": true, "type": "string"}, {"name": "days", "description": "Number of days to go back looking for changes\nExample: \"7\"", "required": true, "type": "integer"}]}]}, {"description": "Uses the Wayback Machine to detect changes to websites.", "version": "1.1.1", "methods": [{"method_name": "get_wayback_changes", "description": "Uses the Wayback Machine to get a comma-seperated list of archive URLs for a given website within the number of days from today.", "parameters": [{"name": "url", "description": "Website to check for changes\nExample: \"https://sema4.ai\"", "required": true, "type": "string"}, {"name": "days", "description": "Number of days to go back looking for changes\nExample: \"7\"", "required": true, "type": "integer"}]}, {"method_name": "get_wayback_snapshots", "description": "Gets a list of snapshots from the Wayback Machine for a given website and number of days from today.", "parameters": [{"name": "url", "description": "Website to check for changes\nExample: \"https://sema4.ai\"", "required": true, "type": "string"}, {"name": "days", "description": "Number of days to go back looking for changes\nExample: \"7\"", "required": true, "type": "integer"}]}]}, {"description": "Uses the Wayback Machine to detect changes to websites.", "version": "1.1.2", "methods": [{"method_name": "get_wayback_changes", "description": "Uses the Wayback Machine to get a comma-seperated list of archive URLs for a given website within the number of days from today.", "parameters": [{"name": "url", "description": "Website to check for changes\nExample: \"https://sema4.ai\"", "required": true, "type": "string"}, {"name": "days", "description": "Number of days to go back looking for changes\nExample: \"7\"", "required": true, "type": "integer"}]}, {"method_name": "get_wayback_snapshots", "description": "Gets a list of snapshots from the Wayback Machine for a given website and number of days from today.", "parameters": [{"name": "url", "description": "Website to check for changes\nExample: \"https://sema4.ai\"", "required": true, "type": "string"}, {"name": "days", "description": "Number of days to go back looking for changes\nExample: \"7\"", "required": true, "type": "integer"}]}]}, {"description": "Uses the Wayback Machine to detect changes to websites.", "version": "1.1.3", "methods": [{"method_name": "get_wayback_changes", "description": "Uses the Wayback Machine to get a comma-seperated list of archive URLs for a given website within the number of days from today.", "parameters": [{"name": "url", "description": "Website to check for changes\nExample: \"https://sema4.ai\"", "required": true, "type": "string"}, {"name": "days", "description": "Number of days to go back looking for changes\nExample: \"7\"", "required": true, "type": "integer"}]}, {"method_name": "get_wayback_snapshots", "description": "Gets a list of snapshots from the Wayback Machine for a given website and number of days from today.", "parameters": [{"name": "url", "description": "Website to check for changes\nExample: \"https://sema4.ai\"", "required": true, "type": "string"}, {"name": "days", "description": "Number of days to go back looking for changes\nExample: \"7\"", "required": true, "type": "integer"}]}]}]}, "YouTube": {"name": "YouTube", "versions": [{"description": "Search for videos and extract various details from YouTube videos.", "version": "1.0.0", "methods": [{"method_name": "search", "description": "Searches for the YouTube videos with a search keyword.", "parameters": [{"name": "search_term", "description": "A search term for the Youtube video search, example: \"Agentic Automation\"", "required": true, "type": "string"}, {"name": "max_results", "description": "How many results to return, default 3.", "required": false, "type": "integer"}]}, {"method_name": "get_transcript", "description": "Extracts the transcription of a Youtube video. Only works if subtitles or captions are available for the video.", "parameters": [{"name": "video_url", "description": "Youtube video URL as a complete URL, example: \"https://www.youtube.com/watch?v=YOUR_VIDEO_ID\"", "required": true, "type": "string"}]}]}, {"description": "Search for videos and extract various details from YouTube videos.", "version": "1.0.1", "methods": [{"method_name": "search", "description": "Searches for the YouTube videos with a search keyword.", "parameters": [{"name": "search_term", "description": "A search term for the Youtube video search, example: \"Agentic Automation\"", "required": true, "type": "string"}, {"name": "max_results", "description": "How many results to return, default 3.", "required": false, "type": "integer"}]}, {"method_name": "get_transcript", "description": "Extracts the transcription of a Youtube video. Only works if subtitles or captions are available for the video.", "parameters": [{"name": "video_url", "description": "Youtube video URL as a complete URL, example: \"https://www.youtube.com/watch?v=YOUR_VIDEO_ID\"", "required": true, "type": "string"}]}]}, {"description": "Search for videos and extract various details from YouTube videos.", "version": "1.0.2", "methods": [{"method_name": "search", "description": "Searches for the YouTube videos with a search keyword.", "parameters": [{"name": "search_term", "description": "A search term for the Youtube video search, example: \"Agentic Automation\"", "required": true, "type": "string"}, {"name": "max_results", "description": "How many results to return, default 3.", "required": false, "type": "integer"}]}, {"method_name": "get_transcript", "description": "Extracts the transcription of a Youtube video. Only works if subtitles or captions are available for the video.", "parameters": [{"name": "video_url", "description": "Youtube video URL as a complete URL, example: \"https://www.youtube.com/watch?v=YOUR_VIDEO_ID\"", "required": true, "type": "string"}]}]}, {"description": "Search for videos and extract various details from YouTube videos.", "version": "1.0.3", "methods": [{"method_name": "search", "description": "Searches for the YouTube videos with a search keyword.", "parameters": [{"name": "search_term", "description": "A search term for the Youtube video search, example: \"Agentic Automation\"", "required": true, "type": "string"}, {"name": "max_results", "description": "How many results to return, default 3.", "required": false, "type": "integer"}]}, {"method_name": "get_transcript", "description": "Extracts the transcription of a Youtube video. Only works if subtitles or captions are available for the video.", "parameters": [{"name": "video_url", "description": "Youtube video URL as a complete URL, example: \"https://www.youtube.com/watch?v=YOUR_VIDEO_ID\"", "required": true, "type": "string"}]}]}, {"description": "Search for videos and extract various details from YouTube videos.", "version": "1.1.0", "methods": [{"method_name": "search", "description": "Searches for the YouTube videos with a search keyword.", "parameters": [{"name": "search_term", "description": "A search term for the Youtube video search, example: \"Agentic Automation\"", "required": true, "type": "string"}, {"name": "max_results", "description": "How many results to return, default 3.", "required": false, "type": "integer"}]}, {"method_name": "get_transcript", "description": "Extracts the transcription of a Youtube video. Only works if subtitles or captions are available for the video.", "parameters": [{"name": "video_url", "description": "Youtube video URL as a complete URL, example: \"https://www.youtube.com/watch?v=YOUR_VIDEO_ID\"", "required": true, "type": "string"}]}]}, {"description": "Search for videos and extract various details from YouTube videos.", "version": "1.1.1", "methods": [{"method_name": "search", "description": "Searches for the YouTube videos with a search keyword.", "parameters": [{"name": "search_term", "description": "A search term for the Youtube video search, example: \"Agentic Automation\"", "required": true, "type": "string"}, {"name": "max_results", "description": "How many results to return, default 3.", "required": false, "type": "integer"}]}, {"method_name": "get_transcript", "description": "Extracts the transcription of a Youtube video. Only works if subtitles or captions are available for the video.", "parameters": [{"name": "video_url", "description": "Youtube video URL as a complete URL, example: \"https://www.youtube.com/watch?v=YOUR_VIDEO_ID\"", "required": true, "type": "string"}]}]}, {"description": "Search for videos and extract various details from YouTube videos.", "version": "1.1.2", "methods": [{"method_name": "search", "description": "Searches for the YouTube videos with a search keyword.", "parameters": [{"name": "search_term", "description": "A search term for the Youtube video search, example: \"Agentic Automation\"", "required": true, "type": "string"}, {"name": "max_results", "description": "How many results to return, default 3.", "required": false, "type": "integer"}]}, {"method_name": "get_transcript", "description": "Extracts the transcription of a Youtube video. Only works if subtitles or captions are available for the video.", "parameters": [{"name": "video_url", "description": "Youtube video URL as a complete URL, example: \"https://www.youtube.com/watch?v=YOUR_VIDEO_ID\"", "required": true, "type": "string"}]}]}, {"description": "Search for videos and extract various details from YouTube videos.", "version": "1.1.3", "methods": [{"method_name": "search", "description": "Searches for the YouTube videos with a search keyword.", "parameters": [{"name": "search_term", "description": "A search term for the Youtube video search, example: \"Agentic Automation\"", "required": true, "type": "string"}, {"name": "max_results", "description": "How many results to return, default 3.", "required": false, "type": "integer"}]}, {"method_name": "get_transcript", "description": "Extracts the transcription of a Youtube video. Only works if subtitles or captions are available for the video.", "parameters": [{"name": "video_url", "description": "Youtube video URL as a complete URL, example: \"https://www.youtube.com/watch?v=YOUR_VIDEO_ID\"", "required": true, "type": "string"}]}]}]}, "Zendesk": {"name": "Zendesk", "versions": [{"description": "Atomic actions operating with Zendesk.", "version": "1.0.0", "methods": [{"method_name": "search_tickets", "description": "List tickets that meet the search criteria.\nYou can narrow your search results according to resource dates, and object properties, such as ticket status or tag.", "parameters": [{"name": "query", "description": "The query string following Zendesk's query syntax rules.\nDetails at: https://support.zendesk.com/hc/en-us/articles/4408886879258-Zendesk-Support-search-reference.", "required": true, "type": "string"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "Ticket id to update", "required": true, "type": "string"}, {"name": "updates", "description": "json containing the new properties of the ticket", "required": true, "type": "object"}]}, {"method_name": "get_ticket_comments", "description": "Get the comments for a ticket.\nTicket comments represent the conversation between requesters, collaborators, and agents.\nComments can be public or private.", "parameters": [{"name": "ticket_id", "description": "The ticket ID to pull comments for", "required": true, "type": "string"}]}, {"method_name": "search_users", "description": "List the users that meet the search criteria.", "parameters": [{"name": "query", "description": "The query parameter supports the Zendesk search syntax for more advanced user searches.\nIt can specify a partial or full value of any user property, including name, email address, notes, or phone.", "required": true, "type": "string"}]}, {"method_name": "add_comment", "description": "Creates a comment on a Zendesk ticket, with the author being the logged-in user.", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to add the comment to", "required": true, "type": "string"}, {"name": "comment", "description": "JSON representation of the comment to be added.", "required": true, "type": "object"}]}, {"method_name": "list_groups", "description": "List all the available groups.\nGroups serve as the core element of ticket workflow; support agents are organized into groups and tickets can be\nassigned to a group only, or to an assigned agent within a group.", "parameters": []}]}, {"description": "Operate Zendesk tickets, assignments and comments with Agents.", "version": "1.0.1", "methods": [{"method_name": "search_tickets", "description": "List tickets that meet the search criteria.\nYou can narrow your search results according to resource dates, and object properties, such as ticket status or tag.", "parameters": [{"name": "query", "description": "The query string following Zendesk's query syntax rules.\nDetails at: https://support.zendesk.com/hc/en-us/articles/4408886879258-Zendesk-Support-search-reference.", "required": true, "type": "string"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "Ticket id to update", "required": true, "type": "string"}, {"name": "updates", "description": "json containing the new properties of the ticket", "required": true, "type": "object"}]}, {"method_name": "get_ticket_comments", "description": "Get the comments for a ticket.\nTicket comments represent the conversation between requesters, collaborators, and agents.\nComments can be public or private.", "parameters": [{"name": "ticket_id", "description": "The ticket ID to pull comments for", "required": true, "type": "string"}]}, {"method_name": "search_users", "description": "List the users that meet the search criteria.", "parameters": [{"name": "query", "description": "The query parameter supports the Zendesk search syntax for more advanced user searches.\nIt can specify a partial or full value of any user property, including name, email address, notes, or phone.", "required": true, "type": "string"}]}, {"method_name": "add_comment", "description": "Creates a comment on a Zendesk ticket, with the author being the logged-in user.", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to add the comment to", "required": true, "type": "string"}, {"name": "comment", "description": "JSON representation of the comment to be added.", "required": true, "type": "object"}]}, {"method_name": "list_groups", "description": "List all the available groups.\nGroups serve as the core element of ticket workflow; support agents are organized into groups and tickets can be\nassigned to a group only, or to an assigned agent within a group.", "parameters": []}]}, {"description": "Operate Zendesk tickets, assignments and comments with Agents.", "version": "1.0.2", "methods": [{"method_name": "search_tickets", "description": "List tickets that meet the search criteria.\nYou can narrow your search results according to resource dates, and object properties, such as ticket status or tag.", "parameters": [{"name": "query", "description": "The query string following Zendesk's query syntax rules.\nDetails at: https://support.zendesk.com/hc/en-us/articles/4408886879258-Zendesk-Support-search-reference.", "required": true, "type": "string"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "Ticket id to update", "required": true, "type": "string"}, {"name": "updates", "description": "json containing the new properties of the ticket", "required": true, "type": "object"}]}, {"method_name": "get_ticket_comments", "description": "Get the comments for a ticket.\nTicket comments represent the conversation between requesters, collaborators, and agents.\nComments can be public or private.", "parameters": [{"name": "ticket_id", "description": "The ticket ID to pull comments for", "required": true, "type": "string"}]}, {"method_name": "search_users", "description": "List the users that meet the search criteria.", "parameters": [{"name": "query", "description": "The query parameter supports the Zendesk search syntax for more advanced user searches.\nIt can specify a partial or full value of any user property, including name, email address, notes, or phone.", "required": true, "type": "string"}]}, {"method_name": "add_comment", "description": "Creates a comment on a Zendesk ticket, with the author being the logged-in user.", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to add the comment to", "required": true, "type": "string"}, {"name": "comment", "description": "JSON representation of the comment to be added.", "required": true, "type": "object"}]}, {"method_name": "list_groups", "description": "List all the available groups.\nGroups serve as the core element of ticket workflow; support agents are organized into groups and tickets can be\nassigned to a group only, or to an assigned agent within a group.", "parameters": []}]}, {"description": "Operate Zendesk tickets, assignments and comments with Agents.", "version": "1.1.0", "methods": [{"method_name": "search_tickets", "description": "List tickets that meet the search criteria.\nYou can narrow your search results according to resource dates, and object properties, such as ticket status or tag.", "parameters": [{"name": "query", "description": "The query string following Zendesk's query syntax rules.\nDetails at: https://support.zendesk.com/hc/en-us/articles/4408886879258-Zendesk-Support-search-reference.", "required": true, "type": "string"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "Ticket id to update", "required": true, "type": "string"}, {"name": "updates", "description": "json containing the new properties of the ticket", "required": true, "type": "object"}]}, {"method_name": "get_ticket_comments", "description": "Get the comments for a ticket.\nTicket comments represent the conversation between requesters, collaborators, and agents.\nComments can be public or private.", "parameters": [{"name": "ticket_id", "description": "The ticket ID to pull comments for", "required": true, "type": "string"}]}, {"method_name": "search_users", "description": "List the users that meet the search criteria.", "parameters": [{"name": "query", "description": "The query parameter supports the Zendesk search syntax for more advanced user searches.\nIt can specify a partial or full value of any user property, including name, email address, notes, or phone.", "required": true, "type": "string"}]}, {"method_name": "add_comment", "description": "Creates a comment on a Zendesk ticket, with the author being the logged-in user.", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to add the comment to", "required": true, "type": "string"}, {"name": "comment", "description": "JSON representation of the comment to be added.", "required": true, "type": "object"}]}, {"method_name": "list_groups", "description": "List all the available groups.\nGroups serve as the core element of ticket workflow; support agents are organized into groups and tickets can be\nassigned to a group only, or to an assigned agent within a group.", "parameters": []}, {"method_name": "create_ticket", "description": "Create a ticket in Zendesk", "parameters": [{"name": "comment", "description": "Comment to be added to the ticket", "required": true, "type": "string"}, {"name": "priority", "description": "Priority of the ticket", "required": true, "type": "string"}, {"name": "subject", "description": "Subject of the ticket", "required": true, "type": "string"}, {"name": "tags", "description": "Tags to be added to the ticket", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Deletes a ticket in Zendesk", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to delete", "required": true, "type": "string"}]}]}, {"description": "Operate Zendesk tickets, assignments and comments with Agents.", "version": "1.1.1", "methods": [{"method_name": "search_tickets", "description": "List tickets that meet the search criteria.\nYou can narrow your search results according to resource dates, and object properties, such as ticket status or tag.", "parameters": [{"name": "query", "description": "The query string following Zendesk's query syntax rules.\nDetails at: https://support.zendesk.com/hc/en-us/articles/4408886879258-Zendesk-Support-search-reference.", "required": true, "type": "string"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "Ticket id to update", "required": true, "type": "string"}, {"name": "updates", "description": "json containing the new properties of the ticket", "required": true, "type": "object"}]}, {"method_name": "get_ticket_comments", "description": "Get the comments for a ticket.\nTicket comments represent the conversation between requesters, collaborators, and agents.\nComments can be public or private.", "parameters": [{"name": "ticket_id", "description": "The ticket ID to pull comments for", "required": true, "type": "string"}]}, {"method_name": "search_users", "description": "List the users that meet the search criteria.", "parameters": [{"name": "query", "description": "The query parameter supports the Zendesk search syntax for more advanced user searches.\nIt can specify a partial or full value of any user property, including name, email address, notes, or phone.", "required": true, "type": "string"}]}, {"method_name": "add_comment", "description": "Creates a comment on a Zendesk ticket, with the author being the logged-in user.", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to add the comment to", "required": true, "type": "string"}, {"name": "comment", "description": "JSON representation of the comment to be added.", "required": true, "type": "object"}]}, {"method_name": "list_groups", "description": "List all the available groups.\nGroups serve as the core element of ticket workflow; support agents are organized into groups and tickets can be\nassigned to a group only, or to an assigned agent within a group.", "parameters": []}, {"method_name": "create_ticket", "description": "Create a ticket in Zendesk", "parameters": [{"name": "comment", "description": "Comment to be added to the ticket", "required": true, "type": "string"}, {"name": "priority", "description": "Priority of the ticket", "required": true, "type": "string"}, {"name": "subject", "description": "Subject of the ticket", "required": true, "type": "string"}, {"name": "tags", "description": "Tags to be added to the ticket", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Deletes a ticket in Zendesk", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to delete", "required": true, "type": "string"}]}]}, {"description": "Operate Zendesk tickets, assignments and comments with Agents.", "version": "1.1.2", "methods": [{"method_name": "search_tickets", "description": "List tickets that meet the search criteria.\nYou can narrow your search results according to resource dates, and object properties, such as ticket status or tag.", "parameters": [{"name": "query", "description": "The query string following Zendesk's query syntax rules.\nDetails at: https://support.zendesk.com/hc/en-us/articles/4408886879258-Zendesk-Support-search-reference.", "required": true, "type": "string"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "Ticket id to update", "required": true, "type": "string"}, {"name": "updates", "description": "json containing the new properties of the ticket", "required": true, "type": "object"}]}, {"method_name": "get_ticket_comments", "description": "Get the comments for a ticket.\nTicket comments represent the conversation between requesters, collaborators, and agents.\nComments can be public or private.", "parameters": [{"name": "ticket_id", "description": "The ticket ID to pull comments for", "required": true, "type": "string"}]}, {"method_name": "search_users", "description": "List the users that meet the search criteria.", "parameters": [{"name": "query", "description": "The query parameter supports the Zendesk search syntax for more advanced user searches.\nIt can specify a partial or full value of any user property, including name, email address, notes, or phone.", "required": true, "type": "string"}]}, {"method_name": "add_comment", "description": "Creates a comment on a Zendesk ticket, with the author being the logged-in user.", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to add the comment to", "required": true, "type": "string"}, {"name": "comment", "description": "JSON representation of the comment to be added.", "required": true, "type": "object"}]}, {"method_name": "list_groups", "description": "List all the available groups.\nGroups serve as the core element of ticket workflow; support agents are organized into groups and tickets can be\nassigned to a group only, or to an assigned agent within a group.", "parameters": []}, {"method_name": "create_ticket", "description": "Create a ticket in Zendesk", "parameters": [{"name": "comment", "description": "Comment to be added to the ticket", "required": true, "type": "string"}, {"name": "priority", "description": "Priority of the ticket", "required": true, "type": "string"}, {"name": "subject", "description": "Subject of the ticket", "required": true, "type": "string"}, {"name": "tags", "description": "Tags to be added to the ticket", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Deletes a ticket in Zendesk", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to delete", "required": true, "type": "string"}]}]}, {"description": "Operate Zendesk tickets, assignments and comments with Agents.", "version": "1.2.0", "methods": [{"method_name": "search_tickets", "description": "List tickets that meet the search criteria.\nYou can narrow your search results according to resource dates, and object properties, such as ticket status or tag.", "parameters": [{"name": "query", "description": "The query string following Zendesk's query syntax rules.\nDetails at: https://support.zendesk.com/hc/en-us/articles/4408886879258-Zendesk-Support-search-reference.", "required": true, "type": "string"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "Ticket id to update", "required": true, "type": "string"}, {"name": "updates", "description": "json containing the new properties of the ticket", "required": true, "type": "object"}]}, {"method_name": "get_ticket_comments", "description": "Get the comments for a ticket.\nTicket comments represent the conversation between requesters, collaborators, and agents.\nComments can be public or private.", "parameters": [{"name": "ticket_id", "description": "The ticket ID to pull comments for", "required": true, "type": "string"}]}, {"method_name": "search_users", "description": "List the users that meet the search criteria.", "parameters": [{"name": "query", "description": "The query parameter supports the Zendesk search syntax for more advanced user searches.\nIt can specify a partial or full value of any user property, including name, email address, notes, or phone.", "required": true, "type": "string"}]}, {"method_name": "add_comment", "description": "Creates a comment on a Zendesk ticket, with the author being the logged-in user.", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to add the comment to", "required": true, "type": "string"}, {"name": "comment", "description": "JSON representation of the comment to be added.", "required": true, "type": "object"}]}, {"method_name": "list_groups", "description": "List all the available groups.\nGroups serve as the core element of ticket workflow; support agents are organized into groups and tickets can be\nassigned to a group only, or to an assigned agent within a group.", "parameters": []}, {"method_name": "create_ticket", "description": "Create a ticket in Zendesk", "parameters": [{"name": "comment", "description": "Comment to be added to the ticket", "required": true, "type": "string"}, {"name": "priority", "description": "Priority of the ticket", "required": true, "type": "string"}, {"name": "subject", "description": "Subject of the ticket", "required": true, "type": "string"}, {"name": "tags", "description": "Tags to be added to the ticket", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Deletes a ticket in Zendesk", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to delete", "required": true, "type": "string"}]}]}, {"description": "Operate Zendesk tickets, assignments and comments with Agents.", "version": "1.2.1", "methods": [{"method_name": "search_tickets", "description": "List tickets that meet the search criteria.\nYou can narrow your search results according to resource dates, and object properties, such as ticket status or tag.", "parameters": [{"name": "query", "description": "The query string following Zendesk's query syntax rules.\nDetails at: https://support.zendesk.com/hc/en-us/articles/4408886879258-Zendesk-Support-search-reference.", "required": true, "type": "string"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "Ticket id to update", "required": true, "type": "string"}, {"name": "updates", "description": "json containing the new properties of the ticket", "required": true, "type": "object"}]}, {"method_name": "get_ticket_comments", "description": "Get the comments for a ticket.\nTicket comments represent the conversation between requesters, collaborators, and agents.\nComments can be public or private.", "parameters": [{"name": "ticket_id", "description": "The ticket ID to pull comments for", "required": true, "type": "string"}]}, {"method_name": "search_users", "description": "List the users that meet the search criteria.", "parameters": [{"name": "query", "description": "The query parameter supports the Zendesk search syntax for more advanced user searches.\nIt can specify a partial or full value of any user property, including name, email address, notes, or phone.", "required": true, "type": "string"}]}, {"method_name": "add_comment", "description": "Creates a comment on a Zendesk ticket, with the author being the logged-in user.", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to add the comment to", "required": true, "type": "string"}, {"name": "comment", "description": "JSON representation of the comment to be added.", "required": true, "type": "object"}]}, {"method_name": "list_groups", "description": "List all the available groups.\nGroups serve as the core element of ticket workflow; support agents are organized into groups and tickets can be\nassigned to a group only, or to an assigned agent within a group.", "parameters": []}, {"method_name": "create_ticket", "description": "Create a ticket in Zendesk", "parameters": [{"name": "comment", "description": "Comment to be added to the ticket", "required": true, "type": "string"}, {"name": "priority", "description": "Priority of the ticket", "required": true, "type": "string"}, {"name": "subject", "description": "Subject of the ticket", "required": true, "type": "string"}, {"name": "tags", "description": "Tags to be added to the ticket", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Deletes a ticket in Zendesk", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to delete", "required": true, "type": "string"}]}]}, {"description": "Operate Zendesk tickets, assignments and comments with Agents.", "version": "1.3.0", "methods": [{"method_name": "search_tickets", "description": "List tickets that meet the search criteria.\nYou can narrow your search results according to resource dates, and object properties, such as ticket status or tag.", "parameters": [{"name": "query", "description": "The query string following Zendesk's query syntax rules.\nDetails at: https://support.zendesk.com/hc/en-us/articles/4408886879258-Zendesk-Support-search-reference.", "required": true, "type": "string"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "Ticket id to update", "required": true, "type": "string"}, {"name": "updates", "description": "json containing the new properties of the ticket", "required": true, "type": "object"}]}, {"method_name": "get_ticket_comments", "description": "Get the comments for a ticket.\nTicket comments represent the conversation between requesters, collaborators, and agents.\nComments can be public or private.", "parameters": [{"name": "ticket_id", "description": "The ticket ID to pull comments for", "required": true, "type": "string"}]}, {"method_name": "search_users", "description": "List the users that meet the search criteria.", "parameters": [{"name": "query", "description": "The query parameter supports the Zendesk search syntax for more advanced user searches.\nIt can specify a partial or full value of any user property, including name, email address, notes, or phone.", "required": true, "type": "string"}]}, {"method_name": "add_comment", "description": "Creates a comment on a Zendesk ticket, with the author being the logged-in user.", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to add the comment to", "required": true, "type": "string"}, {"name": "comment", "description": "JSON representation of the comment to be added.", "required": true, "type": "object"}]}, {"method_name": "list_groups", "description": "List all the available groups.\nGroups serve as the core element of ticket workflow; support agents are organized into groups and tickets can be\nassigned to a group only, or to an assigned agent within a group.", "parameters": []}, {"method_name": "create_ticket", "description": "Create a ticket in Zendesk", "parameters": [{"name": "comment", "description": "Comment to be added to the ticket", "required": true, "type": "string"}, {"name": "priority", "description": "Priority of the ticket", "required": true, "type": "string"}, {"name": "subject", "description": "Subject of the ticket", "required": true, "type": "string"}, {"name": "tags", "description": "Tags to be added to the ticket", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Deletes a ticket in Zendesk", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to delete", "required": true, "type": "string"}]}]}, {"description": "Operate Zendesk tickets, assignments and comments with Agents.", "version": "1.4.0", "methods": [{"method_name": "search_tickets", "description": "List tickets that meet the search criteria.\nYou can narrow your search results according to resource dates, and object properties, such as ticket status or tag.\nWhen searching for ticket never prefix it, use only number.", "parameters": [{"name": "query", "description": "The query string following Zendesk's query syntax rules.\nDetails at: https://support.zendesk.com/hc/en-us/articles/4408886879258-Zendesk-Support-search-reference.", "required": true, "type": "string"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "Ticket id to update", "required": true, "type": "string"}, {"name": "updates", "description": "json containing the new properties of the ticket", "required": true, "type": "object"}]}, {"method_name": "get_ticket_comments", "description": "Get the comments for a ticket.\nTicket comments represent the conversation between requesters, collaborators, and agents.\nComments can be public or private.", "parameters": [{"name": "ticket_id", "description": "The ticket ID to pull comments for", "required": true, "type": "string"}]}, {"method_name": "search_users", "description": "List the users that meet the search criteria.", "parameters": [{"name": "query", "description": "The query parameter supports the Zendesk search syntax for more advanced user searches.\nIt can specify a partial or full value of any user property, including name, email address, notes, or phone.", "required": true, "type": "string"}]}, {"method_name": "add_comment", "description": "Creates a comment on a Zendesk ticket, with the author being the logged-in user.", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to add the comment to", "required": true, "type": "string"}, {"name": "comment", "description": "JSON representation of the comment to be added.", "required": true, "type": "object"}]}, {"method_name": "list_groups", "description": "List all the available groups.\nGroups serve as the core element of ticket workflow; support agents are organized into groups and tickets can be\nassigned to a group only, or to an assigned agent within a group.", "parameters": []}, {"method_name": "create_ticket", "description": "Create a ticket in Zendesk", "parameters": [{"name": "comment", "description": "Comment to be added to the ticket", "required": true, "type": "string"}, {"name": "priority", "description": "Priority of the ticket", "required": true, "type": "string"}, {"name": "subject", "description": "Subject of the ticket", "required": true, "type": "string"}, {"name": "tags", "description": "Tags to be added to the ticket", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Deletes a ticket in Zendesk", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to delete", "required": true, "type": "string"}]}]}, {"description": "Operate Zendesk tickets, assignments and comments with Agents.", "version": "1.5.0", "methods": [{"method_name": "search_tickets", "description": "List tickets that meet the search criteria.\nYou can narrow your search results according to resource dates, and object properties, such as ticket status or tag.\nWhen searching for ticket never prefix it, use only number.", "parameters": [{"name": "query", "description": "The query string following Zendesk's query syntax rules.\nDetails at: https://support.zendesk.com/hc/en-us/articles/4408886879258-Zendesk-Support-search-reference.", "required": true, "type": "string"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "Ticket id to update", "required": true, "type": "string"}, {"name": "updates", "description": "json containing the new properties of the ticket", "required": true, "type": "object"}]}, {"method_name": "get_ticket_comments", "description": "Get the comments for a ticket.\nTicket comments represent the conversation between requesters, collaborators, and agents.\nComments can be public or private.", "parameters": [{"name": "ticket_id", "description": "The ticket ID to pull comments for", "required": true, "type": "string"}]}, {"method_name": "search_users", "description": "List the users that meet the search criteria.", "parameters": [{"name": "query", "description": "The query parameter supports the Zendesk search syntax for more advanced user searches.\nIt can specify a partial or full value of any user property, including name, email address, notes, or phone.", "required": true, "type": "string"}]}, {"method_name": "add_comment", "description": "Creates a comment on a Zendesk ticket, with the author being the logged-in user.", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to add the comment to", "required": true, "type": "string"}, {"name": "comment", "description": "JSON representation of the comment to be added.", "required": true, "type": "object"}]}, {"method_name": "list_groups", "description": "List all the available groups.\nGroups serve as the core element of ticket workflow; support agents are organized into groups and tickets can be\nassigned to a group only, or to an assigned agent within a group.", "parameters": []}, {"method_name": "create_ticket", "description": "Create a ticket in Zendesk", "parameters": [{"name": "comment", "description": "Comment to be added to the ticket", "required": true, "type": "string"}, {"name": "priority", "description": "Priority of the ticket", "required": true, "type": "string"}, {"name": "subject", "description": "Subject of the ticket", "required": true, "type": "string"}, {"name": "tags", "description": "Tags to be added to the ticket", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Deletes a ticket in Zendesk", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to delete", "required": true, "type": "string"}]}, {"method_name": "list_tags", "description": "Lists up to 100 most popular tags in the last 60 days, in decreasing popularity.", "parameters": []}]}, {"description": "Operate Zendesk tickets, assignments and comments with Agents.", "version": "1.5.1", "methods": [{"method_name": "search_tickets", "description": "List tickets that meet the search criteria.\nYou can narrow your search results according to resource dates, and object properties, such as ticket status or tag.\nWhen searching for ticket never prefix it, use only number.", "parameters": [{"name": "query", "description": "The query string following Zendesk's query syntax rules.\nDetails at: https://support.zendesk.com/hc/en-us/articles/4408886879258-Zendesk-Support-search-reference.", "required": true, "type": "string"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "Ticket id to update", "required": true, "type": "string"}, {"name": "updates", "description": "json containing the new properties of the ticket", "required": true, "type": "object"}]}, {"method_name": "get_ticket_comments", "description": "Get the comments for a ticket.\nTicket comments represent the conversation between requesters, collaborators, and agents.\nComments can be public or private.", "parameters": [{"name": "ticket_id", "description": "The ticket ID to pull comments for", "required": true, "type": "string"}]}, {"method_name": "search_users", "description": "List the users that meet the search criteria.", "parameters": [{"name": "query", "description": "The query parameter supports the Zendesk search syntax for more advanced user searches.\nIt can specify a partial or full value of any user property, including name, email address, notes, or phone.", "required": true, "type": "string"}]}, {"method_name": "add_comment", "description": "Creates a comment on a Zendesk ticket, with the author being the logged-in user.", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to add the comment to", "required": true, "type": "string"}, {"name": "comment", "description": "JSON representation of the comment to be added.", "required": true, "type": "object"}]}, {"method_name": "list_groups", "description": "List all the available groups.\nGroups serve as the core element of ticket workflow; support agents are organized into groups and tickets can be\nassigned to a group only, or to an assigned agent within a group.", "parameters": []}, {"method_name": "create_ticket", "description": "Create a ticket in Zendesk", "parameters": [{"name": "comment", "description": "Comment to be added to the ticket", "required": true, "type": "string"}, {"name": "priority", "description": "Priority of the ticket", "required": true, "type": "string"}, {"name": "subject", "description": "Subject of the ticket", "required": true, "type": "string"}, {"name": "tags", "description": "Tags to be added to the ticket", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Deletes a ticket in Zendesk", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to delete", "required": true, "type": "string"}]}, {"method_name": "list_tags", "description": "Lists up to 100 most popular tags in the last 60 days, in decreasing popularity.", "parameters": []}]}, {"description": "Operate Zendesk tickets, assignments and comments with Agents.", "version": "1.5.2", "methods": [{"method_name": "search_tickets", "description": "List tickets that meet the search criteria.\nYou can narrow your search results according to resource dates, and object properties, such as ticket status or tag.\nWhen searching for ticket never prefix it, use only number.", "parameters": [{"name": "query", "description": "The query string following Zendesk's query syntax rules.\nDetails at: https://support.zendesk.com/hc/en-us/articles/4408886879258-Zendesk-Support-search-reference.", "required": true, "type": "string"}]}, {"method_name": "update_ticket", "description": "Update an existing ticket.", "parameters": [{"name": "ticket_id", "description": "Ticket id to update", "required": true, "type": "string"}, {"name": "updates", "description": "json containing the new properties of the ticket", "required": true, "type": "object"}]}, {"method_name": "get_ticket_comments", "description": "Get the comments for a ticket.\nTicket comments represent the conversation between requesters, collaborators, and agents.\nComments can be public or private.", "parameters": [{"name": "ticket_id", "description": "The ticket ID to pull comments for", "required": true, "type": "string"}]}, {"method_name": "search_users", "description": "List the users that meet the search criteria.", "parameters": [{"name": "query", "description": "The query parameter supports the Zendesk search syntax for more advanced user searches.\nIt can specify a partial or full value of any user property, including name, email address, notes, or phone.", "required": true, "type": "string"}]}, {"method_name": "add_comment", "description": "Creates a comment on a Zendesk ticket, with the author being the logged-in user.", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to add the comment to", "required": true, "type": "string"}, {"name": "comment", "description": "JSON representation of the comment to be added.", "required": true, "type": "object"}]}, {"method_name": "list_groups", "description": "List all the available groups.\nGroups serve as the core element of ticket workflow; support agents are organized into groups and tickets can be\nassigned to a group only, or to an assigned agent within a group.", "parameters": []}, {"method_name": "create_ticket", "description": "Create a ticket in Zendesk", "parameters": [{"name": "comment", "description": "Comment to be added to the ticket", "required": true, "type": "string"}, {"name": "priority", "description": "Priority of the ticket", "required": true, "type": "string"}, {"name": "subject", "description": "Subject of the ticket", "required": true, "type": "string"}, {"name": "tags", "description": "Tags to be added to the ticket", "required": true, "type": "string"}]}, {"method_name": "delete_ticket", "description": "Deletes a ticket in Zendesk", "parameters": [{"name": "ticket_id", "description": "The unique identifier of the ticket to delete", "required": true, "type": "string"}]}, {"method_name": "list_tags", "description": "Lists up to 100 most popular tags in the last 60 days, in decreasing popularity.", "parameters": []}]}]}}, "organization": "Sema4.ai", "total_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"}